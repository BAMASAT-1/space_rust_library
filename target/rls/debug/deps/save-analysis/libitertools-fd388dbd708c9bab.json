{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19","program":"/home/jsmartini/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","itertools","/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=fd388dbd708c9bab","-C","extra-filename=-fd388dbd708c9bab","--out-dir","/home/jsmartini/CubeSat-Team-2021/space_rust_library/target/rls/debug/deps","-L","dependency=/home/jsmartini/CubeSat-Team-2021/space_rust_library/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/jsmartini/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/jsmartini/CubeSat-Team-2021/space_rust_library/target/rls/debug/deps/libitertools-fd388dbd708c9bab.rmeta"},"prelude":{"crate_id":{"name":"itertools","disambiguator":[11087597017989983136,10207777373953753579]},"crate_root":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src","external_crates":[{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16244594805693024294,13769610595479902485]}},{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9461532395471723626,17649752992216879242]}},{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13102141027849022754,10844956084955862736]}},{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10802439125609973726,12056872925128751599]}},{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10377672983135696745,6222977342718677897]}},{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12556834526510219591,10145975442274216472]}},{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1920608168423631117,11305390197699278538]}},{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14153420169627805217,3922141685752559776]}},{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[8992588241071530954,2055378767109441873]}},{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6584924783227651491,7746393078969085327]}},{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16866912217167506759,12404743428505733407]}},{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[5891363554589716223,15364815277334307594]}},{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[15133864894733438722,17571364763769299029]}},{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[5376887079506337588,3050710466351220396]}},{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[3374711390048344050,17348866986865533303]}},{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[16389676859204901274,11575250456210569958]}},{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[4785159557203218631,3838940703516147450]}}],"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":0,"byte_end":54397,"line_start":1,"line_end":1685,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":405},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1284,"byte_end":1289,"line_start":45,"line_end":45,"column_start":5,"column_end":10},"alias_span":null,"name":"Dedup","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1541},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1295,"byte_end":1305,"line_start":46,"line_end":46,"column_start":5,"column_end":15},"alias_span":null,"name":"Interleave","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1551},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1311,"byte_end":1329,"line_start":47,"line_end":47,"column_start":5,"column_end":23},"alias_span":null,"name":"InterleaveShortest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1568},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1335,"byte_end":1342,"line_start":48,"line_end":48,"column_start":5,"column_end":12},"alias_span":null,"name":"Product","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1561},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1348,"byte_end":1355,"line_start":49,"line_end":49,"column_start":5,"column_end":12},"alias_span":null,"name":"PutBack","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":254},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1361,"byte_end":1369,"line_start":50,"line_end":50,"column_start":5,"column_end":13},"alias_span":null,"name":"PutBackN","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1579},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1375,"byte_end":1383,"line_start":51,"line_end":51,"column_start":5,"column_end":13},"alias_span":null,"name":"Batching","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1588},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1389,"byte_end":1396,"line_start":52,"line_end":52,"column_start":5,"column_end":12},"alias_span":null,"name":"GroupBy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1601},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1402,"byte_end":1406,"line_start":53,"line_end":53,"column_start":5,"column_end":9},"alias_span":null,"name":"Step","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":330},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1412,"byte_end":1417,"line_start":54,"line_end":54,"column_start":5,"column_end":10},"alias_span":null,"name":"Merge","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":348},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1423,"byte_end":1430,"line_start":55,"line_end":55,"column_start":5,"column_end":12},"alias_span":null,"name":"MergeBy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1608},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1436,"byte_end":1445,"line_start":56,"line_end":56,"column_start":5,"column_end":14},"alias_span":null,"name":"MultiPeek","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":434},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1451,"byte_end":1463,"line_start":57,"line_end":57,"column_start":5,"column_end":17},"alias_span":null,"name":"TakeWhileRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1623},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1469,"byte_end":1478,"line_start":58,"line_end":58,"column_start":5,"column_end":14},"alias_span":null,"name":"WhileSome","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":386},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1484,"byte_end":1492,"line_start":59,"line_end":59,"column_start":5,"column_end":13},"alias_span":null,"name":"Coalesce","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":420},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1498,"byte_end":1508,"line_start":60,"line_end":60,"column_start":5,"column_end":15},"alias_span":null,"name":"MendSlices","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1629},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1514,"byte_end":1526,"line_start":61,"line_end":61,"column_start":5,"column_end":17},"alias_span":null,"name":"Combinations","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":486},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1532,"byte_end":1545,"line_start":62,"line_end":62,"column_start":5,"column_end":18},"alias_span":null,"name":"CombinationsN","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1649},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1551,"byte_end":1557,"line_start":63,"line_end":63,"column_start":5,"column_end":11},"alias_span":null,"name":"Unique","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1637},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1563,"byte_end":1571,"line_start":64,"line_end":64,"column_start":5,"column_end":13},"alias_span":null,"name":"UniqueBy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":518},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1577,"byte_end":1584,"line_start":65,"line_end":65,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":865},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1752,"byte_end":1761,"line_start":70,"line_end":70,"column_start":16,"column_end":25},"alias_span":null,"name":"diff_with","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":849},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1763,"byte_end":1767,"line_start":70,"line_end":70,"column_start":27,"column_end":31},"alias_span":null,"name":"Diff","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":618},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1787,"byte_end":1793,"line_start":71,"line_end":71,"column_start":18,"column_end":24},"alias_span":null,"name":"Format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1655},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1795,"byte_end":1808,"line_start":71,"line_end":71,"column_start":26,"column_end":39},"alias_span":null,"name":"FormatDefault","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":566},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1826,"byte_end":1835,"line_start":72,"line_end":72,"column_start":16,"column_end":25},"alias_span":null,"name":"enumerate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":568},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1837,"byte_end":1840,"line_start":72,"line_end":72,"column_start":27,"column_end":30},"alias_span":null,"name":"rev","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":770},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1865,"byte_end":1875,"line_start":73,"line_end":73,"column_start":23,"column_end":33},"alias_span":null,"name":"ChunksLazy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":794},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1877,"byte_end":1882,"line_start":73,"line_end":73,"column_start":35,"column_end":40},"alias_span":null,"name":"Chunk","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":784},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1884,"byte_end":1890,"line_start":73,"line_end":73,"column_start":42,"column_end":48},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":709},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1892,"byte_end":1903,"line_start":73,"line_end":73,"column_start":50,"column_end":61},"alias_span":null,"name":"GroupByLazy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":747},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1905,"byte_end":1910,"line_start":73,"line_end":73,"column_start":63,"column_end":68},"alias_span":null,"name":"Group","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":733},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1912,"byte_end":1918,"line_start":73,"line_end":73,"column_start":70,"column_end":76},"alias_span":null,"name":"Groups","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1702},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1942,"byte_end":1953,"line_start":74,"line_end":74,"column_start":22,"column_end":33},"alias_span":null,"name":"Intersperse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1710},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1971,"byte_end":1977,"line_start":75,"line_end":75,"column_start":17,"column_end":23},"alias_span":null,"name":"ISlice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":916},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1995,"byte_end":2001,"line_start":76,"line_end":76,"column_start":17,"column_end":23},"alias_span":null,"name":"KMerge","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":958},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":2107,"byte_end":2115,"line_start":78,"line_end":78,"column_start":20,"column_end":28},"alias_span":null,"name":"linspace","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1720},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":2117,"byte_end":2125,"line_start":78,"line_end":78,"column_start":30,"column_end":38},"alias_span":null,"name":"Linspace","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1732},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":2144,"byte_end":2156,"line_start":79,"line_end":79,"column_start":17,"column_end":29},"alias_span":null,"name":"MinMaxResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1888},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":2176,"byte_end":2184,"line_start":80,"line_end":80,"column_start":19,"column_end":27},"alias_span":null,"name":"PadUsing","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1095},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":2202,"byte_end":2208,"line_start":81,"line_end":81,"column_start":17,"column_end":23},"alias_span":null,"name":"RcIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1120},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":2227,"byte_end":2234,"line_start":82,"line_end":82,"column_start":18,"column_end":25},"alias_span":null,"name":"RepeatN","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1138},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":2254,"byte_end":2264,"line_start":83,"line_end":83,"column_start":19,"column_end":29},"alias_span":null,"name":"RepeatCall","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1899},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":2266,"byte_end":2272,"line_start":83,"line_end":83,"column_start":31,"column_end":37},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1205},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":2376,"byte_end":2382,"line_start":85,"line_end":85,"column_start":17,"column_end":23},"alias_span":null,"name":"Stride","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1222},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":2485,"byte_end":2494,"line_start":87,"line_end":87,"column_start":17,"column_end":26},"alias_span":null,"name":"StrideMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1279},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":2509,"byte_end":2512,"line_start":88,"line_end":88,"column_start":14,"column_end":17},"alias_span":null,"name":"Tee","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1984},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":2530,"byte_end":2535,"line_start":89,"line_end":89,"column_start":17,"column_end":22},"alias_span":null,"name":"ZipEq","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1993},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":2559,"byte_end":2569,"line_start":90,"line_end":90,"column_start":23,"column_end":33},"alias_span":null,"name":"ZipLongest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2002},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":2571,"byte_end":2583,"line_start":90,"line_end":90,"column_start":35,"column_end":47},"alias_span":null,"name":"EitherOrBoth","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2038},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":2604,"byte_end":2607,"line_start":91,"line_end":91,"column_start":19,"column_end":22},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2251},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":2884,"byte_end":2893,"line_start":96,"line_end":96,"column_start":20,"column_end":29},"alias_span":null,"name":"ZipSlices","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":0,"byte_end":54397,"line_start":1,"line_end":1685,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":536},{"krate":0,"index":611},{"krate":0,"index":642},{"krate":0,"index":809},{"krate":0,"index":824},{"krate":0,"index":845},{"krate":0,"index":870},{"krate":0,"index":931},{"krate":0,"index":960},{"krate":0,"index":969},{"krate":0,"index":1061},{"krate":0,"index":1085},{"krate":0,"index":1119},{"krate":0,"index":1137},{"krate":0,"index":1167},{"krate":0,"index":1185},{"krate":0,"index":1260},{"krate":0,"index":1292},{"krate":0,"index":1308},{"krate":0,"index":1352},{"krate":0,"index":1363},{"krate":0,"index":1399},{"krate":0,"index":1404},{"krate":0,"index":1511},{"krate":0,"index":1513},{"krate":0,"index":1516},{"krate":0,"index":1519},{"krate":0,"index":1524},{"krate":0,"index":1533}],"decl_id":null,"docs":" Itertools — extra iterator adaptors, functions and macros.","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"crate_name = \"itertools\"","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":157,"byte_end":183,"line_start":7,"line_end":7,"column_start":1,"column_end":27}},{"value":"/ Itertools — extra iterator adaptors, functions and macros.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":185,"byte_end":249,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":250,"byte_end":253,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ To use the iterator methods in this crate, import the [`Itertools` trait](./trait.Itertools.html):","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":254,"byte_end":356,"line_start":11,"line_end":11,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":357,"byte_end":360,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":361,"byte_end":374,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":375,"byte_end":404,"line_start":14,"line_end":14,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":405,"byte_end":412,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":413,"byte_end":416,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Some iterators or adaptors are used directly like regular structs, for example","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":417,"byte_end":499,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ [`PutBack`](./struct.PutBack.html), [`Unfold`](./struct.Unfold.html),","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":500,"byte_end":573,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ [`Zip`](./struct.Zip.html), [`Stride`](./struct.Stride.html)","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":574,"byte_end":638,"line_start":19,"line_end":19,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":639,"byte_end":642,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ To enable the macros in this crate, use the `#[macro_use]` attribute:","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":643,"byte_end":716,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":717,"byte_end":720,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":721,"byte_end":734,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"/ #[macro_use] extern crate itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":735,"byte_end":775,"line_start":24,"line_end":24,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":776,"byte_end":783,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":784,"byte_end":787,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ## License","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":788,"byte_end":802,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/ Dual-licensed to be compatible with the Rust project.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":803,"byte_end":860,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":861,"byte_end":864,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Licensed under the Apache License, Version 2.0","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":865,"byte_end":915,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ http://www.apache.org/licenses/LICENSE-2.0 or the MIT license","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":916,"byte_end":981,"line_start":31,"line_end":31,"column_start":1,"column_end":66}},{"value":"/ http://opensource.org/licenses/MIT, at your","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":982,"byte_end":1029,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ option. This file may not be copied, modified, or distributed","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1030,"byte_end":1095,"line_start":33,"line_end":33,"column_start":1,"column_end":66}},{"value":"/ except according to those terms.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1096,"byte_end":1132,"line_start":34,"line_end":34,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1133,"byte_end":1136,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":1137,"byte_end":1140,"line_start":36,"line_end":36,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1541},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":55389,"byte_end":55399,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"name":"Interleave","qualname":"::adaptors::Interleave","value":"Interleave {  }","parent":null,"children":[{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1546}],"decl_id":null,"docs":" An iterator adaptor that alternates elements from two iterators until both\n run out.","sig":null,"attributes":[{"value":"/ An iterator adaptor that alternates elements from two iterators until both","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":55143,"byte_end":55221,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ run out.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":55222,"byte_end":55234,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":55235,"byte_end":55238,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":55239,"byte_end":55268,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":55269,"byte_end":55272,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ See [`.interleave()`](trait.Itertools.html#method.interleave) for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":55273,"byte_end":55360,"line_start":35,"line_end":35,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":55588,"byte_end":55591,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"new","qualname":"<Interleave<I, J>>::new","value":"pub fn new(I, J) -> Interleave<I, J>","parent":null,"children":[],"decl_id":null,"docs":" Creat a new `Interleave` iterator.\n","sig":null,"attributes":[{"value":"/ Creat a new `Interleave` iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":55538,"byte_end":55576,"line_start":47,"line_end":47,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1551},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":56521,"byte_end":56539,"line_start":87,"line_end":87,"column_start":12,"column_end":30},"name":"InterleaveShortest","qualname":"::adaptors::InterleaveShortest","value":"InterleaveShortest {  }","parent":null,"children":[{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1556}],"decl_id":null,"docs":" An iterator adaptor that alternates elements from the two iterators until\n one of them runs out.","sig":null,"attributes":[{"value":"/ An iterator adaptor that alternates elements from the two iterators until","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":56241,"byte_end":56318,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ one of them runs out.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":56319,"byte_end":56344,"line_start":80,"line_end":80,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":56345,"byte_end":56348,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":56349,"byte_end":56378,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":56379,"byte_end":56382,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ See [`.interleave_shortest()`](trait.Itertools.html#method.interleave_shortest)","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":56383,"byte_end":56466,"line_start":84,"line_end":84,"column_start":1,"column_end":84}},{"value":"/ for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":56467,"byte_end":56492,"line_start":85,"line_end":85,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":56846,"byte_end":56849,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"new","qualname":"<InterleaveShortest<I, J>>::new","value":"pub fn new(I, J) -> InterleaveShortest<I, J>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `InterleaveShortest` iterator.\n","sig":null,"attributes":[{"value":"/ Create a new `InterleaveShortest` iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":56787,"byte_end":56834,"line_start":100,"line_end":100,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1561},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":58732,"byte_end":58739,"line_start":164,"line_end":164,"column_start":12,"column_end":19},"name":"PutBack","qualname":"::adaptors::PutBack","value":"PutBack {  }","parent":null,"children":[{"krate":0,"index":1563},{"krate":0,"index":1564}],"decl_id":null,"docs":" An iterator adaptor that allows putting back a single\n item to the front of the iterator.","sig":null,"attributes":[{"value":"/ An iterator adaptor that allows putting back a single","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":58580,"byte_end":58637,"line_start":160,"line_end":160,"column_start":1,"column_end":58}},{"value":"/ item to the front of the iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":58638,"byte_end":58676,"line_start":161,"line_end":161,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":58677,"byte_end":58680,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":58681,"byte_end":58720,"line_start":163,"line_end":163,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":58914,"byte_end":58917,"line_start":176,"line_end":176,"column_start":12,"column_end":15},"name":"new","qualname":"<PutBack<I>>::new","value":"pub fn new(I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Iterator element type is `A`\n","sig":null,"attributes":[{"value":"/ Iterator element type is `A`","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":58856,"byte_end":58888,"line_start":174,"line_end":174,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":58893,"byte_end":58902,"line_start":175,"line_end":175,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":59103,"byte_end":59113,"line_start":185,"line_end":185,"column_start":12,"column_end":22},"name":"with_value","qualname":"<PutBack<I>>::with_value","value":"pub fn with_value(I::Item, I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `PutBack` along with the `value` to put back.\n","sig":null,"attributes":[{"value":"/ Create a `PutBack` along with the `value` to put back.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":59019,"byte_end":59077,"line_start":183,"line_end":183,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":59082,"byte_end":59091,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":59303,"byte_end":59313,"line_start":194,"line_end":194,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<PutBack<I>>::into_parts","value":"pub fn into_parts(Self) -> (Option<I::Item>, I)","parent":null,"children":[],"decl_id":null,"docs":" Split the `PutBack` into its parts.\n","sig":null,"attributes":[{"value":"/ Split the `PutBack` into its parts.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":59238,"byte_end":59277,"line_start":192,"line_end":192,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":59282,"byte_end":59291,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":59578,"byte_end":59586,"line_start":203,"line_end":203,"column_start":12,"column_end":20},"name":"put_back","qualname":"<PutBack<I>>::put_back","value":"pub fn put_back(&mut Self, I::Item)","parent":null,"children":[],"decl_id":null,"docs":" Put back a single value to the front of the iterator.","sig":null,"attributes":[{"value":"/ Put back a single value to the front of the iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":59416,"byte_end":59473,"line_start":199,"line_end":199,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":59478,"byte_end":59481,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ If a value is already in the put back slot, it is overwritten.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":59486,"byte_end":59552,"line_start":201,"line_end":201,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":59557,"byte_end":59566,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":254},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":60279,"byte_end":60287,"line_start":230,"line_end":230,"column_start":12,"column_end":20},"name":"PutBackN","qualname":"::adaptors::PutBackN","value":"PutBackN {  }","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257}],"decl_id":null,"docs":" An iterator adaptor that allows putting multiple\n items in front of the iterator.","sig":null,"attributes":[{"value":"/ An iterator adaptor that allows putting multiple","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":60135,"byte_end":60187,"line_start":226,"line_end":226,"column_start":1,"column_end":53}},{"value":"/ items in front of the iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":60188,"byte_end":60223,"line_start":227,"line_end":227,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":60224,"byte_end":60227,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":60228,"byte_end":60267,"line_start":229,"line_end":229,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":60436,"byte_end":60439,"line_start":238,"line_end":238,"column_start":12,"column_end":15},"name":"new","qualname":"<PutBackN<I>>::new","value":"pub fn new(I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Iterator element type is `A`\n","sig":null,"attributes":[{"value":"/ Iterator element type is `A`","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":60378,"byte_end":60410,"line_start":236,"line_end":236,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":60415,"byte_end":60424,"line_start":237,"line_end":237,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":60886,"byte_end":60894,"line_start":259,"line_end":259,"column_start":12,"column_end":20},"name":"put_back","qualname":"<PutBackN<I>>::put_back","value":"pub fn put_back(&mut Self, I::Item)","parent":null,"children":[],"decl_id":null,"docs":" Puts x in front of the iterator.\n The values are yielded in order.","sig":null,"attributes":[{"value":"/ Puts x in front of the iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":60544,"byte_end":60580,"line_start":245,"line_end":245,"column_start":5,"column_end":41}},{"value":"/ The values are yielded in order.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":60585,"byte_end":60621,"line_start":246,"line_end":246,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":60626,"byte_end":60629,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":60634,"byte_end":60645,"line_start":248,"line_end":248,"column_start":5,"column_end":16}},{"value":"/ use itertools::PutBackN;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":60650,"byte_end":60678,"line_start":249,"line_end":249,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":60683,"byte_end":60686,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let mut it = PutBackN::new(1..5);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":60691,"byte_end":60728,"line_start":251,"line_end":251,"column_start":5,"column_end":42}},{"value":"/ it.next();","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":60733,"byte_end":60747,"line_start":252,"line_end":252,"column_start":5,"column_end":19}},{"value":"/ it.put_back(1);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":60752,"byte_end":60771,"line_start":253,"line_end":253,"column_start":5,"column_end":24}},{"value":"/ it.put_back(0);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":60776,"byte_end":60795,"line_start":254,"line_end":254,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":60800,"byte_end":60803,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ assert!(itertools::equal(it, 0..5));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":60808,"byte_end":60848,"line_start":256,"line_end":256,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":60853,"byte_end":60860,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":60865,"byte_end":60874,"line_start":258,"line_end":258,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1568},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":61833,"byte_end":61840,"line_start":297,"line_end":297,"column_start":12,"column_end":19},"name":"Product","qualname":"::adaptors::Product","value":"Product {  }","parent":null,"children":[{"krate":0,"index":1571},{"krate":0,"index":1572},{"krate":0,"index":1573},{"krate":0,"index":1574}],"decl_id":null,"docs":" An iterator adaptor that iterates over the cartesian product of\n the element sets of two iterators `I` and `J`.","sig":null,"attributes":[{"value":"/ An iterator adaptor that iterates over the cartesian product of","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":61542,"byte_end":61609,"line_start":291,"line_end":291,"column_start":1,"column_end":68}},{"value":"/ the element sets of two iterators `I` and `J`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":61610,"byte_end":61660,"line_start":292,"line_end":292,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":61661,"byte_end":61664,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `(I::Item, J::Item)`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":61665,"byte_end":61715,"line_start":294,"line_end":294,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":61716,"byte_end":61719,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ See [`.cartesian_product()`](trait.Itertools.html#method.cartesian_product) for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":61720,"byte_end":61821,"line_start":296,"line_end":296,"column_start":1,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":62165,"byte_end":62168,"line_start":314,"line_end":314,"column_start":12,"column_end":15},"name":"new","qualname":"<Product<I, J>>::new","value":"pub fn new(I, J) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new cartesian product iterator","sig":null,"attributes":[{"value":"/ Create a new cartesian product iterator","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":62047,"byte_end":62090,"line_start":311,"line_end":311,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":62095,"byte_end":62098,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `(I::Item, J::Item)`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":62103,"byte_end":62153,"line_start":313,"line_end":313,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1579},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":63874,"byte_end":63882,"line_start":372,"line_end":372,"column_start":12,"column_end":20},"name":"Batching","qualname":"::adaptors::Batching","value":"Batching {  }","parent":null,"children":[{"krate":0,"index":1582},{"krate":0,"index":1583}],"decl_id":null,"docs":" A “meta iterator adaptor”. Its closure recives a reference to the iterator\n and may pick off as many elements as it likes, to produce the next iterator element.","sig":null,"attributes":[{"value":"/ A “meta iterator adaptor”. Its closure recives a reference to the iterator","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":63504,"byte_end":63586,"line_start":365,"line_end":365,"column_start":1,"column_end":79}},{"value":"/ and may pick off as many elements as it likes, to produce the next iterator element.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":63587,"byte_end":63675,"line_start":366,"line_end":366,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":63676,"byte_end":63679,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is *X*, if the return type of `F` is *Option\\<X\\>*.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":63680,"byte_end":63757,"line_start":368,"line_end":368,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":63758,"byte_end":63761,"line_start":369,"line_end":369,"column_start":1,"column_end":4}},{"value":"/ See [`.batching()`](trait.Itertools.html#method.batching) for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":63762,"byte_end":63845,"line_start":370,"line_end":370,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":63996,"byte_end":63999,"line_start":379,"line_end":379,"column_start":12,"column_end":15},"name":"new","qualname":"<Batching<I, F>>::new","value":"pub fn new(I, F) -> Batching<I, F>","parent":null,"children":[],"decl_id":null,"docs":" Create a new Batching iterator.\n","sig":null,"attributes":[{"value":"/ Create a new Batching iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":63949,"byte_end":63984,"line_start":378,"line_end":378,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1588},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":64715,"byte_end":64722,"line_start":406,"line_end":406,"column_start":12,"column_end":19},"name":"GroupBy","qualname":"::adaptors::GroupBy","value":"GroupBy {  }","parent":null,"children":[{"krate":0,"index":1592},{"krate":0,"index":1593},{"krate":0,"index":1594},{"krate":0,"index":1595}],"decl_id":null,"docs":" An iterator adaptor that groups iterator elements. Consecutive elements\n that map to the same key (“runs”), are returned as the iterator elements.","sig":null,"attributes":[{"value":"/ An iterator adaptor that groups iterator elements. Consecutive elements","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":64458,"byte_end":64533,"line_start":402,"line_end":402,"column_start":1,"column_end":76}},{"value":"/ that map to the same key (“runs”), are returned as the iterator elements.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":64534,"byte_end":64615,"line_start":403,"line_end":403,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":64616,"byte_end":64619,"line_start":404,"line_end":404,"column_start":1,"column_end":4}},{"value":"/ See [`.group_by()`](trait.Itertools.html#method.group_by) for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":64620,"byte_end":64703,"line_start":405,"line_end":405,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":64943,"byte_end":64946,"line_start":419,"line_end":419,"column_start":12,"column_end":15},"name":"new","qualname":"<GroupBy<K, I, F>>::new","value":"pub fn new(I, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `GroupBy` iterator.\n","sig":null,"attributes":[{"value":"/ Create a new `GroupBy` iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":64895,"byte_end":64931,"line_start":418,"line_end":418,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1601},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":66697,"byte_end":66701,"line_start":478,"line_end":478,"column_start":12,"column_end":16},"name":"Step","qualname":"::adaptors::Step","value":"Step {  }","parent":null,"children":[{"krate":0,"index":1603},{"krate":0,"index":1604}],"decl_id":null,"docs":" An iterator adaptor that steps a number elements in the base iterator\n for each iteration.","sig":null,"attributes":[{"value":"/ An iterator adaptor that steps a number elements in the base iterator","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":66369,"byte_end":66442,"line_start":470,"line_end":470,"column_start":1,"column_end":74}},{"value":"/ for each iteration.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":66443,"byte_end":66466,"line_start":471,"line_end":471,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":66467,"byte_end":66470,"line_start":472,"line_end":472,"column_start":1,"column_end":4}},{"value":"/ The iterator steps by yielding the next element from the base iterator,","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":66471,"byte_end":66546,"line_start":473,"line_end":473,"column_start":1,"column_end":76}},{"value":"/ then skipping forward *n-1* elements.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":66547,"byte_end":66588,"line_start":474,"line_end":474,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":66589,"byte_end":66592,"line_start":475,"line_end":475,"column_start":1,"column_end":4}},{"value":"/ See [`.step()`](trait.Itertools.html#method.step) for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":66593,"byte_end":66668,"line_start":476,"line_end":476,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":66876,"byte_end":66879,"line_start":489,"line_end":489,"column_start":12,"column_end":15},"name":"new","qualname":"<Step<I>>::new","value":"pub fn new(I, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `Step` iterator.","sig":null,"attributes":[{"value":"/ Create a `Step` iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":66790,"byte_end":66819,"line_start":486,"line_end":486,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":66824,"byte_end":66827,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the step is 0.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":66832,"byte_end":66864,"line_start":488,"line_end":488,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":330},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":69425,"byte_end":69430,"line_start":593,"line_end":593,"column_start":12,"column_end":17},"name":"Merge","qualname":"::adaptors::Merge","value":"Merge {  }","parent":null,"children":[{"krate":0,"index":333}],"decl_id":null,"docs":" An iterator adaptor that merges the two base iterators in ascending order.\n If both base iterators are sorted (ascending), the result is sorted.","sig":null,"attributes":[{"value":"/ An iterator adaptor that merges the two base iterators in ascending order.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":69133,"byte_end":69211,"line_start":587,"line_end":587,"column_start":1,"column_end":79}},{"value":"/ If both base iterators are sorted (ascending), the result is sorted.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":69212,"byte_end":69284,"line_start":588,"line_end":588,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":69285,"byte_end":69288,"line_start":589,"line_end":589,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":69289,"byte_end":69328,"line_start":590,"line_end":590,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":69329,"byte_end":69332,"line_start":591,"line_end":591,"column_start":1,"column_end":4}},{"value":"/ See [`.merge()`](trait.Itertools.html#method.merge_by) for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":69333,"byte_end":69413,"line_start":592,"line_end":592,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":348},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":70692,"byte_end":70699,"line_start":647,"line_end":647,"column_start":12,"column_end":19},"name":"MergeBy","qualname":"::adaptors::MergeBy","value":"MergeBy {  }","parent":null,"children":[{"krate":0,"index":352},{"krate":0,"index":353}],"decl_id":null,"docs":" An iterator adaptor that merges the two base iterators in ascending order.\n If both base iterators are sorted (ascending), the result is sorted.","sig":null,"attributes":[{"value":"/ An iterator adaptor that merges the two base iterators in ascending order.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":70397,"byte_end":70475,"line_start":641,"line_end":641,"column_start":1,"column_end":79}},{"value":"/ If both base iterators are sorted (ascending), the result is sorted.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":70476,"byte_end":70548,"line_start":642,"line_end":642,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":70549,"byte_end":70552,"line_start":643,"line_end":643,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":70553,"byte_end":70592,"line_start":644,"line_end":644,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":70593,"byte_end":70596,"line_start":645,"line_end":645,"column_start":1,"column_end":4}},{"value":"/ See [`.merge_by()`](trait.Itertools.html#method.merge_by) for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":70597,"byte_end":70680,"line_start":646,"line_end":646,"column_start":1,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":1608},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":73469,"byte_end":73478,"line_start":757,"line_end":757,"column_start":12,"column_end":21},"name":"MultiPeek","qualname":"::adaptors::MultiPeek","value":"MultiPeek {  }","parent":null,"children":[{"krate":0,"index":1610},{"krate":0,"index":1611},{"krate":0,"index":1612}],"decl_id":null,"docs":" An iterator adaptor that allows the user to peek at multiple `.next()`\n values without advancing itself.","sig":null,"attributes":[{"value":"/ An iterator adaptor that allows the user to peek at multiple `.next()`","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":73256,"byte_end":73330,"line_start":753,"line_end":753,"column_start":1,"column_end":75}},{"value":"/ values without advancing itself.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":73331,"byte_end":73367,"line_start":754,"line_end":754,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":73368,"byte_end":73371,"line_start":755,"line_end":755,"column_start":1,"column_end":4}},{"value":"/ See [`.multipeek()`](trait.Itertools.html#method.multipeek) for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":73372,"byte_end":73457,"line_start":756,"line_end":756,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":73652,"byte_end":73655,"line_start":767,"line_end":767,"column_start":12,"column_end":15},"name":"new","qualname":"<MultiPeek<I>>::new","value":"pub fn new(I) -> MultiPeek<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a `MultiPeek` iterator.\n","sig":null,"attributes":[{"value":"/ Create a `MultiPeek` iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":73606,"byte_end":73640,"line_start":766,"line_end":766,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":73986,"byte_end":73990,"line_start":778,"line_end":778,"column_start":12,"column_end":16},"name":"peek","qualname":"<MultiPeek<I>>::peek","value":"pub fn peek(&mut Self) -> Option<&I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Works exactly like `.next()` with the only difference that it doesn't\n advance itself. `.peek()` can be called multiple times, to peek\n further ahead.\n","sig":null,"attributes":[{"value":"/ Works exactly like `.next()` with the only difference that it doesn't","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":73806,"byte_end":73879,"line_start":775,"line_end":775,"column_start":5,"column_end":78}},{"value":"/ advance itself. `.peek()` can be called multiple times, to peek","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":73884,"byte_end":73951,"line_start":776,"line_end":776,"column_start":5,"column_end":72}},{"value":"/ further ahead.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":73956,"byte_end":73974,"line_start":777,"line_end":777,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":386},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":76091,"byte_end":76099,"line_start":862,"line_end":862,"column_start":12,"column_end":20},"name":"Coalesce","qualname":"::adaptors::Coalesce","value":"Coalesce {  }","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390}],"decl_id":null,"docs":" An iterator adaptor that may join together adjacent elements.","sig":null,"attributes":[{"value":"/ An iterator adaptor that may join together adjacent elements.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":75926,"byte_end":75991,"line_start":859,"line_end":859,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":75992,"byte_end":75995,"line_start":860,"line_end":860,"column_start":1,"column_end":4}},{"value":"/ See [`.coalesce()`](trait.Itertools.html#method.coalesce) for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":75996,"byte_end":76079,"line_start":861,"line_end":861,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":76450,"byte_end":76453,"line_start":882,"line_end":882,"column_start":12,"column_end":15},"name":"new","qualname":"<Coalesce<I, F>>::new","value":"pub fn new(I, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Coalesce`.\n","sig":null,"attributes":[{"value":"/ Create a new `Coalesce`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":76410,"byte_end":76438,"line_start":881,"line_end":881,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":405},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":77150,"byte_end":77155,"line_start":911,"line_end":911,"column_start":12,"column_end":17},"name":"Dedup","qualname":"::adaptors::Dedup","value":"Dedup {  }","parent":null,"children":[{"krate":0,"index":407}],"decl_id":null,"docs":" An iterator adaptor that removes repeated duplicates.","sig":null,"attributes":[{"value":"/ An iterator adaptor that removes repeated duplicates.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":76999,"byte_end":77056,"line_start":908,"line_end":908,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":77057,"byte_end":77060,"line_start":909,"line_end":909,"column_start":1,"column_end":4}},{"value":"/ See [`.dedup()`](trait.Itertools.html#method.dedup) for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":77061,"byte_end":77138,"line_start":910,"line_end":910,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":77459,"byte_end":77462,"line_start":930,"line_end":930,"column_start":12,"column_end":15},"name":"new","qualname":"<Dedup<I>>::new","value":"pub fn new(I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Dedup`.\n","sig":null,"attributes":[{"value":"/ Create a new `Dedup`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":77422,"byte_end":77447,"line_start":929,"line_end":929,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":420},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":78162,"byte_end":78172,"line_start":960,"line_end":960,"column_start":12,"column_end":22},"name":"MendSlices","qualname":"::adaptors::MendSlices","value":"MendSlices {  }","parent":null,"children":[{"krate":0,"index":422}],"decl_id":null,"docs":" An iterator adaptor that glues together adjacent contiguous slices.","sig":null,"attributes":[{"value":"/ An iterator adaptor that glues together adjacent contiguous slices.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":77985,"byte_end":78056,"line_start":957,"line_end":957,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":78057,"byte_end":78060,"line_start":958,"line_end":958,"column_start":1,"column_end":4}},{"value":"/ See [`.mend_slices()`](trait.Itertools.html#method.mend_slices) for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":78061,"byte_end":78150,"line_start":959,"line_end":959,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":78496,"byte_end":78499,"line_start":979,"line_end":979,"column_start":12,"column_end":15},"name":"new","qualname":"<MendSlices<I>>::new","value":"pub fn new(I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `MendSlices`.\n","sig":null,"attributes":[{"value":"/ Create a new `MendSlices`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":78454,"byte_end":78484,"line_start":978,"line_end":978,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":434},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":79219,"byte_end":79231,"line_start":1008,"line_end":1008,"column_start":12,"column_end":24},"name":"TakeWhileRef","qualname":"::adaptors::TakeWhileRef","value":"TakeWhileRef {  }","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439}],"decl_id":null,"docs":" An iterator adaptor that borrows from a `Clone`-able iterator\n to only pick off elements while the predicate returns `true`.","sig":null,"attributes":[{"value":"/ An iterator adaptor that borrows from a `Clone`-able iterator","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":78976,"byte_end":79041,"line_start":1004,"line_end":1004,"column_start":1,"column_end":66}},{"value":"/ to only pick off elements while the predicate returns `true`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":79042,"byte_end":79107,"line_start":1005,"line_end":1005,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":79108,"byte_end":79111,"line_start":1006,"line_end":1006,"column_start":1,"column_end":4}},{"value":"/ See [`.take_while_ref()`](trait.Itertools.html#method.take_while_ref) for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":79112,"byte_end":79207,"line_start":1007,"line_end":1007,"column_start":1,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":79438,"byte_end":79441,"line_start":1017,"line_end":1017,"column_start":12,"column_end":15},"name":"new","qualname":"<TakeWhileRef>::new","value":"pub fn new(&'a mut I, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `TakeWhileRef` from a reference to clonable iterator.\n","sig":null,"attributes":[{"value":"/ Create a new `TakeWhileRef` from a reference to clonable iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":79356,"byte_end":79426,"line_start":1016,"line_end":1016,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1623},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":80413,"byte_end":80422,"line_start":1054,"line_end":1054,"column_start":12,"column_end":21},"name":"WhileSome","qualname":"::adaptors::WhileSome","value":"WhileSome {  }","parent":null,"children":[{"krate":0,"index":1625}],"decl_id":null,"docs":" An iterator adaptor that filters `Option<A>` iterator elements\n and produces `A`. Stops on the first `None` encountered.","sig":null,"attributes":[{"value":"/ An iterator adaptor that filters `Option<A>` iterator elements","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":80165,"byte_end":80231,"line_start":1049,"line_end":1049,"column_start":1,"column_end":67}},{"value":"/ and produces `A`. Stops on the first `None` encountered.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":80232,"byte_end":80292,"line_start":1050,"line_end":1050,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":80293,"byte_end":80296,"line_start":1051,"line_end":1051,"column_start":1,"column_end":4}},{"value":"/ See [`.while_some()`](trait.Itertools.html#method.while_some) for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":80297,"byte_end":80384,"line_start":1052,"line_end":1052,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":80515,"byte_end":80518,"line_start":1060,"line_end":1060,"column_start":12,"column_end":15},"name":"new","qualname":"<WhileSome<I>>::new","value":"pub fn new(I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `WhileSome<I>`.\n","sig":null,"attributes":[{"value":"/ Create a new `WhileSome<I>`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":80471,"byte_end":80503,"line_start":1059,"line_end":1059,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1629},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":81172,"byte_end":81184,"line_start":1087,"line_end":1087,"column_start":12,"column_end":24},"name":"Combinations","qualname":"::adaptors::Combinations","value":"Combinations {  }","parent":null,"children":[{"krate":0,"index":1631},{"krate":0,"index":1632},{"krate":0,"index":1633}],"decl_id":null,"docs":" An iterator to iterate through all the combinations of pairs in a `Clone`-able iterator.","sig":null,"attributes":[{"value":"/ An iterator to iterate through all the combinations of pairs in a `Clone`-able iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":80955,"byte_end":81047,"line_start":1083,"line_end":1083,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":81048,"byte_end":81051,"line_start":1084,"line_end":1084,"column_start":1,"column_end":4}},{"value":"/ See [`.combinations()`](trait.Itertools.html#method.combinations) for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":81052,"byte_end":81143,"line_start":1085,"line_end":1085,"column_start":1,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":81388,"byte_end":81391,"line_start":1096,"line_end":1096,"column_start":12,"column_end":15},"name":"new","qualname":"<Combinations<I>>::new","value":"pub fn new(I) -> Combinations<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Combinations` from a clonable iterator.\n","sig":null,"attributes":[{"value":"/ Create a new `Combinations` from a clonable iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":81319,"byte_end":81376,"line_start":1095,"line_end":1095,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":486},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":84278,"byte_end":84291,"line_start":1213,"line_end":1213,"column_start":12,"column_end":25},"name":"CombinationsN","qualname":"::adaptors::CombinationsN","value":"CombinationsN {  }","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491}],"decl_id":null,"docs":" An iterator to iterate through all the `n`-length combinations in an iterator.","sig":null,"attributes":[{"value":"/ An iterator to iterate through all the `n`-length combinations in an iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":84084,"byte_end":84166,"line_start":1210,"line_end":1210,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":84167,"byte_end":84170,"line_start":1211,"line_end":1211,"column_start":1,"column_end":4}},{"value":"/ See [`.combinations_n()`](trait.Itertools.html#method.combinations_n) for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":84171,"byte_end":84266,"line_start":1212,"line_end":1212,"column_start":1,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":84513,"byte_end":84516,"line_start":1223,"line_end":1223,"column_start":12,"column_end":15},"name":"new","qualname":"<CombinationsN<I>>::new","value":"pub fn new(I, usize) -> CombinationsN<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `CombinationsN` from a clonable iterator.\n","sig":null,"attributes":[{"value":"/ Create a new `CombinationsN` from a clonable iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":84443,"byte_end":84501,"line_start":1222,"line_end":1222,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1637},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":86705,"byte_end":86713,"line_start":1302,"line_end":1302,"column_start":12,"column_end":20},"name":"UniqueBy","qualname":"::adaptors::UniqueBy","value":"UniqueBy {  }","parent":null,"children":[{"krate":0,"index":1641},{"krate":0,"index":1642},{"krate":0,"index":1643}],"decl_id":null,"docs":" An iterator adapter to filter out duplicate elements.","sig":null,"attributes":[{"value":"/ An iterator adapter to filter out duplicate elements.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":86532,"byte_end":86589,"line_start":1298,"line_end":1298,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":86590,"byte_end":86593,"line_start":1299,"line_end":1299,"column_start":1,"column_end":4}},{"value":"/ See [`.unique_by()`](trait.Itertools.html#method.unique) for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":86594,"byte_end":86676,"line_start":1300,"line_end":1300,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":86938,"byte_end":86941,"line_start":1313,"line_end":1313,"column_start":12,"column_end":15},"name":"new","qualname":"<UniqueBy<I, V, F>>::new","value":"pub fn new(I, F) -> UniqueBy<I, V, F>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `UniqueBy` iterator.\n","sig":null,"attributes":[{"value":"/ Create a new `UniqueBy` iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":86889,"byte_end":86926,"line_start":1312,"line_end":1312,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1649},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":88744,"byte_end":88750,"line_start":1382,"line_end":1382,"column_start":12,"column_end":18},"name":"Unique","qualname":"::adaptors::Unique","value":"Unique {  }","parent":null,"children":[{"krate":0,"index":1651}],"decl_id":null,"docs":" An iterator adapter to filter out duplicate elements.","sig":null,"attributes":[{"value":"/ An iterator adapter to filter out duplicate elements.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":88574,"byte_end":88631,"line_start":1378,"line_end":1378,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":88632,"byte_end":88635,"line_start":1379,"line_end":1379,"column_start":1,"column_end":4}},{"value":"/ See [`.unique()`](trait.Itertools.html#method.unique) for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":88636,"byte_end":88715,"line_start":1380,"line_end":1380,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":518},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":89185,"byte_end":89192,"line_start":1402,"line_end":1402,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::adaptors::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":520}],"decl_id":null,"docs":" An iterator adapter to simply flatten a structure.","sig":null,"attributes":[{"value":"/ An iterator adapter to simply flatten a structure.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":89033,"byte_end":89087,"line_start":1399,"line_end":1399,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":89088,"byte_end":89091,"line_start":1400,"line_end":1400,"column_start":1,"column_end":4}},{"value":"/ See [`.flatten()`](trait.Itertools.html#method.flatten) for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":89092,"byte_end":89173,"line_start":1401,"line_end":1401,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":89439,"byte_end":89442,"line_start":1414,"line_end":1414,"column_start":12,"column_end":15},"name":"new","qualname":"<Flatten<I>>::new","value":"pub fn new(I) -> Flatten<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Flatten` iterator.\n","sig":null,"attributes":[{"value":"/ Create a new `Flatten` iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":89391,"byte_end":89427,"line_start":1413,"line_end":1413,"column_start":5,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":536},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"free","qualname":"::free","value":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","parent":null,"children":[{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":557},{"krate":0,"index":560},{"krate":0,"index":563},{"krate":0,"index":566},{"krate":0,"index":568},{"krate":0,"index":570},{"krate":0,"index":573},{"krate":0,"index":576},{"krate":0,"index":579},{"krate":0,"index":583},{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":593},{"krate":0,"index":595},{"krate":0,"index":597},{"krate":0,"index":600},{"krate":0,"index":603},{"krate":0,"index":605},{"krate":0,"index":607},{"krate":0,"index":609}],"decl_id":null,"docs":" Free functions that create iterator adaptors or call iterator methods.","sig":null,"attributes":[{"value":"/ Free functions that create iterator adaptors or call iterator methods.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":90276,"byte_end":90350,"line_start":1,"line_end":1,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":90351,"byte_end":90354,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The benefit of free functions is that they accept any `IntoIterator` as","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":90355,"byte_end":90430,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ argument, so the resulting code may be easier to read.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":90431,"byte_end":90489,"line_start":4,"line_end":4,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":566},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":90867,"byte_end":90876,"line_start":28,"line_end":28,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::free::enumerate","value":"pub fn enumerate<I>(I) -> iter::Enumerate<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Iterate `iterable` with a running index.","sig":null,"attributes":[{"value":"/ Iterate `iterable` with a running index.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":90629,"byte_end":90673,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":90674,"byte_end":90677,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `.enumerate()`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":90678,"byte_end":90731,"line_start":19,"line_end":19,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":90732,"byte_end":90735,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":90736,"byte_end":90743,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use itertools::enumerate;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":90744,"byte_end":90773,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":90774,"byte_end":90777,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ for (i, elt) in enumerate(&[1, 2, 3]) {","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":90778,"byte_end":90821,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/     /* loop body */","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":90822,"byte_end":90845,"line_start":25,"line_end":25,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":90846,"byte_end":90851,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":90852,"byte_end":90859,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":568},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91198,"byte_end":91201,"line_start":45,"line_end":45,"column_start":8,"column_end":11},"name":"rev","qualname":"::free::rev","value":"pub fn rev<I>(I) -> iter::Rev<I::IntoIter> where I: IntoIterator,\nI::IntoIter: DoubleEndedIterator","parent":null,"children":[],"decl_id":null,"docs":" Iterate `iterable` in reverse.","sig":null,"attributes":[{"value":"/ Iterate `iterable` in reverse.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":90993,"byte_end":91027,"line_start":34,"line_end":34,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91028,"byte_end":91031,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `.rev()`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91032,"byte_end":91079,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91080,"byte_end":91083,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91084,"byte_end":91091,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use itertools::rev;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91092,"byte_end":91115,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91116,"byte_end":91119,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ for elt in rev(&[1, 2, 3]) {","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91120,"byte_end":91152,"line_start":41,"line_end":41,"column_start":1,"column_end":33}},{"value":"/     /* loop body */","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91153,"byte_end":91176,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91177,"byte_end":91182,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91183,"byte_end":91190,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":570},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91608,"byte_end":91611,"line_start":64,"line_end":64,"column_start":8,"column_end":11},"name":"zip","qualname":"::free::zip","value":"pub fn zip<I, J>(I, J) -> Zip<I::IntoIter, J::IntoIter> where I: IntoIterator,\nJ: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Iterate `i` and `j` in lock step.","sig":null,"attributes":[{"value":"/ Iterate `i` and `j` in lock step.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91350,"byte_end":91387,"line_start":52,"line_end":52,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91388,"byte_end":91391,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.zip(j)`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91392,"byte_end":91441,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91442,"byte_end":91445,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91446,"byte_end":91453,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use itertools::free::zip;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91454,"byte_end":91483,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91484,"byte_end":91487,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ let data = [1, 2, 3, 4, 5];","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91488,"byte_end":91519,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/ for (a, b) in zip(&data, &data[1..]) {","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91520,"byte_end":91562,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/     /* loop body */","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91563,"byte_end":91586,"line_start":61,"line_end":61,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91587,"byte_end":91592,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91593,"byte_end":91600,"line_start":63,"line_end":63,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":573},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":92095,"byte_end":92101,"line_start":85,"line_end":85,"column_start":8,"column_end":14},"name":"zip_eq","qualname":"::free::zip_eq","value":"pub fn zip_eq<I, J>(I, J) -> ZipEq<I::IntoIter, J::IntoIter> where\nI: IntoIterator, J: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Iterate `i` and `j` in lock step.","sig":null,"attributes":[{"value":"/ Iterate `i` and `j` in lock step.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91746,"byte_end":91783,"line_start":71,"line_end":71,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91784,"byte_end":91787,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ **Panics** if the iterators are not of the same length.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91788,"byte_end":91847,"line_start":73,"line_end":73,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91848,"byte_end":91851,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.zip_eq(j)`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91852,"byte_end":91904,"line_start":75,"line_end":75,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91905,"byte_end":91908,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91909,"byte_end":91916,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/ use itertools::free::zip_eq;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91917,"byte_end":91949,"line_start":78,"line_end":78,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91950,"byte_end":91953,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ let data = [1, 2, 3, 4, 5];","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91954,"byte_end":91985,"line_start":80,"line_end":80,"column_start":1,"column_end":32}},{"value":"/ for (a, b) in zip_eq(&data[..data.len() - 1], &data[1..]) {","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":91986,"byte_end":92049,"line_start":81,"line_end":81,"column_start":1,"column_end":64}},{"value":"/     /* loop body */","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":92050,"byte_end":92073,"line_start":82,"line_end":82,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":92074,"byte_end":92079,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":92080,"byte_end":92087,"line_start":84,"line_end":84,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":576},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":92492,"byte_end":92497,"line_start":103,"line_end":103,"column_start":8,"column_end":13},"name":"chain","qualname":"::free::chain","value":"pub fn chain<I, J>(I, J)\n-> iter::Chain<<I as IntoIterator>::IntoIter, <J as IntoIterator>::IntoIter>\nwhere I: IntoIterator, J: IntoIterator<Item = I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that first iterates `i` and then `j`.","sig":null,"attributes":[{"value":"/ Create an iterator that first iterates `i` and then `j`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":92241,"byte_end":92301,"line_start":92,"line_end":92,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":92302,"byte_end":92305,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.chain(j)`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":92306,"byte_end":92357,"line_start":94,"line_end":94,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":92358,"byte_end":92361,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":92362,"byte_end":92369,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/ use itertools::free::chain;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":92370,"byte_end":92401,"line_start":97,"line_end":97,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":92402,"byte_end":92405,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ for elt in chain(&[1, 2, 3], &[4]) {","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":92406,"byte_end":92446,"line_start":99,"line_end":99,"column_start":1,"column_end":41}},{"value":"/     /* loop body */","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":92447,"byte_end":92470,"line_start":100,"line_end":100,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":92471,"byte_end":92476,"line_start":101,"line_end":101,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":92477,"byte_end":92484,"line_start":102,"line_end":102,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":579},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":92926,"byte_end":92932,"line_start":119,"line_end":119,"column_start":8,"column_end":14},"name":"cloned","qualname":"::free::cloned","value":"pub fn cloned<'a, I, T: 'a>(I) -> iter::Cloned<I::IntoIter> where\nI: IntoIterator<Item = &'a T>, T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that clones each element from &T to T","sig":null,"attributes":[{"value":"/ Create an iterator that clones each element from &T to T","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":92694,"byte_end":92754,"line_start":110,"line_end":110,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":92755,"byte_end":92758,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.cloned()`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":92759,"byte_end":92810,"line_start":112,"line_end":112,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":92811,"byte_end":92814,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":92815,"byte_end":92822,"line_start":114,"line_end":114,"column_start":1,"column_end":8}},{"value":"/ use itertools::free::cloned;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":92823,"byte_end":92855,"line_start":115,"line_end":115,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":92856,"byte_end":92859,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(cloned(b\"abc\").next(), Some(b'a'));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":92860,"byte_end":92910,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":92911,"byte_end":92918,"line_start":118,"line_end":118,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":583},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":93326,"byte_end":93330,"line_start":135,"line_end":135,"column_start":8,"column_end":12},"name":"fold","qualname":"::free::fold","value":"pub fn fold<I, B, F>(I, B, F) -> B where I: IntoIterator, F: FnMut(B, I::Item)\n-> B","parent":null,"children":[],"decl_id":null,"docs":" Perform a fold operation over the iterable.","sig":null,"attributes":[{"value":"/ Perform a fold operation over the iterable.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":93087,"byte_end":93134,"line_start":126,"line_end":126,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":93135,"byte_end":93138,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.fold(init, f)`","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":93139,"byte_end":93194,"line_start":128,"line_end":128,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":93195,"byte_end":93198,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":93199,"byte_end":93206,"line_start":130,"line_end":130,"column_start":1,"column_end":8}},{"value":"/ use itertools::free::fold;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":93207,"byte_end":93237,"line_start":131,"line_end":131,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":93238,"byte_end":93241,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(fold(&[1., 2., 3.], 0., |a, &b| f32::max(a, b)), 3.);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":93242,"byte_end":93310,"line_start":133,"line_end":133,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":93311,"byte_end":93318,"line_start":134,"line_end":134,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":587},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":93711,"byte_end":93714,"line_start":151,"line_end":151,"column_start":8,"column_end":11},"name":"all","qualname":"::free::all","value":"pub fn all<I, F>(I, F) -> bool where I: IntoIterator, F: FnMut(I::Item) ->\nbool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the predicate holds for all elements in the iterable.","sig":null,"attributes":[{"value":"/ Test whether the predicate holds for all elements in the iterable.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":93480,"byte_end":93550,"line_start":142,"line_end":142,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":93551,"byte_end":93554,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.all(f)`","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":93555,"byte_end":93603,"line_start":144,"line_end":144,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":93604,"byte_end":93607,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":93608,"byte_end":93615,"line_start":146,"line_end":146,"column_start":1,"column_end":8}},{"value":"/ use itertools::free::all;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":93616,"byte_end":93645,"line_start":147,"line_end":147,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":93646,"byte_end":93649,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ assert!(all(&[1, 2, 3], |elt| *elt > 0));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":93650,"byte_end":93695,"line_start":149,"line_end":149,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":93696,"byte_end":93703,"line_start":150,"line_end":150,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":590},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":94080,"byte_end":94083,"line_start":167,"line_end":167,"column_start":8,"column_end":11},"name":"any","qualname":"::free::any","value":"pub fn any<I, F>(I, F) -> bool where I: IntoIterator, F: FnMut(I::Item) ->\nbool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the predicate holds for any elements in the iterable.","sig":null,"attributes":[{"value":"/ Test whether the predicate holds for any elements in the iterable.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":93848,"byte_end":93918,"line_start":158,"line_end":158,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":93919,"byte_end":93922,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.any(f)`","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":93923,"byte_end":93971,"line_start":160,"line_end":160,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":93972,"byte_end":93975,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":93976,"byte_end":93983,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/ use itertools::free::any;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":93984,"byte_end":94013,"line_start":163,"line_end":163,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":94014,"byte_end":94017,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ assert!(any(&[0, -1, 2], |elt| *elt > 0));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":94018,"byte_end":94064,"line_start":165,"line_end":165,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":94065,"byte_end":94072,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":593},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":94414,"byte_end":94417,"line_start":183,"line_end":183,"column_start":8,"column_end":11},"name":"max","qualname":"::free::max","value":"pub fn max<I>(I) -> Option<I::Item> where I: IntoIterator, I::Item: Ord","parent":null,"children":[],"decl_id":null,"docs":" Return the maximum value of the iterable.","sig":null,"attributes":[{"value":"/ Return the maximum value of the iterable.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":94217,"byte_end":94262,"line_start":174,"line_end":174,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":94263,"byte_end":94266,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.max()`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":94267,"byte_end":94315,"line_start":176,"line_end":176,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":94316,"byte_end":94319,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":94320,"byte_end":94327,"line_start":178,"line_end":178,"column_start":1,"column_end":8}},{"value":"/ use itertools::free::max;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":94328,"byte_end":94357,"line_start":179,"line_end":179,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":94358,"byte_end":94361,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(max(0..10), Some(9));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":94362,"byte_end":94398,"line_start":181,"line_end":181,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":94399,"byte_end":94406,"line_start":182,"line_end":182,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":595},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":94736,"byte_end":94739,"line_start":199,"line_end":199,"column_start":8,"column_end":11},"name":"min","qualname":"::free::min","value":"pub fn min<I>(I) -> Option<I::Item> where I: IntoIterator, I::Item: Ord","parent":null,"children":[],"decl_id":null,"docs":" Return the minimum value of the iterable.","sig":null,"attributes":[{"value":"/ Return the minimum value of the iterable.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":94539,"byte_end":94584,"line_start":190,"line_end":190,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":94585,"byte_end":94588,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.min()`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":94589,"byte_end":94637,"line_start":192,"line_end":192,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":94638,"byte_end":94641,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":94642,"byte_end":94649,"line_start":194,"line_end":194,"column_start":1,"column_end":8}},{"value":"/ use itertools::free::min;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":94650,"byte_end":94679,"line_start":195,"line_end":195,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":94680,"byte_end":94683,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(min(0..10), Some(0));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":94684,"byte_end":94720,"line_start":197,"line_end":197,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":94721,"byte_end":94728,"line_start":198,"line_end":198,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":597},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":95137,"byte_end":95147,"line_start":217,"line_end":217,"column_start":8,"column_end":18},"name":"interleave","qualname":"::free::interleave","value":"pub fn interleave<I, J>(I, J)\n-> Interleave<<I as IntoIterator>::IntoIter, <J as IntoIterator>::IntoIter>\nwhere I: IntoIterator, J: IntoIterator<Item = I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that interleaves elements in `i` and `j`.","sig":null,"attributes":[{"value":"/ Create an iterator that interleaves elements in `i` and `j`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":94861,"byte_end":94925,"line_start":206,"line_end":206,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":94926,"byte_end":94929,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.interleave(j)`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":94930,"byte_end":94986,"line_start":208,"line_end":208,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":94987,"byte_end":94990,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":94991,"byte_end":94998,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"/ use itertools::free::interleave;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":94999,"byte_end":95035,"line_start":211,"line_end":211,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":95036,"byte_end":95039,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ for elt in interleave(&[1, 2, 3], &[2, 3, 4]) {","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":95040,"byte_end":95091,"line_start":213,"line_end":213,"column_start":1,"column_end":52}},{"value":"/     /* loop body */","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":95092,"byte_end":95115,"line_start":214,"line_end":214,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":95116,"byte_end":95121,"line_start":215,"line_end":215,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":95122,"byte_end":95129,"line_start":216,"line_end":216,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":600},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":95604,"byte_end":95609,"line_start":235,"line_end":235,"column_start":8,"column_end":13},"name":"merge","qualname":"::free::merge","value":"pub fn merge<I, J>(I, J)\n-> Merge<<I as IntoIterator>::IntoIter, <J as IntoIterator>::IntoIter> where\nI: IntoIterator, J: IntoIterator<Item = I::Item>, I::Item: PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that merges elements in `i` and `j`.","sig":null,"attributes":[{"value":"/ Create an iterator that merges elements in `i` and `j`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":95348,"byte_end":95407,"line_start":224,"line_end":224,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":95408,"byte_end":95411,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.merge(j)`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":95412,"byte_end":95463,"line_start":226,"line_end":226,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":95464,"byte_end":95467,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":95468,"byte_end":95475,"line_start":228,"line_end":228,"column_start":1,"column_end":8}},{"value":"/ use itertools::free::merge;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":95476,"byte_end":95507,"line_start":229,"line_end":229,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":95508,"byte_end":95511,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ for elt in merge(&[1, 2, 3], &[2, 3, 4]) {","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":95512,"byte_end":95558,"line_start":231,"line_end":231,"column_start":1,"column_end":47}},{"value":"/     /* loop body */","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":95559,"byte_end":95582,"line_start":232,"line_end":232,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":95583,"byte_end":95588,"line_start":233,"line_end":233,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":95589,"byte_end":95596,"line_start":234,"line_end":234,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":603},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":96117,"byte_end":96123,"line_start":254,"line_end":254,"column_start":8,"column_end":14},"name":"kmerge","qualname":"::free::kmerge","value":"pub fn kmerge<I>(I)\n-> KMerge<<<I as IntoIterator>::Item as IntoIterator>::IntoIter> where\nI: IntoIterator, I::Item: IntoIterator,\n<<I as IntoIterator>::Item as IntoIterator>::Item: Ord","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that merges elements of the contained iterators.","sig":null,"attributes":[{"value":"/ Create an iterator that merges elements of the contained iterators.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":95831,"byte_end":95902,"line_start":243,"line_end":243,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":95903,"byte_end":95906,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `i.into_iter().kmerge()`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":95907,"byte_end":95950,"line_start":245,"line_end":245,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":95951,"byte_end":95954,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":95955,"byte_end":95962,"line_start":247,"line_end":247,"column_start":1,"column_end":8}},{"value":"/ use itertools::free::kmerge;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":95963,"byte_end":95995,"line_start":248,"line_end":248,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":95996,"byte_end":95999,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ for elt in kmerge(vec![vec![0, 2, 4], vec![1, 3, 5], vec![6, 7]]) {","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":96000,"byte_end":96071,"line_start":250,"line_end":250,"column_start":1,"column_end":72}},{"value":"/     /* loop body */","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":96072,"byte_end":96095,"line_start":251,"line_end":251,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":96096,"byte_end":96101,"line_start":252,"line_end":252,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":96102,"byte_end":96109,"line_start":253,"line_end":253,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":605},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":96604,"byte_end":96608,"line_start":271,"line_end":271,"column_start":8,"column_end":12},"name":"join","qualname":"::free::join","value":"pub fn join<I>(I, &str) -> String where I: IntoIterator, I::Item: Display","parent":null,"children":[],"decl_id":null,"docs":" Combine all iterator elements into one String, seperated by `sep`.","sig":null,"attributes":[{"value":"/ Combine all iterator elements into one String, seperated by `sep`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":96356,"byte_end":96426,"line_start":262,"line_end":262,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":96427,"byte_end":96430,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `iterable.join(sep)`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":96431,"byte_end":96490,"line_start":264,"line_end":264,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":96491,"byte_end":96494,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":96495,"byte_end":96502,"line_start":266,"line_end":266,"column_start":1,"column_end":8}},{"value":"/ use itertools::free::join;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":96503,"byte_end":96533,"line_start":267,"line_end":267,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":96534,"byte_end":96537,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(join(&[1, 2, 3], \", \"), \"1, 2, 3\");","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":96538,"byte_end":96588,"line_start":269,"line_end":269,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":96589,"byte_end":96596,"line_start":270,"line_end":270,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":607},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":97039,"byte_end":97045,"line_start":288,"line_end":288,"column_start":8,"column_end":14},"name":"sorted","qualname":"::free::sorted","value":"pub fn sorted<I>(I) -> Vec<I::Item> where I: IntoIterator, I::Item: Ord","parent":null,"children":[],"decl_id":null,"docs":" Collect all the iterable's elements into a sorted vector in ascending order.","sig":null,"attributes":[{"value":"/ Collect all the iterable's elements into a sorted vector in ascending order.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":96740,"byte_end":96820,"line_start":278,"line_end":278,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":96821,"byte_end":96824,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `iterable.sorted()`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":96825,"byte_end":96883,"line_start":280,"line_end":280,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":96884,"byte_end":96887,"line_start":281,"line_end":281,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":96888,"byte_end":96895,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/ use itertools::free::sorted;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":96896,"byte_end":96928,"line_start":283,"line_end":283,"column_start":1,"column_end":33}},{"value":"/ use itertools::assert_equal;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":96929,"byte_end":96961,"line_start":284,"line_end":284,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":96962,"byte_end":96965,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ assert_equal(sorted(\"rust\".chars()), \"rstu\".chars());","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":96966,"byte_end":97023,"line_start":286,"line_end":286,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":97024,"byte_end":97031,"line_start":287,"line_end":287,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":609},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":98206,"byte_end":98212,"line_start":322,"line_end":322,"column_start":8,"column_end":14},"name":"rciter","qualname":"::free::rciter","value":"pub fn rciter<I>(I) -> RcIter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator inside a `Rc<RefCell<_>>` wrapper.","sig":null,"attributes":[{"value":"/ Return an iterator inside a `Rc<RefCell<_>>` wrapper.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":97167,"byte_end":97224,"line_start":295,"line_end":295,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":97225,"byte_end":97228,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ The returned `RcIter` can be cloned, and each clone will refer back to the","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":97229,"byte_end":97307,"line_start":297,"line_end":297,"column_start":1,"column_end":79}},{"value":"/ same original iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":97308,"byte_end":97335,"line_start":298,"line_end":298,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":97336,"byte_end":97339,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ `RcIter` allows doing interesting things like using `.zip()` on an iterator with","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":97340,"byte_end":97424,"line_start":300,"line_end":300,"column_start":1,"column_end":85}},{"value":"/ itself, at the cost of runtime borrow checking.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":97425,"byte_end":97476,"line_start":301,"line_end":301,"column_start":1,"column_end":52}},{"value":"/ (If it is not obvious: this has a performance penalty.)","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":97477,"byte_end":97536,"line_start":302,"line_end":302,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":97537,"byte_end":97540,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":97541,"byte_end":97583,"line_start":304,"line_end":304,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":97584,"byte_end":97587,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":97588,"byte_end":97595,"line_start":306,"line_end":306,"column_start":1,"column_end":8}},{"value":"/ use itertools::free::rciter;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":97596,"byte_end":97628,"line_start":307,"line_end":307,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":97629,"byte_end":97632,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ let mut rit = rciter(0..9);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":97633,"byte_end":97664,"line_start":309,"line_end":309,"column_start":1,"column_end":32}},{"value":"/ let mut z = rit.clone().zip(rit.clone());","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":97665,"byte_end":97710,"line_start":310,"line_end":310,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(z.next(), Some((0, 1)));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":97711,"byte_end":97750,"line_start":311,"line_end":311,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(z.next(), Some((2, 3)));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":97751,"byte_end":97790,"line_start":312,"line_end":312,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(z.next(), Some((4, 5)));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":97791,"byte_end":97830,"line_start":313,"line_end":313,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(rit.next(), Some(6));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":97831,"byte_end":97867,"line_start":314,"line_end":314,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(z.next(), Some((7, 8)));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":97868,"byte_end":97907,"line_start":315,"line_end":315,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(z.next(), None);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":97908,"byte_end":97939,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":97940,"byte_end":97947,"line_start":317,"line_end":317,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":97948,"byte_end":97951,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ **Panics** in iterator methods if a borrow error is encountered,","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":97952,"byte_end":98020,"line_start":319,"line_end":319,"column_start":1,"column_end":69}},{"value":"/ but it can only happen if the `RcIter` is reentered in for example `.next()`,","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":98021,"byte_end":98102,"line_start":320,"line_end":320,"column_start":1,"column_end":82}},{"value":"/ i.e. if it somehow participates in an “iterator knot” where it is an adaptor of itself.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/free.rs","byte_start":98103,"byte_end":98198,"line_start":321,"line_end":321,"column_start":1,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":618},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/format.rs","byte_start":98611,"byte_end":98617,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Format","qualname":"::format::Format","value":"Format {  }","parent":null,"children":[{"krate":0,"index":622},{"krate":0,"index":623}],"decl_id":null,"docs":" Format all iterator elements lazily, separated by `sep`.","sig":null,"attributes":[{"value":"/ Format all iterator elements lazily, separated by `sep`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/format.rs","byte_start":98360,"byte_end":98420,"line_start":4,"line_end":4,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/format.rs","byte_start":98421,"byte_end":98424,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The format value can only be formatted once, after that the iterator is","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/format.rs","byte_start":98425,"byte_end":98500,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ exhausted.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/format.rs","byte_start":98501,"byte_end":98515,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/format.rs","byte_start":98516,"byte_end":98519,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See [`.format()`](trait.Itertools.html#method.format) for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/format.rs","byte_start":98520,"byte_end":98599,"line_start":9,"line_end":9,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1655},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/format.rs","byte_start":99041,"byte_end":99054,"line_start":24,"line_end":24,"column_start":12,"column_end":25},"name":"FormatDefault","qualname":"::format::FormatDefault","value":"FormatDefault {  }","parent":null,"children":[{"krate":0,"index":1658},{"krate":0,"index":1659}],"decl_id":null,"docs":" Format all iterator elements lazily, separated by `sep`.","sig":null,"attributes":[{"value":"/ Format all iterator elements lazily, separated by `sep`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/format.rs","byte_start":98753,"byte_end":98813,"line_start":16,"line_end":16,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/format.rs","byte_start":98814,"byte_end":98817,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The format value can only be formatted once, after that the iterator is","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/format.rs","byte_start":98818,"byte_end":98893,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ exhausted.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/format.rs","byte_start":98894,"byte_end":98908,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/format.rs","byte_start":98909,"byte_end":98912,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ See [`.format_default()`](trait.Itertools.html#method.format_default)","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/format.rs","byte_start":98913,"byte_end":98986,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/ for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/format.rs","byte_start":98987,"byte_end":99012,"line_start":22,"line_end":22,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":655},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":101540,"byte_end":101543,"line_start":6,"line_end":6,"column_start":10,"column_end":13},"name":"Key","qualname":"::groupbylazy::KeyFunction::Key","value":"type Key;","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":709},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":110419,"byte_end":110430,"line_start":284,"line_end":284,"column_start":12,"column_end":23},"name":"GroupByLazy","qualname":"::groupbylazy::GroupByLazy","value":"GroupByLazy {  }","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":714}],"decl_id":null,"docs":" `GroupByLazy` is the storage for the lazy grouping operation.","sig":null,"attributes":[{"value":"/ `GroupByLazy` is the storage for the lazy grouping operation.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":109777,"byte_end":109842,"line_start":271,"line_end":271,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":109843,"byte_end":109846,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ If the groups are consumed in their original order, or if each","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":109847,"byte_end":109913,"line_start":273,"line_end":273,"column_start":1,"column_end":67}},{"value":"/ group is dropped without keeping it around, then `GroupByLazy` uses","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":109914,"byte_end":109985,"line_start":274,"line_end":274,"column_start":1,"column_end":72}},{"value":"/ no allocations. It needs allocations only if several group iterators","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":109986,"byte_end":110058,"line_start":275,"line_end":275,"column_start":1,"column_end":73}},{"value":"/ are alive at the same time.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":110059,"byte_end":110090,"line_start":276,"line_end":276,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":110091,"byte_end":110094,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ This type implements `IntoIterator` (it is **not** an iterator","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":110095,"byte_end":110161,"line_start":278,"line_end":278,"column_start":1,"column_end":67}},{"value":"/ itself), because the group iterators need to borrow from this","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":110162,"byte_end":110227,"line_start":279,"line_end":279,"column_start":1,"column_end":66}},{"value":"/ value. It should be stored in a local variable or temporary and","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":110228,"byte_end":110295,"line_start":280,"line_end":280,"column_start":1,"column_end":68}},{"value":"/ iterated.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":110296,"byte_end":110309,"line_start":281,"line_end":281,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":110310,"byte_end":110313,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ See [`.group_by_lazy()`](trait.Itertools.html#method.group_by_lazy) for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":110314,"byte_end":110407,"line_start":283,"line_end":283,"column_start":1,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":733},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":112216,"byte_end":112222,"line_start":353,"line_end":353,"column_start":12,"column_end":18},"name":"Groups","qualname":"::groupbylazy::Groups","value":"Groups {  }","parent":null,"children":[{"krate":0,"index":738}],"decl_id":null,"docs":" An iterator that yields the Group iterators.","sig":null,"attributes":[{"value":"/ An iterator that yields the Group iterators.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":111961,"byte_end":112009,"line_start":347,"line_end":347,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":112010,"byte_end":112013,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `(K, Group)`:","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":112014,"byte_end":112056,"line_start":349,"line_end":349,"column_start":1,"column_end":43}},{"value":"/ the group's key `K` and the group's iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":112057,"byte_end":112106,"line_start":350,"line_end":350,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":112107,"byte_end":112110,"line_start":351,"line_end":351,"column_start":1,"column_end":4}},{"value":"/ See [`.group_by_lazy()`](trait.Itertools.html#method.group_by_lazy) for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":112111,"byte_end":112204,"line_start":352,"line_end":352,"column_start":1,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":747},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":113094,"byte_end":113099,"line_start":387,"line_end":387,"column_start":12,"column_end":17},"name":"Group","qualname":"::groupbylazy::Group","value":"Group {  }","parent":null,"children":[{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754}],"decl_id":null,"docs":" An iterator for the elements in a single group.","sig":null,"attributes":[{"value":"/ An iterator for the elements in a single group.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":112987,"byte_end":113038,"line_start":384,"line_end":384,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":113039,"byte_end":113042,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":113043,"byte_end":113082,"line_start":386,"line_end":386,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":770},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":114945,"byte_end":114955,"line_start":458,"line_end":458,"column_start":12,"column_end":22},"name":"ChunksLazy","qualname":"::groupbylazy::ChunksLazy","value":"ChunksLazy {  }","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":773}],"decl_id":null,"docs":" `ChunkLazy` is the storage for a lazy chunking operation.","sig":null,"attributes":[{"value":"/ `ChunkLazy` is the storage for a lazy chunking operation.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":114345,"byte_end":114406,"line_start":445,"line_end":445,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":114407,"byte_end":114410,"line_start":446,"line_end":446,"column_start":1,"column_end":4}},{"value":"/ `ChunksLazy` behaves just like `GroupByLazy`: it is iterable, and","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":114411,"byte_end":114480,"line_start":447,"line_end":447,"column_start":1,"column_end":70}},{"value":"/ it only buffers if several chunk iterators are alive at the same time.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":114481,"byte_end":114555,"line_start":448,"line_end":448,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":114556,"byte_end":114559,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/ This type implements `IntoIterator` (it is **not** an iterator","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":114560,"byte_end":114626,"line_start":450,"line_end":450,"column_start":1,"column_end":67}},{"value":"/ itself), because the chunk iterators need to borrow from this","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":114627,"byte_end":114692,"line_start":451,"line_end":451,"column_start":1,"column_end":66}},{"value":"/ value. It should be stored in a local variable or temporary and","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":114693,"byte_end":114760,"line_start":452,"line_end":452,"column_start":1,"column_end":68}},{"value":"/ iterated.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":114761,"byte_end":114774,"line_start":453,"line_end":453,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":114775,"byte_end":114778,"line_start":454,"line_end":454,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `Chunk`, each chunk's iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":114779,"byte_end":114839,"line_start":455,"line_end":455,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":114840,"byte_end":114843,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/ See [`.chunks_lazy()`](trait.Itertools.html#method.chunks_lazy) for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":114844,"byte_end":114933,"line_start":457,"line_end":457,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":784},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":116011,"byte_end":116017,"line_start":502,"line_end":502,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::groupbylazy::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":787}],"decl_id":null,"docs":" An iterator that yields the Chunk iterators.","sig":null,"attributes":[{"value":"/ An iterator that yields the Chunk iterators.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":115815,"byte_end":115863,"line_start":497,"line_end":497,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":115864,"byte_end":115867,"line_start":498,"line_end":498,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `Chunk`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":115868,"byte_end":115905,"line_start":499,"line_end":499,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":115906,"byte_end":115909,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ See [`.chunks_lazy()`](trait.Itertools.html#method.chunks_lazy) for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":115910,"byte_end":115999,"line_start":501,"line_end":501,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":794},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":116735,"byte_end":116740,"line_start":533,"line_end":533,"column_start":12,"column_end":17},"name":"Chunk","qualname":"::groupbylazy::Chunk","value":"Chunk {  }","parent":null,"children":[{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799}],"decl_id":null,"docs":" An iterator for the elements in a single chunk.","sig":null,"attributes":[{"value":"/ An iterator for the elements in a single chunk.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":116628,"byte_end":116679,"line_start":530,"line_end":530,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":116680,"byte_end":116683,"line_start":531,"line_end":531,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":116684,"byte_end":116723,"line_start":532,"line_end":532,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1702},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/intersperse.rs","byte_start":117690,"byte_end":117701,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"Intersperse","qualname":"::intersperse::Intersperse","value":"Intersperse {  }","parent":null,"children":[{"krate":0,"index":1704},{"krate":0,"index":1705},{"krate":0,"index":1706}],"decl_id":null,"docs":" An iterator adaptor to insert a particular value\n between each element of the adapted iterator.","sig":null,"attributes":[{"value":"/ An iterator adaptor to insert a particular value","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/intersperse.rs","byte_start":117405,"byte_end":117457,"line_start":5,"line_end":5,"column_start":1,"column_end":53}},{"value":"/ between each element of the adapted iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/intersperse.rs","byte_start":117458,"byte_end":117507,"line_start":6,"line_end":6,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/intersperse.rs","byte_start":117508,"byte_end":117511,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/intersperse.rs","byte_start":117512,"byte_end":117550,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/intersperse.rs","byte_start":117551,"byte_end":117554,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/intersperse.rs","byte_start":117555,"byte_end":117584,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/intersperse.rs","byte_start":117585,"byte_end":117588,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ See [`.intersperse()`](trait.Itertools.html#method.intersperse) for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/intersperse.rs","byte_start":117589,"byte_end":117678,"line_start":12,"line_end":12,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/intersperse.rs","byte_start":117900,"byte_end":117903,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<Intersperse<I>>::new","value":"pub fn new(I, I::Item) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new Intersperse iterator\n","sig":null,"attributes":[{"value":"/ Create a new Intersperse iterator","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/intersperse.rs","byte_start":117851,"byte_end":117888,"line_start":24,"line_end":24,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1710},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/islice.rs","byte_start":119328,"byte_end":119334,"line_start":20,"line_end":20,"column_start":12,"column_end":18},"name":"ISlice","qualname":"::islice::ISlice","value":"ISlice {  }","parent":null,"children":[{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714}],"decl_id":null,"docs":" An iterator adaptor that yields a subset (a slice) of the base iterator.","sig":null,"attributes":[{"value":"/ An iterator adaptor that yields a subset (a slice) of the base iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/islice.rs","byte_start":118863,"byte_end":118939,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/islice.rs","byte_start":118940,"byte_end":118943,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ **Note:** slicing an iterator is not constant time, and much less efficient than","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/islice.rs","byte_start":118944,"byte_end":119028,"line_start":7,"line_end":7,"column_start":1,"column_end":85}},{"value":"/ slicing for example a vector.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/islice.rs","byte_start":119029,"byte_end":119062,"line_start":8,"line_end":8,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/islice.rs","byte_start":119063,"byte_end":119066,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/islice.rs","byte_start":119067,"byte_end":119074,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/ use std::iter::repeat;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/islice.rs","byte_start":119075,"byte_end":119101,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/islice.rs","byte_start":119102,"byte_end":119131,"line_start":12,"line_end":12,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/islice.rs","byte_start":119132,"byte_end":119135,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ let it = repeat('a').slice(..3);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/islice.rs","byte_start":119136,"byte_end":119172,"line_start":14,"line_end":14,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(it.count(), 3);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/islice.rs","byte_start":119173,"byte_end":119203,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/islice.rs","byte_start":119204,"byte_end":119211,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/islice.rs","byte_start":119212,"byte_end":119215,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ See [`.slice()`](trait.Itertools.html#method.slice) for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/islice.rs","byte_start":119216,"byte_end":119293,"line_start":18,"line_end":18,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/islice.rs","byte_start":119476,"byte_end":119479,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<ISlice<I>>::new","value":"pub fn new<R: GenericRange>(I, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new **ISlice**.\n","sig":null,"attributes":[{"value":"/ Create a new **ISlice**.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/islice.rs","byte_start":119436,"byte_end":119464,"line_start":29,"line_end":29,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":852},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/diff.rs","byte_start":121443,"byte_end":121456,"line_start":20,"line_end":20,"column_start":5,"column_end":18},"name":"FirstMismatch","qualname":"::diff::Diff::FirstMismatch","value":"Diff::FirstMismatch(usize, PutBack<I>, PutBack<J>)","parent":{"krate":0,"index":849},"children":[],"decl_id":null,"docs":" The index of the first non-matching element along with both iterator's remaining elements\n starting with the first mis-match.\n","sig":null,"attributes":[{"value":"/ The index of the first non-matching element along with both iterator's remaining elements","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/diff.rs","byte_start":121302,"byte_end":121395,"line_start":18,"line_end":18,"column_start":5,"column_end":98}},{"value":"/ starting with the first mis-match.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/diff.rs","byte_start":121400,"byte_end":121438,"line_start":19,"line_end":19,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":857},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/diff.rs","byte_start":121589,"byte_end":121596,"line_start":22,"line_end":22,"column_start":5,"column_end":12},"name":"Shorter","qualname":"::diff::Diff::Shorter","value":"Diff::Shorter(usize, PutBack<I>)","parent":{"krate":0,"index":849},"children":[],"decl_id":null,"docs":" The total number of elements that were in `J` along with the remaining elements of `I`.\n","sig":null,"attributes":[{"value":"/ The total number of elements that were in `J` along with the remaining elements of `I`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/diff.rs","byte_start":121493,"byte_end":121584,"line_start":21,"line_end":21,"column_start":5,"column_end":96}}]},{"kind":"TupleVariant","id":{"krate":0,"index":861},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/diff.rs","byte_start":121717,"byte_end":121723,"line_start":24,"line_end":24,"column_start":5,"column_end":11},"name":"Longer","qualname":"::diff::Diff::Longer","value":"Diff::Longer(usize, PutBack<J>)","parent":{"krate":0,"index":849},"children":[],"decl_id":null,"docs":" The total number of elements that were in `I` along with the remaining elements of `J`.\n","sig":null,"attributes":[{"value":"/ The total number of elements that were in `I` along with the remaining elements of `J`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/diff.rs","byte_start":121621,"byte_end":121712,"line_start":23,"line_end":23,"column_start":5,"column_end":96}}]},{"kind":"Enum","id":{"krate":0,"index":849},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/diff.rs","byte_start":121240,"byte_end":121244,"line_start":14,"line_end":14,"column_start":10,"column_end":14},"name":"Diff","qualname":"::diff::Diff","value":"pub enum Diff<I, J> where I: Iterator, J: Iterator {\n    FirstMismatch(usize, PutBack<I>, PutBack<J>),\n    Shorter(usize, PutBack<I>),\n    Longer(usize, PutBack<J>),\n}","parent":null,"children":[{"krate":0,"index":852},{"krate":0,"index":857},{"krate":0,"index":861}],"decl_id":null,"docs":" A type returned by the [`diff_with`](./fn.diff_with.html) function.","sig":null,"attributes":[{"value":"/ A type returned by the [`diff_with`](./fn.diff_with.html) function.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/diff.rs","byte_start":121042,"byte_end":121113,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/diff.rs","byte_start":121114,"byte_end":121117,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ `Diff` represents the way in which the elements yielded by the iterator `I` differ to some","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/diff.rs","byte_start":121118,"byte_end":121212,"line_start":12,"line_end":12,"column_start":1,"column_end":95}},{"value":"/ iterator `J`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/diff.rs","byte_start":121213,"byte_end":121230,"line_start":13,"line_end":13,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":865},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/diff.rs","byte_start":122472,"byte_end":122481,"line_start":39,"line_end":39,"column_start":8,"column_end":17},"name":"diff_with","qualname":"::diff::diff_with","value":"pub fn diff_with<I, J, F>(I, J, F) -> Option<Diff<I::IntoIter, J::IntoIter>>\nwhere I: IntoIterator, J: IntoIterator, F: Fn(&I::Item, &J::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Compares every element yielded by both `i` and `j` with the given function in lock-step and\n returns a `Diff` which describes how `j` differs from `i`.","sig":null,"attributes":[{"value":"/ Compares every element yielded by both `i` and `j` with the given function in lock-step and","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/diff.rs","byte_start":121747,"byte_end":121842,"line_start":27,"line_end":27,"column_start":1,"column_end":96}},{"value":"/ returns a `Diff` which describes how `j` differs from `i`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/diff.rs","byte_start":121843,"byte_end":121905,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/diff.rs","byte_start":121906,"byte_end":121909,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ If the number of elements yielded by `j` is less than the number of elements yielded by `i`,","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/diff.rs","byte_start":121910,"byte_end":122006,"line_start":30,"line_end":30,"column_start":1,"column_end":97}},{"value":"/ the number of `j` elements yielded will be returned along with `i`'s remaining elements as","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/diff.rs","byte_start":122007,"byte_end":122101,"line_start":31,"line_end":31,"column_start":1,"column_end":95}},{"value":"/ `Diff::Shorter`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/diff.rs","byte_start":122102,"byte_end":122122,"line_start":32,"line_end":32,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/diff.rs","byte_start":122123,"byte_end":122126,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ If the two elements of a step differ, the index of those elements along with the remaining","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/diff.rs","byte_start":122127,"byte_end":122221,"line_start":34,"line_end":34,"column_start":1,"column_end":95}},{"value":"/ elements of both `i` and `j` are returned as `Diff::FirstMismatch`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/diff.rs","byte_start":122222,"byte_end":122293,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/diff.rs","byte_start":122294,"byte_end":122297,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ If `i` becomes exhausted before `j` becomes exhausted, the number of elements in `i` along with","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/diff.rs","byte_start":122298,"byte_end":122397,"line_start":37,"line_end":37,"column_start":1,"column_end":100}},{"value":"/ the remaining `j` elements will be returned as `Diff::Longer`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/diff.rs","byte_start":122398,"byte_end":122464,"line_start":38,"line_end":38,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":916},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/kmerge.rs","byte_start":127173,"byte_end":127179,"line_start":157,"line_end":157,"column_start":12,"column_end":18},"name":"KMerge","qualname":"::kmerge::KMerge","value":"KMerge {  }","parent":null,"children":[{"krate":0,"index":918}],"decl_id":null,"docs":" An iterator adaptor that merges an abitrary number of base iterators in ascending order.\n If all base iterators are sorted (ascending), the result is sorted.","sig":null,"attributes":[{"value":"/ An iterator adaptor that merges an abitrary number of base iterators in ascending order.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/kmerge.rs","byte_start":126869,"byte_end":126961,"line_start":151,"line_end":151,"column_start":1,"column_end":93}},{"value":"/ If all base iterators are sorted (ascending), the result is sorted.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/kmerge.rs","byte_start":126962,"byte_end":127033,"line_start":152,"line_end":152,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/kmerge.rs","byte_start":127034,"byte_end":127037,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/kmerge.rs","byte_start":127038,"byte_end":127077,"line_start":154,"line_end":154,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/kmerge.rs","byte_start":127078,"byte_end":127081,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ See [`.kmerge()`](trait.Itertools.html#method.kmerge) for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/kmerge.rs","byte_start":127082,"byte_end":127161,"line_start":156,"line_end":156,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1720},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/linspace.rs","byte_start":128684,"byte_end":128692,"line_start":8,"line_end":8,"column_start":12,"column_end":20},"name":"Linspace","qualname":"::linspace::Linspace","value":"Linspace {  }","parent":null,"children":[{"krate":0,"index":1722},{"krate":0,"index":1723},{"krate":0,"index":1724},{"krate":0,"index":1725}],"decl_id":null,"docs":" An iterator of a sequence of evenly spaced floats.","sig":null,"attributes":[{"value":"/ An iterator of a sequence of evenly spaced floats.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/linspace.rs","byte_start":128556,"byte_end":128610,"line_start":4,"line_end":4,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/linspace.rs","byte_start":128611,"byte_end":128614,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `F`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/linspace.rs","byte_start":128615,"byte_end":128648,"line_start":6,"line_end":6,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":958},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/linspace.rs","byte_start":130304,"byte_end":130312,"line_start":76,"line_end":76,"column_start":8,"column_end":16},"name":"linspace","qualname":"::linspace::linspace","value":"pub fn linspace<F>(F, F, usize) -> Linspace<F> where F: Copy + Sub<Output =\nF> + Div<Output = F> + Mul<Output = F>, usize: ToFloat<F>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of evenly spaced floats.","sig":null,"attributes":[{"value":"/ Return an iterator of evenly spaced floats.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/linspace.rs","byte_start":129881,"byte_end":129928,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/linspace.rs","byte_start":129929,"byte_end":129932,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ The `Linspace` has `n` elements, where the first","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/linspace.rs","byte_start":129933,"byte_end":129985,"line_start":63,"line_end":63,"column_start":1,"column_end":53}},{"value":"/ element is `a` and the last element is `b`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/linspace.rs","byte_start":129986,"byte_end":130033,"line_start":64,"line_end":64,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/linspace.rs","byte_start":130034,"byte_end":130037,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `F`, where `F` must be","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/linspace.rs","byte_start":130038,"byte_end":130089,"line_start":66,"line_end":66,"column_start":1,"column_end":52}},{"value":"/ either `f32` or `f64`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/linspace.rs","byte_start":130090,"byte_end":130116,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/linspace.rs","byte_start":130117,"byte_end":130120,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/linspace.rs","byte_start":130121,"byte_end":130128,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ use itertools::linspace;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/linspace.rs","byte_start":130129,"byte_end":130157,"line_start":70,"line_end":70,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/linspace.rs","byte_start":130158,"byte_end":130161,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ itertools::assert_equal(linspace::<f32>(0., 1., 5),","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/linspace.rs","byte_start":130162,"byte_end":130217,"line_start":72,"line_end":72,"column_start":1,"column_end":56}},{"value":"/                         vec![0., 0.25, 0.5, 0.75, 1.0]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/linspace.rs","byte_start":130218,"byte_end":130278,"line_start":73,"line_end":73,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/linspace.rs","byte_start":130279,"byte_end":130286,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/linspace.rs","byte_start":130287,"byte_end":130296,"line_start":75,"line_end":75,"column_start":1,"column_end":10}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1734},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/minmax.rs","byte_start":130873,"byte_end":130883,"line_start":7,"line_end":7,"column_start":5,"column_end":15},"name":"NoElements","qualname":"::minmax::MinMaxResult::NoElements","value":"MinMaxResult::NoElements","parent":{"krate":0,"index":1732},"children":[],"decl_id":null,"docs":" Empty iterator\n","sig":null,"attributes":[{"value":"/ Empty iterator","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/minmax.rs","byte_start":130850,"byte_end":130868,"line_start":6,"line_end":6,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1736},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/minmax.rs","byte_start":130965,"byte_end":130975,"line_start":10,"line_end":10,"column_start":5,"column_end":15},"name":"OneElement","qualname":"::minmax::MinMaxResult::OneElement","value":"MinMaxResult::OneElement(T)","parent":{"krate":0,"index":1732},"children":[],"decl_id":null,"docs":" Iterator with one element, so the minimum and maximum are the same\n","sig":null,"attributes":[{"value":"/ Iterator with one element, so the minimum and maximum are the same","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/minmax.rs","byte_start":130890,"byte_end":130960,"line_start":9,"line_end":9,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1739},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/minmax.rs","byte_start":131088,"byte_end":131094,"line_start":14,"line_end":14,"column_start":5,"column_end":11},"name":"MinMax","qualname":"::minmax::MinMaxResult::MinMax","value":"MinMaxResult::MinMax(T, T)","parent":{"krate":0,"index":1732},"children":[],"decl_id":null,"docs":" More than one element in the iterator, the first element is not larger\n than the second\n","sig":null,"attributes":[{"value":"/ More than one element in the iterator, the first element is not larger","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/minmax.rs","byte_start":130985,"byte_end":131059,"line_start":12,"line_end":12,"column_start":5,"column_end":79}},{"value":"/ than the second","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/minmax.rs","byte_start":131064,"byte_end":131083,"line_start":13,"line_end":13,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":1732},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/minmax.rs","byte_start":130828,"byte_end":130840,"line_start":5,"line_end":5,"column_start":10,"column_end":22},"name":"MinMaxResult","qualname":"::minmax::MinMaxResult","value":"pub enum MinMaxResult<T> { NoElements, OneElement(T), MinMax(T, T), }","parent":null,"children":[{"krate":0,"index":1734},{"krate":0,"index":1736},{"krate":0,"index":1739}],"decl_id":null,"docs":" `MinMaxResult` is an enum returned by `minmax`. See `Itertools::minmax()` for\n more detail.\n","sig":null,"attributes":[{"value":"/ `MinMaxResult` is an enum returned by `minmax`. See `Itertools::minmax()` for","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/minmax.rs","byte_start":130692,"byte_end":130773,"line_start":2,"line_end":2,"column_start":1,"column_end":82}},{"value":"/ more detail.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/minmax.rs","byte_start":130774,"byte_end":130790,"line_start":3,"line_end":3,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/minmax.rs","byte_start":131914,"byte_end":131925,"line_start":38,"line_end":38,"column_start":12,"column_end":23},"name":"into_option","qualname":"<MinMaxResult<T>>::into_option","value":"pub fn into_option(Self) -> Option<(T, T)>","parent":null,"children":[],"decl_id":null,"docs":" `into_option` creates an `Option` of type `(T, T)`. The returned `Option`\n has variant `None` if and only if the `MinMaxResult` has variant\n `NoElements`. Otherwise variant `Some(x, y)` is returned where `x <= y`.\n If `MinMaxResult` has variant `OneElement(x)`, performing this operation\n will make one clone of `x`.","sig":null,"attributes":[{"value":"/ `into_option` creates an `Option` of type `(T, T)`. The returned `Option`","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/minmax.rs","byte_start":131141,"byte_end":131218,"line_start":18,"line_end":18,"column_start":5,"column_end":82}},{"value":"/ has variant `None` if and only if the `MinMaxResult` has variant","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/minmax.rs","byte_start":131223,"byte_end":131291,"line_start":19,"line_end":19,"column_start":5,"column_end":73}},{"value":"/ `NoElements`. Otherwise variant `Some(x, y)` is returned where `x <= y`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/minmax.rs","byte_start":131296,"byte_end":131372,"line_start":20,"line_end":20,"column_start":5,"column_end":81}},{"value":"/ If `MinMaxResult` has variant `OneElement(x)`, performing this operation","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/minmax.rs","byte_start":131377,"byte_end":131453,"line_start":21,"line_end":21,"column_start":5,"column_end":81}},{"value":"/ will make one clone of `x`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/minmax.rs","byte_start":131458,"byte_end":131489,"line_start":22,"line_end":22,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/minmax.rs","byte_start":131494,"byte_end":131497,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/minmax.rs","byte_start":131502,"byte_end":131516,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/minmax.rs","byte_start":131521,"byte_end":131524,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/minmax.rs","byte_start":131529,"byte_end":131536,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ use itertools::MinMaxResult::{self, NoElements, OneElement, MinMax};","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/minmax.rs","byte_start":131541,"byte_end":131613,"line_start":27,"line_end":27,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/minmax.rs","byte_start":131618,"byte_end":131621,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let r: MinMaxResult<i32> = NoElements;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/minmax.rs","byte_start":131626,"byte_end":131668,"line_start":29,"line_end":29,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(r.into_option(), None);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/minmax.rs","byte_start":131673,"byte_end":131711,"line_start":30,"line_end":30,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/minmax.rs","byte_start":131716,"byte_end":131719,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ let r = OneElement(1);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/minmax.rs","byte_start":131724,"byte_end":131750,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(r.into_option(), Some((1, 1)));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/minmax.rs","byte_start":131755,"byte_end":131801,"line_start":33,"line_end":33,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/minmax.rs","byte_start":131806,"byte_end":131809,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ let r = MinMax(1, 2);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/minmax.rs","byte_start":131814,"byte_end":131839,"line_start":35,"line_end":35,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(r.into_option(), Some((1, 2)));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/minmax.rs","byte_start":131844,"byte_end":131890,"line_start":36,"line_end":36,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/minmax.rs","byte_start":131895,"byte_end":131902,"line_start":37,"line_end":37,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":969},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"misc","qualname":"::misc","value":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","parent":null,"children":[{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":974},{"krate":0,"index":977},{"krate":0,"index":980},{"krate":0,"index":983},{"krate":0,"index":986},{"krate":0,"index":989},{"krate":0,"index":992},{"krate":0,"index":1878},{"krate":0,"index":1873},{"krate":0,"index":1867},{"krate":0,"index":1860},{"krate":0,"index":1852},{"krate":0,"index":1843},{"krate":0,"index":1833},{"krate":0,"index":1822},{"krate":0,"index":1810},{"krate":0,"index":1797},{"krate":0,"index":1783},{"krate":0,"index":1768},{"krate":0,"index":1752},{"krate":0,"index":1882},{"krate":0,"index":1885},{"krate":0,"index":997},{"krate":0,"index":1000},{"krate":0,"index":1008},{"krate":0,"index":1014},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1020},{"krate":0,"index":1022},{"krate":0,"index":1025},{"krate":0,"index":1028},{"krate":0,"index":1030},{"krate":0,"index":1032},{"krate":0,"index":1034},{"krate":0,"index":1038},{"krate":0,"index":1042},{"krate":0,"index":1045},{"krate":0,"index":1049},{"krate":0,"index":1055}],"decl_id":null,"docs":" A module of helper traits and iterators that are not intended to be used\n directly.\n","sig":null,"attributes":[{"value":"/ A module of helper traits and iterators that are not intended to be used","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":134534,"byte_end":134610,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/ directly.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":134611,"byte_end":134624,"line_start":2,"line_end":2,"column_start":1,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":989},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":134793,"byte_end":134810,"line_start":15,"line_end":15,"column_start":11,"column_end":28},"name":"IntoIteratorTuple","qualname":"::misc::IntoIteratorTuple","value":"IntoIteratorTuple","parent":null,"children":[{"krate":0,"index":990},{"krate":0,"index":991}],"decl_id":null,"docs":" Apply `IntoIterator` on each element of a tuple.\n","sig":null,"attributes":[{"value":"/ Apply `IntoIterator` on each element of a tuple.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":134730,"byte_end":134782,"line_start":14,"line_end":14,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":990},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":134873,"byte_end":134879,"line_start":18,"line_end":18,"column_start":10,"column_end":16},"name":"Output","qualname":"::misc::IntoIteratorTuple::Output","value":"type Output;","parent":{"krate":0,"index":989},"children":[],"decl_id":null,"docs":" Tuple of values that implement `Iterator`.\n","sig":null,"attributes":[{"value":"/ Tuple of values that implement `Iterator`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":134817,"byte_end":134863,"line_start":17,"line_end":17,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":134926,"byte_end":134945,"line_start":21,"line_end":21,"column_start":8,"column_end":27},"name":"into_iterator_tuple","qualname":"::misc::IntoIteratorTuple::into_iterator_tuple","value":"pub fn into_iterator_tuple(Self) -> Self::Output","parent":{"krate":0,"index":989},"children":[],"decl_id":null,"docs":" Return a tuple of iterators.\n","sig":null,"attributes":[{"value":"/ Return a tuple of iterators.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":134886,"byte_end":134918,"line_start":20,"line_end":20,"column_start":5,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":992},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":135076,"byte_end":135087,"line_start":26,"line_end":26,"column_start":11,"column_end":22},"name":"AppendTuple","qualname":"::misc::AppendTuple","value":"AppendTuple<X>","parent":null,"children":[{"krate":0,"index":994},{"krate":0,"index":995}],"decl_id":null,"docs":" A helper trait for (x, y, z) ++ w => (x, y, z, w),\n used for implementing `iproduct!`.\n","sig":null,"attributes":[{"value":"/ A helper trait for (x, y, z) ++ w => (x, y, z, w),","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":134972,"byte_end":135026,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/ used for implementing `iproduct!`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":135027,"byte_end":135065,"line_start":25,"line_end":25,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":994},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":135131,"byte_end":135137,"line_start":28,"line_end":28,"column_start":10,"column_end":16},"name":"Result","qualname":"::misc::AppendTuple::Result","value":"type Result;","parent":{"krate":0,"index":992},"children":[],"decl_id":null,"docs":" Resulting tuple type\n","sig":null,"attributes":[{"value":"/ Resulting tuple type","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":135097,"byte_end":135121,"line_start":27,"line_end":27,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":135189,"byte_end":135195,"line_start":30,"line_end":30,"column_start":8,"column_end":14},"name":"append","qualname":"::misc::AppendTuple::append","value":"pub fn append(Self, X) -> Self::Result","parent":{"krate":0,"index":992},"children":[],"decl_id":null,"docs":" “Append” value `x` to a tuple.\n","sig":null,"attributes":[{"value":"/ “Append” value `x` to a tuple.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":135143,"byte_end":135181,"line_start":29,"line_end":29,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1882},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":136055,"byte_end":136065,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"FlatTuples","qualname":"::misc::FlatTuples","value":"FlatTuples {  }","parent":null,"children":[{"krate":0,"index":1884}],"decl_id":null,"docs":" A helper iterator that maps an iterator of tuples like\n `((A, B), C)` to an iterator of `(A, B, C)`.","sig":null,"attributes":[{"value":"/ A helper iterator that maps an iterator of tuples like","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":135878,"byte_end":135936,"line_start":58,"line_end":58,"column_start":1,"column_end":59}},{"value":"/ `((A, B), C)` to an iterator of `(A, B, C)`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":135937,"byte_end":135985,"line_start":59,"line_end":59,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":135986,"byte_end":135989,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Used by the `iproduct!()` macro.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":135990,"byte_end":136026,"line_start":61,"line_end":61,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":136176,"byte_end":136179,"line_start":70,"line_end":70,"column_start":12,"column_end":15},"name":"new","qualname":"<FlatTuples<I>>::new","value":"pub fn new(I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `FlatTuples`.\n","sig":null,"attributes":[{"value":"/ Create a new `FlatTuples`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":136115,"byte_end":136145,"line_start":68,"line_end":68,"column_start":5,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":1014},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":136984,"byte_end":136996,"line_start":102,"line_end":102,"column_start":11,"column_end":23},"name":"GenericRange","qualname":"::misc::GenericRange","value":"GenericRange","parent":null,"children":[{"krate":0,"index":1015},{"krate":0,"index":1016}],"decl_id":null,"docs":" `GenericRange` is implemented by Rust's built-in range types, produced\n by range syntax like `a..`, `..b` or `c..d`.\n","sig":null,"attributes":[{"value":"/ `GenericRange` is implemented by Rust's built-in range types, produced","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":136850,"byte_end":136924,"line_start":100,"line_end":100,"column_start":1,"column_end":75}},{"value":"/ by range syntax like `a..`, `..b` or `c..d`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":136925,"byte_end":136973,"line_start":101,"line_end":101,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":137057,"byte_end":137062,"line_start":105,"line_end":105,"column_start":8,"column_end":13},"name":"start","qualname":"::misc::GenericRange::start","value":"pub fn start(&Self) -> Option<usize>","parent":{"krate":0,"index":1014},"children":[],"decl_id":null,"docs":" Start index (inclusive)\n","sig":null,"attributes":[{"value":"/ Start index (inclusive)","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":137022,"byte_end":137049,"line_start":104,"line_end":104,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":137164,"byte_end":137167,"line_start":110,"line_end":110,"column_start":8,"column_end":11},"name":"end","qualname":"::misc::GenericRange::end","value":"pub fn end(&Self) -> Option<usize>","parent":{"krate":0,"index":1014},"children":[],"decl_id":null,"docs":" End index (exclusive)\n","sig":null,"attributes":[{"value":"/ End index (exclusive)","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":137131,"byte_end":137156,"line_start":109,"line_end":109,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":1025},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":137719,"byte_end":137726,"line_start":140,"line_end":140,"column_start":11,"column_end":18},"name":"ToFloat","qualname":"::misc::ToFloat","value":"ToFloat<F>: Copy","parent":null,"children":[{"krate":0,"index":1027}],"decl_id":null,"docs":" Helper trait to convert usize to floating point type.\n","sig":null,"attributes":[{"value":"/ Helper trait to convert usize to floating point type.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":137651,"byte_end":137708,"line_start":139,"line_end":139,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":137797,"byte_end":137805,"line_start":143,"line_end":143,"column_start":8,"column_end":16},"name":"to_float","qualname":"::misc::ToFloat::to_float","value":"pub fn to_float(Self) -> F","parent":{"krate":0,"index":1025},"children":[],"decl_id":null,"docs":" Convert usize to float.\n","sig":null,"attributes":[{"value":"/ Convert usize to float.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":137762,"byte_end":137789,"line_start":142,"line_end":142,"column_start":5,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":1032},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":138114,"byte_end":138123,"line_start":161,"line_end":161,"column_start":11,"column_end":20},"name":"MendSlice","qualname":"::misc::MendSlice","value":"MendSlice","parent":null,"children":[{"krate":0,"index":1033}],"decl_id":null,"docs":" A trait for items that can *maybe* be joined together.\n","sig":null,"attributes":[{"value":"/ A trait for items that can *maybe* be joined together.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":138045,"byte_end":138103,"line_start":160,"line_end":160,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":138219,"byte_end":138223,"line_start":165,"line_end":165,"column_start":8,"column_end":12},"name":"mend","qualname":"::misc::MendSlice::mend","value":"pub fn mend(Self, Self) -> Result<Self, (Self, Self)> where Self: Sized","parent":{"krate":0,"index":1032},"children":[],"decl_id":null,"docs":" If the slices are contiguous, return them joined into one.\n","sig":null,"attributes":[{"value":"/ If the slices are contiguous, return them joined into one.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":138149,"byte_end":138211,"line_start":164,"line_end":164,"column_start":5,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":1045},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":139485,"byte_end":139490,"line_start":209,"line_end":209,"column_start":18,"column_end":23},"name":"Slice","qualname":"::misc::Slice","value":"Slice","parent":null,"children":[{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048}],"decl_id":null,"docs":" A helper trait to let `ZipSlices` accept both `&[T]` and `&mut [T]`.","sig":null,"attributes":[{"value":"/ A helper trait to let `ZipSlices` accept both `&[T]` and `&mut [T]`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":139269,"byte_end":139341,"line_start":204,"line_end":204,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":139342,"byte_end":139345,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ Unsafe trait because:","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":139346,"byte_end":139371,"line_start":206,"line_end":206,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":139372,"byte_end":139375,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ - Implementors must guarantee that `get_unchecked` is valid for all indices `0..len()`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":139376,"byte_end":139467,"line_start":208,"line_end":208,"column_start":1,"column_end":92}}]},{"kind":"Type","id":{"krate":0,"index":1046},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":139558,"byte_end":139562,"line_start":211,"line_end":211,"column_start":10,"column_end":14},"name":"Item","qualname":"::misc::Slice::Item","value":"type Item;","parent":{"krate":0,"index":1045},"children":[],"decl_id":null,"docs":" The type of a reference to the slice's elements\n","sig":null,"attributes":[{"value":"/ The type of a reference to the slice's elements","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":139497,"byte_end":139548,"line_start":210,"line_end":210,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":139590,"byte_end":139593,"line_start":213,"line_end":213,"column_start":8,"column_end":11},"name":"len","qualname":"::misc::Slice::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":1045},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":139644,"byte_end":139657,"line_start":215,"line_end":215,"column_start":15,"column_end":28},"name":"get_unchecked","qualname":"::misc::Slice::get_unchecked","value":"pub unsafe fn get_unchecked(&mut Self, usize) -> Self::Item","parent":{"krate":0,"index":1045},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1888},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/pad_tail.rs","byte_start":140693,"byte_end":140701,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"PadUsing","qualname":"::pad_tail::PadUsing","value":"PadUsing {  }","parent":null,"children":[{"krate":0,"index":1891},{"krate":0,"index":1892},{"krate":0,"index":1893},{"krate":0,"index":1894}],"decl_id":null,"docs":" An iterator adaptor that pads a sequence to a minimum length by filling\n missing elements using a closure.","sig":null,"attributes":[{"value":"/ An iterator adaptor that pads a sequence to a minimum length by filling","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/pad_tail.rs","byte_start":140417,"byte_end":140492,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ missing elements using a closure.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/pad_tail.rs","byte_start":140493,"byte_end":140530,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/pad_tail.rs","byte_start":140531,"byte_end":140534,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/pad_tail.rs","byte_start":140535,"byte_end":140574,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/pad_tail.rs","byte_start":140575,"byte_end":140578,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See [`.pad_using()`](trait.Itertools.html#method.pad_using) for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/pad_tail.rs","byte_start":140579,"byte_end":140664,"line_start":9,"line_end":9,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/pad_tail.rs","byte_start":140922,"byte_end":140925,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"new","qualname":"<PadUsing<I, F>>::new","value":"pub fn new(I, usize, F) -> PadUsing<I, F>","parent":null,"children":[],"decl_id":null,"docs":" Create a new **PadUsing** iterator.\n","sig":null,"attributes":[{"value":"/ Create a new **PadUsing** iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/pad_tail.rs","byte_start":140871,"byte_end":140910,"line_start":22,"line_end":22,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1095},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/rciter.rs","byte_start":142699,"byte_end":142705,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"RcIter","qualname":"::rciter::RcIter","value":"RcIter { rciter }","parent":null,"children":[{"krate":0,"index":1097}],"decl_id":null,"docs":" A wrapper for `Rc<RefCell<I>>`, that implements the `Iterator` trait.","sig":null,"attributes":[{"value":"/ A wrapper for `Rc<RefCell<I>>`, that implements the `Iterator` trait.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/rciter.rs","byte_start":142528,"byte_end":142601,"line_start":6,"line_end":6,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/rciter.rs","byte_start":142602,"byte_end":142605,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ See [`.into_rc()`](trait.Itertools.html#method.into_rc) for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/rciter.rs","byte_start":142606,"byte_end":142687,"line_start":8,"line_end":8,"column_start":1,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":1097},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/rciter.rs","byte_start":142747,"byte_end":142753,"line_start":11,"line_end":11,"column_start":9,"column_end":15},"name":"rciter","qualname":"::rciter::RcIter::rciter","value":"std::rc::Rc<std::cell::RefCell<I>>","parent":{"krate":0,"index":1095},"children":[],"decl_id":null,"docs":" The boxed iterator.\n","sig":null,"attributes":[{"value":"/ The boxed iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/rciter.rs","byte_start":142715,"byte_end":142738,"line_start":10,"line_end":10,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/rciter.rs","byte_start":142834,"byte_end":142837,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<RcIter<I>>::new","value":"pub fn new(I) -> RcIter<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new RcIter.\n","sig":null,"attributes":[{"value":"/ Create a new RcIter.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/rciter.rs","byte_start":142798,"byte_end":142822,"line_start":15,"line_end":15,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1120},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/repeatn.rs","byte_start":144139,"byte_end":144146,"line_start":3,"line_end":3,"column_start":12,"column_end":19},"name":"RepeatN","qualname":"::repeatn::RepeatN","value":"RepeatN {  }","parent":null,"children":[{"krate":0,"index":1122},{"krate":0,"index":1123}],"decl_id":null,"docs":" An iterator that repeats an element exactly *n* times.\n","sig":null,"attributes":[{"value":"/ An iterator that repeats an element exactly *n* times.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/repeatn.rs","byte_start":144069,"byte_end":144127,"line_start":2,"line_end":2,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/repeatn.rs","byte_start":144278,"byte_end":144281,"line_start":10,"line_end":10,"column_start":12,"column_end":15},"name":"new","qualname":"<RepeatN<A>>::new","value":"pub fn new(A, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new **RepeatN** with **n** repetitions.\n","sig":null,"attributes":[{"value":"/ Create a new **RepeatN** with **n** repetitions.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/repeatn.rs","byte_start":144214,"byte_end":144266,"line_start":9,"line_end":9,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1138},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":145694,"byte_end":145704,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"name":"RepeatCall","qualname":"::sources::RepeatCall","value":"RepeatCall {  }","parent":null,"children":[{"krate":0,"index":1140}],"decl_id":null,"docs":" An iterator source that produces elements indefinitely by calling\n a given closure.","sig":null,"attributes":[{"value":"/ An iterator source that produces elements indefinitely by calling","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":145204,"byte_end":145273,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"/ a given closure.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":145274,"byte_end":145294,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":145295,"byte_end":145298,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is the return type of the closure.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":145299,"byte_end":145359,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":145360,"byte_end":145363,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":145364,"byte_end":145371,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ use itertools::RepeatCall;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":145372,"byte_end":145402,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":145403,"byte_end":145406,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ itertools::assert_equal(","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":145407,"byte_end":145435,"line_start":12,"line_end":12,"column_start":1,"column_end":29}},{"value":"/     RepeatCall::new(|| \"A\".to_string()).take(5),","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":145436,"byte_end":145488,"line_start":13,"line_end":13,"column_start":1,"column_end":53}},{"value":"/     vec![\"A\", \"A\", \"A\", \"A\", \"A\"]","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":145489,"byte_end":145526,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":145527,"byte_end":145533,"line_start":15,"line_end":15,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":145534,"byte_end":145537,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let mut x = 1;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":145538,"byte_end":145556,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/ itertools::assert_equal(","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":145557,"byte_end":145585,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/     RepeatCall::new(|| { x = -x; x }).take(5),","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":145586,"byte_end":145636,"line_start":19,"line_end":19,"column_start":1,"column_end":51}},{"value":"/     vec![-1, 1, -1, 1, -1]","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":145637,"byte_end":145667,"line_start":20,"line_end":20,"column_start":1,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":145668,"byte_end":145674,"line_start":21,"line_end":21,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":145675,"byte_end":145682,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1143},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":145808,"byte_end":145811,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<RepeatCall<F>>::new","value":"pub fn new<A>(F) -> Self where F: FnMut() -> A","parent":null,"children":[],"decl_id":null,"docs":" Create a new `RepeatCall` from a closure.\n","sig":null,"attributes":[{"value":"/ Create a new `RepeatCall` from a closure.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":145751,"byte_end":145796,"line_start":28,"line_end":28,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1899},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":147484,"byte_end":147490,"line_start":97,"line_end":97,"column_start":12,"column_end":18},"name":"Unfold","qualname":"::sources::Unfold","value":"Unfold { state }","parent":null,"children":[{"krate":0,"index":1902},{"krate":0,"index":1903}],"decl_id":null,"docs":" `Unfold` is a general iterator builder: it has a mutable state value,\n and a closure with access to the state that produces the next value.","sig":null,"attributes":[{"value":"/ `Unfold` is a general iterator builder: it has a mutable state value,","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":146338,"byte_end":146411,"line_start":61,"line_end":61,"column_start":1,"column_end":74}},{"value":"/ and a closure with access to the state that produces the next value.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":146412,"byte_end":146484,"line_start":62,"line_end":62,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":146485,"byte_end":146488,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This more or less equivalent to a regular struct with an `Iterator`","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":146489,"byte_end":146560,"line_start":64,"line_end":64,"column_start":1,"column_end":72}},{"value":"/ implementation, and is useful for one-off iterators.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":146561,"byte_end":146617,"line_start":65,"line_end":65,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":146618,"byte_end":146621,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":146622,"byte_end":146629,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ // an iterator that yields sequential Fibonacci numbers,","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":146630,"byte_end":146690,"line_start":68,"line_end":68,"column_start":1,"column_end":61}},{"value":"/ // and stops at the maximum representable value.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":146691,"byte_end":146743,"line_start":69,"line_end":69,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":146744,"byte_end":146747,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ use itertools::Unfold;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":146748,"byte_end":146774,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":146775,"byte_end":146778,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let mut fibonacci = Unfold::new((1_u32, 1_u32), |state| {","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":146779,"byte_end":146840,"line_start":73,"line_end":73,"column_start":1,"column_end":62}},{"value":"/     let (ref mut x1, ref mut x2) = *state;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":146841,"byte_end":146887,"line_start":74,"line_end":74,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":146888,"byte_end":146891,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     // Attempt to get the next Fibonacci number","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":146892,"byte_end":146943,"line_start":76,"line_end":76,"column_start":1,"column_end":52}},{"value":"/     let next = x1.saturating_add(*x2);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":146944,"byte_end":146986,"line_start":77,"line_end":77,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":146987,"byte_end":146990,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     // Shift left: ret <- x1 <- x2 <- next","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":146991,"byte_end":147037,"line_start":79,"line_end":79,"column_start":1,"column_end":47}},{"value":"/     let ret = *x1;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":147038,"byte_end":147060,"line_start":80,"line_end":80,"column_start":1,"column_end":23}},{"value":"/     *x1 = *x2;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":147061,"byte_end":147079,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/     *x2 = next;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":147080,"byte_end":147099,"line_start":82,"line_end":82,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":147100,"byte_end":147103,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     // If addition has saturated at the maximum, we are finished","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":147104,"byte_end":147172,"line_start":84,"line_end":84,"column_start":1,"column_end":69}},{"value":"/     if ret == *x1 && ret > 1 {","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":147173,"byte_end":147207,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"/         return None;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":147208,"byte_end":147232,"line_start":86,"line_end":86,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":147233,"byte_end":147242,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":147243,"byte_end":147246,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/     Some(ret)","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":147247,"byte_end":147264,"line_start":89,"line_end":89,"column_start":1,"column_end":18}},{"value":"/ });","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":147265,"byte_end":147272,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":147273,"byte_end":147276,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ itertools::assert_equal(fibonacci.by_ref().take(8),","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":147277,"byte_end":147332,"line_start":92,"line_end":92,"column_start":1,"column_end":56}},{"value":"/                         vec![1, 1, 2, 3, 5, 8, 13, 21]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":147333,"byte_end":147393,"line_start":93,"line_end":93,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(fibonacci.last(), Some(2_971_215_073))","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":147394,"byte_end":147447,"line_start":94,"line_end":94,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":147448,"byte_end":147455,"line_start":95,"line_end":95,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":1903},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":147598,"byte_end":147603,"line_start":100,"line_end":100,"column_start":9,"column_end":14},"name":"state","qualname":"::sources::Unfold::state","value":"St","parent":{"krate":0,"index":1899},"children":[],"decl_id":null,"docs":" Internal state that will be passed to the closure on the next iteration\n","sig":null,"attributes":[{"value":"/ Internal state that will be passed to the closure on the next iteration","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":147514,"byte_end":147589,"line_start":99,"line_end":99,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1159},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":147857,"byte_end":147860,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<Unfold<St, F>>::new","value":"pub fn new(St, F) -> Unfold<St, F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new iterator with the specified closure as the \"iterator\n function\" and an initial state to eventually pass to the closure\n","sig":null,"attributes":[{"value":"/ Creates a new iterator with the specified closure as the \"iterator","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":147688,"byte_end":147758,"line_start":106,"line_end":106,"column_start":5,"column_end":75}},{"value":"/ function\" and an initial state to eventually pass to the closure","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":147763,"byte_end":147831,"line_start":107,"line_end":107,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":147836,"byte_end":147845,"line_start":108,"line_end":108,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1167},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"size_hint","qualname":"::size_hint","value":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","parent":null,"children":[{"krate":0,"index":1168},{"krate":0,"index":1171},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1178},{"krate":0,"index":1180},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1184}],"decl_id":null,"docs":" Arithmetic on **Iterator** *.size_hint()* values.","sig":null,"attributes":[{"value":"/ Arithmetic on **Iterator** *.size_hint()* values.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":148334,"byte_end":148387,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":148388,"byte_end":148391,"line_start":2,"line_end":2,"column_start":1,"column_end":4}}]},{"kind":"Type","id":{"krate":0,"index":1174},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":148499,"byte_end":148507,"line_start":8,"line_end":8,"column_start":10,"column_end":18},"name":"SizeHint","qualname":"::size_hint::SizeHint","value":"(usize, Option<usize>)","parent":null,"children":[],"decl_id":null,"docs":" **SizeHint** is the return type of **Iterator::size_hint()**.\n","sig":null,"attributes":[{"value":"/ **SizeHint** is the return type of **Iterator::size_hint()**.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":148424,"byte_end":148489,"line_start":7,"line_end":7,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":1175},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":148584,"byte_end":148587,"line_start":12,"line_end":12,"column_start":8,"column_end":11},"name":"add","qualname":"::size_hint::add","value":"pub fn add(SizeHint, SizeHint) -> SizeHint","parent":null,"children":[],"decl_id":null,"docs":" Add **SizeHint** correctly.\n","sig":null,"attributes":[{"value":"/ Add **SizeHint** correctly.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":148535,"byte_end":148566,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"inline","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":148567,"byte_end":148576,"line_start":11,"line_end":11,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1176},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":148872,"byte_end":148882,"line_start":24,"line_end":24,"column_start":8,"column_end":18},"name":"add_scalar","qualname":"::size_hint::add_scalar","value":"pub fn add_scalar(SizeHint, usize) -> SizeHint","parent":null,"children":[],"decl_id":null,"docs":" Add **x** correctly to a **SizeHint**.\n","sig":null,"attributes":[{"value":"/ Add **x** correctly to a **SizeHint**.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":148812,"byte_end":148854,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"inline","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":148855,"byte_end":148864,"line_start":23,"line_end":23,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1178},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":149111,"byte_end":149121,"line_start":33,"line_end":33,"column_start":8,"column_end":18},"name":"sub_scalar","qualname":"::size_hint::sub_scalar","value":"pub fn sub_scalar(SizeHint, usize) -> SizeHint","parent":null,"children":[],"decl_id":null,"docs":" Sbb **x** correctly to a **SizeHint**.\n","sig":null,"attributes":[{"value":"/ Sbb **x** correctly to a **SizeHint**.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":149051,"byte_end":149093,"line_start":31,"line_end":31,"column_start":1,"column_end":43}},{"value":"inline","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":149094,"byte_end":149103,"line_start":32,"line_end":32,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1180},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":149616,"byte_end":149626,"line_start":53,"line_end":53,"column_start":8,"column_end":18},"name":"mul_scalar","qualname":"::size_hint::mul_scalar","value":"pub fn mul_scalar(SizeHint, usize) -> SizeHint","parent":null,"children":[],"decl_id":null,"docs":" Multiply **x** correctly with a **SizeHint**.","sig":null,"attributes":[{"value":"/ Multiply **x** correctly with a **SizeHint**.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":149289,"byte_end":149338,"line_start":41,"line_end":41,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":149339,"byte_end":149342,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":149343,"byte_end":149350,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use std::usize;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":149351,"byte_end":149370,"line_start":44,"line_end":44,"column_start":1,"column_end":20}},{"value":"/ use itertools::size_hint;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":149371,"byte_end":149400,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":149401,"byte_end":149404,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(size_hint::mul_scalar((3, Some(4)), 3),","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":149405,"byte_end":149459,"line_start":47,"line_end":47,"column_start":1,"column_end":55}},{"value":"/            (9, Some(12)));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":149460,"byte_end":149490,"line_start":48,"line_end":48,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(size_hint::mul_scalar((3, Some(4)), usize::MAX),","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":149491,"byte_end":149554,"line_start":49,"line_end":49,"column_start":1,"column_end":64}},{"value":"/            (usize::MAX, None));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":149555,"byte_end":149590,"line_start":50,"line_end":50,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":149591,"byte_end":149598,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":149599,"byte_end":149608,"line_start":52,"line_end":52,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1182},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":150286,"byte_end":150289,"line_start":80,"line_end":80,"column_start":8,"column_end":11},"name":"mul","qualname":"::size_hint::mul","value":"pub fn mul(SizeHint, SizeHint) -> SizeHint","parent":null,"children":[],"decl_id":null,"docs":" Multiply **SizeHint** correctly","sig":null,"attributes":[{"value":"/ Multiply **SizeHint** correctly","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":149874,"byte_end":149909,"line_start":64,"line_end":64,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":149910,"byte_end":149913,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":149914,"byte_end":149921,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ use std::usize;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":149922,"byte_end":149941,"line_start":67,"line_end":67,"column_start":1,"column_end":20}},{"value":"/ use itertools::size_hint;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":149942,"byte_end":149971,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":149972,"byte_end":149975,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(size_hint::mul((3, Some(4)), (3, Some(4))),","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":149976,"byte_end":150034,"line_start":70,"line_end":70,"column_start":1,"column_end":59}},{"value":"/            (9, Some(16)));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":150035,"byte_end":150065,"line_start":71,"line_end":71,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":150066,"byte_end":150069,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(size_hint::mul((3, Some(4)), (usize::MAX, None)),","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":150070,"byte_end":150134,"line_start":73,"line_end":73,"column_start":1,"column_end":65}},{"value":"/            (usize::MAX, None));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":150135,"byte_end":150170,"line_start":74,"line_end":74,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":150171,"byte_end":150174,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(size_hint::mul((3, None), (0, Some(0))),","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":150175,"byte_end":150230,"line_start":76,"line_end":76,"column_start":1,"column_end":56}},{"value":"/            (0, Some(0)));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":150231,"byte_end":150260,"line_start":77,"line_end":77,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":150261,"byte_end":150268,"line_start":78,"line_end":78,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":150269,"byte_end":150278,"line_start":79,"line_end":79,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1183},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":150605,"byte_end":150608,"line_start":92,"line_end":92,"column_start":8,"column_end":11},"name":"max","qualname":"::size_hint::max","value":"pub fn max(SizeHint, SizeHint) -> SizeHint","parent":null,"children":[],"decl_id":null,"docs":" Return the maximum\n","sig":null,"attributes":[{"value":"/ Return the maximum","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":150565,"byte_end":150587,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"inline","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":150588,"byte_end":150597,"line_start":91,"line_end":91,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1184},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":150943,"byte_end":150946,"line_start":108,"line_end":108,"column_start":8,"column_end":11},"name":"min","qualname":"::size_hint::min","value":"pub fn min(SizeHint, SizeHint) -> SizeHint","parent":null,"children":[],"decl_id":null,"docs":" Return the minimum\n","sig":null,"attributes":[{"value":"/ Return the minimum","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":150903,"byte_end":150925,"line_start":106,"line_end":106,"column_start":1,"column_end":23}},{"value":"inline","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/size_hint.rs","byte_start":150926,"byte_end":150935,"line_start":107,"line_end":107,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":1205},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":151858,"byte_end":151864,"line_start":20,"line_end":20,"column_start":12,"column_end":18},"name":"Stride","qualname":"::stride::Stride","value":"Stride {  }","parent":null,"children":[{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212}],"decl_id":null,"docs":" An iterator similar to the slice iterator, but with a certain number of steps\n (the stride) skipped per iteration.","sig":null,"attributes":[{"value":"/ An iterator similar to the slice iterator, but with a certain number of steps","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":151623,"byte_end":151704,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/ (the stride) skipped per iteration.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":151705,"byte_end":151744,"line_start":15,"line_end":15,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":151745,"byte_end":151748,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `Stride` does not support zero-sized types for `A`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":151749,"byte_end":151804,"line_start":17,"line_end":17,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":151805,"byte_end":151808,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `&'a A`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":151809,"byte_end":151846,"line_start":19,"line_end":19,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1222},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":152445,"byte_end":152454,"line_start":40,"line_end":40,"column_start":12,"column_end":21},"name":"StrideMut","qualname":"::stride::StrideMut","value":"StrideMut {  }","parent":null,"children":[{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1227},{"krate":0,"index":1228},{"krate":0,"index":1229}],"decl_id":null,"docs":" The mutable equivalent of Stride.","sig":null,"attributes":[{"value":"/ The mutable equivalent of Stride.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":152287,"byte_end":152324,"line_start":35,"line_end":35,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":152325,"byte_end":152328,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ `StrideMut` does not support zero-sized types for `A`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":152329,"byte_end":152387,"line_start":37,"line_end":37,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":152388,"byte_end":152391,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `&'a mut A`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":152392,"byte_end":152433,"line_start":39,"line_end":39,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1239},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":152810,"byte_end":152822,"line_start":53,"line_end":53,"column_start":19,"column_end":31},"name":"from_ptr_len","qualname":"<Stride>::from_ptr_len","value":"pub unsafe fn from_ptr_len(*const A, usize, isize) -> Stride","parent":null,"children":[],"decl_id":null,"docs":" Create a Stride iterator from a raw pointer.\n","sig":null,"attributes":[{"value":"/ Create a Stride iterator from a raw pointer.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":152743,"byte_end":152791,"line_start":52,"line_end":52,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1243},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":153191,"byte_end":153203,"line_start":68,"line_end":68,"column_start":19,"column_end":31},"name":"from_ptr_len","qualname":"<StrideMut>::from_ptr_len","value":"pub unsafe fn from_ptr_len(*mut A, usize, isize) -> StrideMut","parent":null,"children":[],"decl_id":null,"docs":" Create a StrideMut iterator from a raw pointer.\n","sig":null,"attributes":[{"value":"/ Create a StrideMut iterator from a raw pointer.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":153121,"byte_end":153172,"line_start":67,"line_end":67,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1253},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":160560,"byte_end":160567,"line_start":286,"line_end":286,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StrideMut>::get_mut","value":"pub fn get_mut<'b>(&'b mut Self, usize) -> Option<&'b mut A>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the element of a stride at the\n given index, or None if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to the element of a stride at the","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":160424,"byte_end":160488,"line_start":284,"line_end":284,"column_start":5,"column_end":69}},{"value":"/ given index, or None if the index is out of bounds.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":160493,"byte_end":160548,"line_start":285,"line_end":285,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1279},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/tee.rs","byte_start":161726,"byte_end":161729,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"Tee","qualname":"::tee::Tee","value":"Tee {  }","parent":null,"children":[{"krate":0,"index":1281},{"krate":0,"index":1282}],"decl_id":null,"docs":" One half of an iterator pair where both return the same elements.","sig":null,"attributes":[{"value":"/ One half of an iterator pair where both return the same elements.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/tee.rs","byte_start":161567,"byte_end":161636,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/tee.rs","byte_start":161637,"byte_end":161640,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ See [`.tee()`](trait.Itertools.html#method.tee) for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/tee.rs","byte_start":161641,"byte_end":161714,"line_start":17,"line_end":17,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1984},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_eq.rs","byte_start":163580,"byte_end":163585,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"ZipEq","qualname":"::zip_eq::ZipEq","value":"ZipEq {  }","parent":null,"children":[{"krate":0,"index":1987},{"krate":0,"index":1988}],"decl_id":null,"docs":" An iterator which iterates two other iterators simultaneously","sig":null,"attributes":[{"value":"/ An iterator which iterates two other iterators simultaneously","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_eq.rs","byte_start":163328,"byte_end":163393,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_eq.rs","byte_start":163394,"byte_end":163397,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ See [`.zip_eq()`](trait.Itertools.html#method.zip_eq) for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_eq.rs","byte_start":163398,"byte_end":163477,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_eq.rs","byte_start":163495,"byte_end":163568,"line_start":7,"line_end":7,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1993},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_longest.rs","byte_start":164955,"byte_end":164965,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"ZipLongest","qualname":"::zip_longest::ZipLongest","value":"ZipLongest {  }","parent":null,"children":[{"krate":0,"index":1996},{"krate":0,"index":1997}],"decl_id":null,"docs":" An iterator which iterates two other iterators simultaneously","sig":null,"attributes":[{"value":"/ An iterator which iterates two other iterators simultaneously","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_longest.rs","byte_start":164659,"byte_end":164724,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_longest.rs","byte_start":164725,"byte_end":164728,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_longest.rs","byte_start":164729,"byte_end":164758,"line_start":11,"line_end":11,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_longest.rs","byte_start":164759,"byte_end":164762,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ See [`.zip_longest()`](trait.Itertools.html#method.zip_longest) for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_longest.rs","byte_start":164763,"byte_end":164852,"line_start":13,"line_end":13,"column_start":1,"column_end":90}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_longest.rs","byte_start":164870,"byte_end":164943,"line_start":15,"line_end":15,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1338},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_longest.rs","byte_start":165139,"byte_end":165142,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"new","qualname":"<ZipLongest<T, U>>::new","value":"pub fn new(T, U) -> ZipLongest<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ZipLongest` iterator.\n","sig":null,"attributes":[{"value":"/ Create a new `ZipLongest` iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_longest.rs","byte_start":165088,"byte_end":165127,"line_start":25,"line_end":25,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2005},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_longest.rs","byte_start":167090,"byte_end":167094,"line_start":89,"line_end":89,"column_start":5,"column_end":9},"name":"Both","qualname":"::zip_longest::EitherOrBoth::Both","value":"EitherOrBoth::Both(A, B)","parent":{"krate":0,"index":2002},"children":[],"decl_id":null,"docs":" Neither input iterator is exhausted yet, yielding two values.\n","sig":null,"attributes":[{"value":"/ Neither input iterator is exhausted yet, yielding two values.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_longest.rs","byte_start":167020,"byte_end":167085,"line_start":88,"line_end":88,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2009},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_longest.rs","byte_start":167227,"byte_end":167231,"line_start":92,"line_end":92,"column_start":5,"column_end":9},"name":"Left","qualname":"::zip_longest::EitherOrBoth::Left","value":"EitherOrBoth::Left(A)","parent":{"krate":0,"index":2002},"children":[],"decl_id":null,"docs":" The parameter iterator of `.zip_longest()` is exhausted,\n only yielding a value from the `self` iterator.\n","sig":null,"attributes":[{"value":"/ The parameter iterator of `.zip_longest()` is exhausted,","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_longest.rs","byte_start":167106,"byte_end":167166,"line_start":90,"line_end":90,"column_start":5,"column_end":65}},{"value":"/ only yielding a value from the `self` iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_longest.rs","byte_start":167171,"byte_end":167222,"line_start":91,"line_end":91,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2012},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_longest.rs","byte_start":167361,"byte_end":167366,"line_start":95,"line_end":95,"column_start":5,"column_end":10},"name":"Right","qualname":"::zip_longest::EitherOrBoth::Right","value":"EitherOrBoth::Right(B)","parent":{"krate":0,"index":2002},"children":[],"decl_id":null,"docs":" The `self` iterator of `.zip_longest()` is exhausted,\n only yielding a value from the parameter iterator.\n","sig":null,"attributes":[{"value":"/ The `self` iterator of `.zip_longest()` is exhausted,","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_longest.rs","byte_start":167240,"byte_end":167297,"line_start":93,"line_end":93,"column_start":5,"column_end":62}},{"value":"/ only yielding a value from the parameter iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_longest.rs","byte_start":167302,"byte_end":167356,"line_start":94,"line_end":94,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":2002},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_longest.rs","byte_start":166995,"byte_end":167007,"line_start":87,"line_end":87,"column_start":10,"column_end":22},"name":"EitherOrBoth","qualname":"::zip_longest::EitherOrBoth","value":"pub enum EitherOrBoth<A, B> { Both(A, B), Left(A), Right(B), }","parent":null,"children":[{"krate":0,"index":2005},{"krate":0,"index":2009},{"krate":0,"index":2012}],"decl_id":null,"docs":" A value yielded by `ZipLongest`.\n Contains one or two values, depending on which of the input iterators are exhausted.","sig":null,"attributes":[{"value":"/ A value yielded by `ZipLongest`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_longest.rs","byte_start":166727,"byte_end":166763,"line_start":82,"line_end":82,"column_start":1,"column_end":37}},{"value":"/ Contains one or two values, depending on which of the input iterators are exhausted.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_longest.rs","byte_start":166764,"byte_end":166852,"line_start":83,"line_end":83,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_longest.rs","byte_start":166853,"byte_end":166856,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ See [`.zip_longest()`](trait.Itertools.html#method.zip_longest) for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_longest.rs","byte_start":166857,"byte_end":166946,"line_start":85,"line_end":85,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":2038},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/ziptuple.rs","byte_start":168163,"byte_end":168166,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"Zip","qualname":"::ziptuple::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":2040}],"decl_id":null,"docs":" An iterator that generalizes *.zip()* and allows running multiple iterators in lockstep.","sig":null,"attributes":[{"value":"/ An iterator that generalizes *.zip()* and allows running multiple iterators in lockstep.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/ziptuple.rs","byte_start":167450,"byte_end":167542,"line_start":5,"line_end":5,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/ziptuple.rs","byte_start":167543,"byte_end":167546,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The iterator `Zip<(I, J, ..., M)>` is formed from a tuple of iterators (or values that","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/ziptuple.rs","byte_start":167547,"byte_end":167637,"line_start":7,"line_end":7,"column_start":1,"column_end":91}},{"value":"/ implement `IntoIterator`) and yields elements","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/ziptuple.rs","byte_start":167638,"byte_end":167687,"line_start":8,"line_end":8,"column_start":1,"column_end":50}},{"value":"/ until any of the subiterators yields `None`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/ziptuple.rs","byte_start":167688,"byte_end":167736,"line_start":9,"line_end":9,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/ziptuple.rs","byte_start":167737,"byte_end":167740,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The iterator element type is a tuple like like `(A, B, ..., E)` where `A` to `E` are the","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/ziptuple.rs","byte_start":167741,"byte_end":167833,"line_start":11,"line_end":11,"column_start":1,"column_end":93}},{"value":"/ element types of the subiterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/ziptuple.rs","byte_start":167834,"byte_end":167871,"line_start":12,"line_end":12,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/ziptuple.rs","byte_start":167872,"byte_end":167875,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/ziptuple.rs","byte_start":167876,"byte_end":167883,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ use itertools::Zip;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/ziptuple.rs","byte_start":167884,"byte_end":167907,"line_start":15,"line_end":15,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/ziptuple.rs","byte_start":167908,"byte_end":167911,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ // Iterate over three sequences side-by-side","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/ziptuple.rs","byte_start":167912,"byte_end":167960,"line_start":17,"line_end":17,"column_start":1,"column_end":49}},{"value":"/ let mut xs = [0, 0, 0];","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/ziptuple.rs","byte_start":167961,"byte_end":167988,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"/ let ys = [69, 107, 101];","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/ziptuple.rs","byte_start":167989,"byte_end":168017,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/ziptuple.rs","byte_start":168018,"byte_end":168021,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ for (i, a, b) in Zip::new((0..100, &mut xs, &ys)) {","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/ziptuple.rs","byte_start":168022,"byte_end":168077,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/    *a = i ^ *b;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/ziptuple.rs","byte_start":168078,"byte_end":168097,"line_start":22,"line_end":22,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/ziptuple.rs","byte_start":168098,"byte_end":168103,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/ziptuple.rs","byte_start":168104,"byte_end":168107,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(xs, [69, 106, 103]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/ziptuple.rs","byte_start":168108,"byte_end":168143,"line_start":25,"line_end":25,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/ziptuple.rs","byte_start":168144,"byte_end":168151,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1361},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/ziptuple.rs","byte_start":168334,"byte_end":168337,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<Zip<T>>::new","value":"pub fn new(T) -> Zip<T::Output>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Zip` from a tuple of iterators.\n","sig":null,"attributes":[{"value":"/ Create a new `Zip` from a tuple of iterators.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/ziptuple.rs","byte_start":168273,"byte_end":168322,"line_start":35,"line_end":35,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2251},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":171312,"byte_end":171321,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"ZipSlices","qualname":"::zipslices::ZipSlices","value":"ZipSlices {  }","parent":null,"children":[{"krate":0,"index":2254},{"krate":0,"index":2255},{"krate":0,"index":2256},{"krate":0,"index":2257}],"decl_id":null,"docs":" An iterator which iterates two slices simultaneously.","sig":null,"attributes":[{"value":"/ An iterator which iterates two slices simultaneously.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":170725,"byte_end":170782,"line_start":12,"line_end":12,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":170783,"byte_end":170786,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `ZipSlices` acts like a double-ended `.zip()` iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":170787,"byte_end":170846,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":170847,"byte_end":170850,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ It was intended to be more efficient than `.zip()`, and it was, then","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":170851,"byte_end":170923,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ rustc changed how it optimizes so it can not promise improved performance","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":170924,"byte_end":171001,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ at this time.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":171002,"byte_end":171019,"line_start":18,"line_end":18,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":171020,"byte_end":171023,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Note that elements past the end of the shortest of the two slices are ignored.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":171024,"byte_end":171106,"line_start":20,"line_end":20,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":171107,"byte_end":171110,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Iterator element type for `ZipSlices<T, U>` is `(T::Item, U::Item)`. For example,","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":171111,"byte_end":171196,"line_start":22,"line_end":22,"column_start":1,"column_end":86}},{"value":"/ for a `ZipSlices<&'a [A], &'b mut [B]>`, the element type is `(&'a A, &'b mut B)`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":171197,"byte_end":171283,"line_start":23,"line_end":23,"column_start":1,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1375},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":171703,"byte_end":171706,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<ZipSlices<&'a [A], &'b [B]>>::new","value":"pub fn new(&'a [A], &'b [B]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ZipSlices` from slices `a` and `b`.","sig":null,"attributes":[{"value":"/ Create a new `ZipSlices` from slices `a` and `b`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":171440,"byte_end":171493,"line_start":33,"line_end":33,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":171498,"byte_end":171501,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Act like a double-ended `.zip()` iterator, but more efficiently.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":171506,"byte_end":171574,"line_start":35,"line_end":35,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":171579,"byte_end":171582,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Note that elements past the end of the shortest of the two slices are ignored.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":171587,"byte_end":171669,"line_start":37,"line_end":37,"column_start":5,"column_end":87}},{"value":"inline(always)","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":171674,"byte_end":171691,"line_start":38,"line_end":38,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":172243,"byte_end":172254,"line_start":60,"line_end":60,"column_start":12,"column_end":23},"name":"from_slices","qualname":"<ZipSlices<T, U>>::from_slices","value":"pub fn from_slices(T, U) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ZipSlices` from slices `a` and `b`.","sig":null,"attributes":[{"value":"/ Create a new `ZipSlices` from slices `a` and `b`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":171980,"byte_end":172033,"line_start":54,"line_end":54,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":172038,"byte_end":172041,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Act like a double-ended `.zip()` iterator, but more efficiently.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":172046,"byte_end":172114,"line_start":56,"line_end":56,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":172119,"byte_end":172122,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Note that elements past the end of the shortest of the two slices are ignored.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":172127,"byte_end":172209,"line_start":58,"line_end":58,"column_start":5,"column_end":87}},{"value":"inline(always)","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":172214,"byte_end":172231,"line_start":59,"line_end":59,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":1399},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":3312,"byte_end":3317,"line_start":123,"line_end":123,"column_start":10,"column_end":15},"name":"MapFn","qualname":"::MapFn","value":"iter::Map<I, fn(: I::Item) -> B>","parent":null,"children":[],"decl_id":null,"docs":" The function pointer map iterator created with `.map_fn()`.\n","sig":null,"attributes":[{"value":"/ The function pointer map iterator created with `.map_fn()`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":3239,"byte_end":3302,"line_start":122,"line_end":122,"column_start":1,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":1404},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":5868,"byte_end":5877,"line_start":206,"line_end":206,"column_start":11,"column_end":20},"name":"Itertools","qualname":"::Itertools","value":"Itertools: Iterator","parent":null,"children":[{"krate":0,"index":1405},{"krate":0,"index":1407},{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1412},{"krate":0,"index":1414},{"krate":0,"index":1417},{"krate":0,"index":1420},{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1431},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1449},{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1453},{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1458},{"krate":0,"index":1460},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1463},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1470},{"krate":0,"index":1471},{"krate":0,"index":1472},{"krate":0,"index":1474},{"krate":0,"index":1479},{"krate":0,"index":1483},{"krate":0,"index":1485},{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":1492},{"krate":0,"index":1494},{"krate":0,"index":1500},{"krate":0,"index":1503},{"krate":0,"index":1507}],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[{"value":"/ The trait `Itertools`: extra iterator adaptors and methods for iterators.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":5263,"byte_end":5340,"line_start":195,"line_end":195,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":5341,"byte_end":5344,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ This trait defines a number of methods. They are divided into two groups:","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":5345,"byte_end":5422,"line_start":197,"line_end":197,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":5423,"byte_end":5426,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ * *Adaptors* take an iterator and parameter as input, and return","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":5427,"byte_end":5495,"line_start":199,"line_end":199,"column_start":1,"column_end":69}},{"value":"/ a new iterator value. These are listed first in the trait. An example","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":5496,"byte_end":5569,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ of an adaptor is [`.interleave()`](#method.interleave)","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":5570,"byte_end":5628,"line_start":201,"line_end":201,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":5629,"byte_end":5632,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ * *Regular methods* are those that don't return iterators and instead","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":5633,"byte_end":5706,"line_start":203,"line_end":203,"column_start":1,"column_end":74}},{"value":"/ return a regular value of some other kind. [`.find_position()`](#method.find_position)","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":5707,"byte_end":5797,"line_start":204,"line_end":204,"column_start":1,"column_end":91}},{"value":"/ is an example and the first regular method in the list.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":5798,"byte_end":5857,"line_start":205,"line_end":205,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1405},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":6266,"byte_end":6276,"line_start":222,"line_end":222,"column_start":8,"column_end":18},"name":"interleave","qualname":"::Itertools::interleave","value":"pub fn interleave<J>(Self, J) -> Interleave<Self, J::IntoIter> where\nJ: IntoIterator<Item = Self::Item>, Self: Sized","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Alternate elements from two iterators until both\n run out.","sig":null,"attributes":[{"value":"/ Alternate elements from two iterators until both","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":5912,"byte_end":5964,"line_start":209,"line_end":209,"column_start":5,"column_end":57}},{"value":"/ run out.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":5969,"byte_end":5981,"line_start":210,"line_end":210,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":5986,"byte_end":5989,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":5994,"byte_end":6036,"line_start":212,"line_end":212,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":6041,"byte_end":6044,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":6049,"byte_end":6078,"line_start":214,"line_end":214,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":6083,"byte_end":6086,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":6091,"byte_end":6098,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":6103,"byte_end":6132,"line_start":217,"line_end":217,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":6137,"byte_end":6140,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ let it = (0..3).interleave(vec![7, 8]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":6145,"byte_end":6188,"line_start":219,"line_end":219,"column_start":5,"column_end":48}},{"value":"/ itertools::assert_equal(it, vec![0, 7, 1, 8, 2]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":6193,"byte_end":6246,"line_start":220,"line_end":220,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":6251,"byte_end":6258,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1407},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":6792,"byte_end":6811,"line_start":239,"line_end":239,"column_start":8,"column_end":27},"name":"interleave_shortest","qualname":"::Itertools::interleave_shortest","value":"pub fn interleave_shortest<J>(Self, J)\n-> InterleaveShortest<Self, J::IntoIter> where J: IntoIterator<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Alternate elements from two iterators until one of them runs out.","sig":null,"attributes":[{"value":"/ Alternate elements from two iterators until one of them runs out.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":6471,"byte_end":6540,"line_start":229,"line_end":229,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":6545,"byte_end":6548,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":6553,"byte_end":6595,"line_start":231,"line_end":231,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":6600,"byte_end":6603,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":6608,"byte_end":6615,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":6620,"byte_end":6649,"line_start":234,"line_end":234,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":6654,"byte_end":6657,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ let it = (0..5).interleave_shortest(vec![7, 8]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":6662,"byte_end":6714,"line_start":236,"line_end":236,"column_start":5,"column_end":57}},{"value":"/ itertools::assert_equal(it, vec![0, 7, 1, 8, 2]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":6719,"byte_end":6772,"line_start":237,"line_end":237,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":6777,"byte_end":6784,"line_start":238,"line_end":238,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1409},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":7384,"byte_end":7395,"line_start":258,"line_end":258,"column_start":8,"column_end":19},"name":"intersperse","qualname":"::Itertools::intersperse","value":"pub fn intersperse(Self, Self::Item) -> Intersperse<Self> where Self: Sized,\nSelf::Item: Clone","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" An iterator adaptor to insert a particular value\n between each element of the adapted iterator.","sig":null,"attributes":[{"value":"/ An iterator adaptor to insert a particular value","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":7022,"byte_end":7074,"line_start":246,"line_end":246,"column_start":5,"column_end":57}},{"value":"/ between each element of the adapted iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":7079,"byte_end":7128,"line_start":247,"line_end":247,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":7133,"byte_end":7136,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":7141,"byte_end":7183,"line_start":249,"line_end":249,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":7188,"byte_end":7191,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":7196,"byte_end":7225,"line_start":251,"line_end":251,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":7230,"byte_end":7233,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":7238,"byte_end":7245,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":7250,"byte_end":7279,"line_start":254,"line_end":254,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":7284,"byte_end":7287,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal((0..3).intersperse(8), vec![0, 8, 1, 8, 2]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":7292,"byte_end":7364,"line_start":256,"line_end":256,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":7369,"byte_end":7376,"line_start":257,"line_end":257,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":8226,"byte_end":8237,"line_start":283,"line_end":283,"column_start":8,"column_end":19},"name":"zip_longest","qualname":"::Itertools::zip_longest","value":"pub fn zip_longest<J>(Self, J) -> ZipLongest<Self, J::IntoIter> where\nJ: IntoIterator, Self: Sized","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Create an iterator which iterates over both this and the specified\n iterator simultaneously, yielding pairs of two optional elements.","sig":null,"attributes":[{"value":"/ Create an iterator which iterates over both this and the specified","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":7560,"byte_end":7630,"line_start":265,"line_end":265,"column_start":5,"column_end":75}},{"value":"/ iterator simultaneously, yielding pairs of two optional elements.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":7635,"byte_end":7704,"line_start":266,"line_end":266,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":7709,"byte_end":7712,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":7717,"byte_end":7746,"line_start":268,"line_end":268,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":7751,"byte_end":7754,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ When both iterators return `None`, all further invocations of `.next()`","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":7759,"byte_end":7834,"line_start":270,"line_end":270,"column_start":5,"column_end":80}},{"value":"/ will return `None`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":7839,"byte_end":7862,"line_start":271,"line_end":271,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":7867,"byte_end":7870,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":7875,"byte_end":7903,"line_start":273,"line_end":273,"column_start":5,"column_end":33}},{"value":"/ [`EitherOrBoth<Self::Item, J::Item>`](enum.EitherOrBoth.html).","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":7908,"byte_end":7974,"line_start":274,"line_end":274,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":7979,"byte_end":7982,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":7987,"byte_end":7998,"line_start":276,"line_end":276,"column_start":5,"column_end":16}},{"value":"/ use itertools::EitherOrBoth::{Both, Right};","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":8003,"byte_end":8050,"line_start":277,"line_end":277,"column_start":5,"column_end":52}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":8055,"byte_end":8084,"line_start":278,"line_end":278,"column_start":5,"column_end":34}},{"value":"/ let it = (0..1).zip_longest(1..3);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":8089,"byte_end":8127,"line_start":279,"line_end":279,"column_start":5,"column_end":43}},{"value":"/ itertools::assert_equal(it, vec![Both(0, 1), Right(2)]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":8132,"byte_end":8192,"line_start":280,"line_end":280,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":8197,"byte_end":8204,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":8209,"byte_end":8218,"line_start":282,"line_end":282,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1412},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":8666,"byte_end":8672,"line_start":296,"line_end":296,"column_start":8,"column_end":14},"name":"zip_eq","qualname":"::Itertools::zip_eq","value":"pub fn zip_eq<J>(Self, J) -> ZipEq<Self, J::IntoIter> where J: IntoIterator,\nSelf: Sized","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Create an iterator which iterates over both this and the specified\n iterator simultaneously, yielding pairs of elements.","sig":null,"attributes":[{"value":"/ Create an iterator which iterates over both this and the specified","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":8413,"byte_end":8483,"line_start":290,"line_end":290,"column_start":5,"column_end":75}},{"value":"/ iterator simultaneously, yielding pairs of elements.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":8488,"byte_end":8544,"line_start":291,"line_end":291,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":8549,"byte_end":8552,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the iterators reach an end and they are not of equal","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":8557,"byte_end":8627,"line_start":293,"line_end":293,"column_start":5,"column_end":75}},{"value":"/ lengths.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":8632,"byte_end":8644,"line_start":294,"line_end":294,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":8649,"byte_end":8658,"line_start":295,"line_end":295,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1414},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":9603,"byte_end":9611,"line_start":325,"line_end":325,"column_start":8,"column_end":16},"name":"batching","qualname":"::Itertools::batching","value":"pub fn batching<B, F>(Self, F) -> Batching<Self, F> where F: FnMut(&mut Self)\n-> Option<B>, Self: Sized","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" A “meta iterator adaptor”. Its closure recives a reference to the iterator\n and may pick off as many elements as it likes, to produce the next iterator element.","sig":null,"attributes":[{"value":"/ A “meta iterator adaptor”. Its closure recives a reference to the iterator","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":8839,"byte_end":8921,"line_start":303,"line_end":303,"column_start":5,"column_end":83}},{"value":"/ and may pick off as many elements as it likes, to produce the next iterator element.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":8926,"byte_end":9014,"line_start":304,"line_end":304,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":9019,"byte_end":9022,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `B`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":9027,"byte_end":9060,"line_start":306,"line_end":306,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":9065,"byte_end":9068,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":9073,"byte_end":9080,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":9085,"byte_end":9114,"line_start":309,"line_end":309,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":9119,"byte_end":9122,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ // An adaptor that gathers elements up in pairs","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":9127,"byte_end":9178,"line_start":311,"line_end":311,"column_start":5,"column_end":56}},{"value":"/ let pit = (0..4).batching(|mut it| {","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":9183,"byte_end":9223,"line_start":312,"line_end":312,"column_start":5,"column_end":45}},{"value":"/            match it.next() {","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":9228,"byte_end":9260,"line_start":313,"line_end":313,"column_start":5,"column_end":37}},{"value":"/                None => None,","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":9265,"byte_end":9297,"line_start":314,"line_end":314,"column_start":5,"column_end":37}},{"value":"/                Some(x) => match it.next() {","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":9302,"byte_end":9349,"line_start":315,"line_end":315,"column_start":5,"column_end":52}},{"value":"/                    None => None,","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":9354,"byte_end":9390,"line_start":316,"line_end":316,"column_start":5,"column_end":41}},{"value":"/                    Some(y) => Some((x, y)),","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":9395,"byte_end":9442,"line_start":317,"line_end":317,"column_start":5,"column_end":52}},{"value":"/                }","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":9447,"byte_end":9467,"line_start":318,"line_end":318,"column_start":5,"column_end":25}},{"value":"/            }","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":9472,"byte_end":9488,"line_start":319,"line_end":319,"column_start":5,"column_end":21}},{"value":"/        });","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":9493,"byte_end":9507,"line_start":320,"line_end":320,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":9512,"byte_end":9515,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal(pit, vec![(0, 1), (2, 3)]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":9520,"byte_end":9575,"line_start":322,"line_end":322,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":9580,"byte_end":9587,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":9592,"byte_end":9595,"line_start":324,"line_end":324,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1417},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":10450,"byte_end":10458,"line_start":349,"line_end":349,"column_start":8,"column_end":16},"name":"group_by","qualname":"::Itertools::group_by","value":"pub fn group_by<K, F>(Self, F) -> GroupBy<K, Self, F> where Self: Sized,\nF: FnMut(&Self::Item) -> K","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Group iterator elements. Consecutive elements that map to the same key (“runs”),\n are returned as the iterator elements of `GroupBy`.","sig":null,"attributes":[{"value":"/ Group iterator elements. Consecutive elements that map to the same key (“runs”),","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":9773,"byte_end":9861,"line_start":332,"line_end":332,"column_start":5,"column_end":89}},{"value":"/ are returned as the iterator elements of `GroupBy`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":9866,"byte_end":9921,"line_start":333,"line_end":333,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":9926,"byte_end":9929,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `(K, Vec<Self::Item>)`","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":9934,"byte_end":9985,"line_start":335,"line_end":335,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":9990,"byte_end":9993,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":9998,"byte_end":10005,"line_start":337,"line_end":337,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":10010,"byte_end":10039,"line_start":338,"line_end":338,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":10044,"byte_end":10047,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ // group data into runs of larger than zero or not.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":10052,"byte_end":10107,"line_start":340,"line_end":340,"column_start":5,"column_end":60}},{"value":"/ let data = vec![1, 3, -2, -2, 1, 0, 1, 2];","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":10112,"byte_end":10158,"line_start":341,"line_end":341,"column_start":5,"column_end":51}},{"value":"/ // groups:     |---->|------>|--------->|","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":10163,"byte_end":10208,"line_start":342,"line_end":342,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":10213,"byte_end":10216,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ for (key, group) in data.into_iter().group_by(|elt| *elt >= 0) {","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":10221,"byte_end":10289,"line_start":344,"line_end":344,"column_start":5,"column_end":73}},{"value":"/     // Check that the sum of each group is +/- 4.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":10294,"byte_end":10347,"line_start":345,"line_end":345,"column_start":5,"column_end":58}},{"value":"/     assert_eq!(4, group.iter().fold(0_i32, |a, b| a + b).abs());","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":10352,"byte_end":10420,"line_start":346,"line_end":346,"column_start":5,"column_end":73}},{"value":"/ }","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":10425,"byte_end":10430,"line_start":347,"line_end":347,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":10435,"byte_end":10442,"line_start":348,"line_end":348,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1420},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":12081,"byte_end":12094,"line_start":390,"line_end":390,"column_start":8,"column_end":21},"name":"group_by_lazy","qualname":"::Itertools::group_by_lazy","value":"pub fn group_by_lazy<K, F>(Self, F) -> GroupByLazy<K, Self, F> where\nSelf: Sized, F: FnMut(&Self::Item) -> K","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Return an iterable that can group iterator elements.\n Consecutive elements that map to the same key (“runs”), are assigned\n to the same group.","sig":null,"attributes":[{"value":"/ Return an iterable that can group iterator elements.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":10621,"byte_end":10677,"line_start":357,"line_end":357,"column_start":5,"column_end":61}},{"value":"/ Consecutive elements that map to the same key (“runs”), are assigned","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":10682,"byte_end":10758,"line_start":358,"line_end":358,"column_start":5,"column_end":77}},{"value":"/ to the same group.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":10763,"byte_end":10785,"line_start":359,"line_end":359,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":10790,"byte_end":10793,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ `GroupByLazy` is the storage for the lazy grouping operation.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":10798,"byte_end":10863,"line_start":361,"line_end":361,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":10868,"byte_end":10871,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ If the groups are consumed in order, or if each group's iterator is","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":10876,"byte_end":10947,"line_start":363,"line_end":363,"column_start":5,"column_end":76}},{"value":"/ dropped without keeping it around, then `GroupByLazy` uses no","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":10952,"byte_end":11017,"line_start":364,"line_end":364,"column_start":5,"column_end":70}},{"value":"/ allocations.  It needs allocations only if several group iterators","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":11022,"byte_end":11092,"line_start":365,"line_end":365,"column_start":5,"column_end":75}},{"value":"/ are alive at the same time.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":11097,"byte_end":11128,"line_start":366,"line_end":366,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":11133,"byte_end":11136,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ This type implements `IntoIterator` (it is **not** an iterator","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":11141,"byte_end":11207,"line_start":368,"line_end":368,"column_start":5,"column_end":71}},{"value":"/ itself), because the group iterators need to borrow from this","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":11212,"byte_end":11277,"line_start":369,"line_end":369,"column_start":5,"column_end":70}},{"value":"/ value. It should be stored in a local variable or temporary and","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":11282,"byte_end":11349,"line_start":370,"line_end":370,"column_start":5,"column_end":72}},{"value":"/ iterated.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":11354,"byte_end":11367,"line_start":371,"line_end":371,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":11372,"byte_end":11375,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `(K, Group)`: the group's key and the","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":11380,"byte_end":11446,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/ group iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":11451,"byte_end":11470,"line_start":374,"line_end":374,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":11475,"byte_end":11478,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":11483,"byte_end":11490,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":11495,"byte_end":11524,"line_start":377,"line_end":377,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":11529,"byte_end":11532,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ // group data into runs of larger than zero or not.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":11537,"byte_end":11592,"line_start":379,"line_end":379,"column_start":5,"column_end":60}},{"value":"/ let data = vec![1, 3, -2, -2, 1, 0, 1, 2];","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":11597,"byte_end":11643,"line_start":380,"line_end":380,"column_start":5,"column_end":51}},{"value":"/ // groups:     |---->|------>|--------->|","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":11648,"byte_end":11693,"line_start":381,"line_end":381,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":11698,"byte_end":11701,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ // Note: The `&` is significant here, `GroupByLazy` is iterable","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":11706,"byte_end":11773,"line_start":383,"line_end":383,"column_start":5,"column_end":72}},{"value":"/ // only by reference. You can also call `.into_iter()` explicitly.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":11778,"byte_end":11848,"line_start":384,"line_end":384,"column_start":5,"column_end":75}},{"value":"/ for (key, group) in &data.into_iter().group_by_lazy(|elt| *elt >= 0) {","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":11853,"byte_end":11927,"line_start":385,"line_end":385,"column_start":5,"column_end":79}},{"value":"/     // Check that the sum of each group is +/- 4.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":11932,"byte_end":11985,"line_start":386,"line_end":386,"column_start":5,"column_end":58}},{"value":"/     assert_eq!(4, group.fold(0_i32, |a, b| a + b).abs());","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":11990,"byte_end":12051,"line_start":387,"line_end":387,"column_start":5,"column_end":66}},{"value":"/ }","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":12056,"byte_end":12061,"line_start":388,"line_end":388,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":12066,"byte_end":12073,"line_start":389,"line_end":389,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1423},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":13344,"byte_end":13355,"line_start":424,"line_end":424,"column_start":8,"column_end":19},"name":"chunks_lazy","qualname":"::Itertools::chunks_lazy","value":"pub fn chunks_lazy(Self, usize) -> ChunksLazy<Self> where Self: Sized","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Return an iterable that can chunk the iterator.","sig":null,"attributes":[{"value":"/ Return an iterable that can chunk the iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":12264,"byte_end":12315,"line_start":397,"line_end":397,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":12320,"byte_end":12323,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ Yield subiterators (chunks) that each yield a fixed number elements,","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":12328,"byte_end":12400,"line_start":399,"line_end":399,"column_start":5,"column_end":77}},{"value":"/ determined by `size`. The last chunk will be shorter if there aren't","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":12405,"byte_end":12477,"line_start":400,"line_end":400,"column_start":5,"column_end":77}},{"value":"/ enough elements.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":12482,"byte_end":12502,"line_start":401,"line_end":401,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":12507,"byte_end":12510,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ `ChunksLazy` is based on `GroupByLazy`: it is iterable (implements","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":12515,"byte_end":12585,"line_start":403,"line_end":403,"column_start":5,"column_end":75}},{"value":"/ `IntoIterator`, **not** `Iterator`), and it only buffers if several","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":12590,"byte_end":12661,"line_start":404,"line_end":404,"column_start":5,"column_end":76}},{"value":"/ chunk iterators are alive at the same time.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":12666,"byte_end":12713,"line_start":405,"line_end":405,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":12718,"byte_end":12721,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Chunk`, each chunk's iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":12726,"byte_end":12786,"line_start":407,"line_end":407,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":12791,"byte_end":12794,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `size` is 0.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":12799,"byte_end":12829,"line_start":409,"line_end":409,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":12834,"byte_end":12837,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":12842,"byte_end":12849,"line_start":411,"line_end":411,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":12854,"byte_end":12883,"line_start":412,"line_end":412,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":12888,"byte_end":12891,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ let data = vec![1, 1, 2, -2, 6, 0, 3, 1];","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":12896,"byte_end":12941,"line_start":414,"line_end":414,"column_start":5,"column_end":50}},{"value":"/ //chunk size=3 |------->|-------->|--->|","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":12946,"byte_end":12990,"line_start":415,"line_end":415,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":12995,"byte_end":12998,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ // Note: The `&` is significant here, `ChunksLazy` is iterable","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":13003,"byte_end":13069,"line_start":417,"line_end":417,"column_start":5,"column_end":71}},{"value":"/ // only by reference. You can also call `.into_iter()` explicitly.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":13074,"byte_end":13144,"line_start":418,"line_end":418,"column_start":5,"column_end":75}},{"value":"/ for chunk in &data.into_iter().chunks_lazy(3) {","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":13149,"byte_end":13200,"line_start":419,"line_end":419,"column_start":5,"column_end":56}},{"value":"/     // Check that the sum of each chunk is 4.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":13205,"byte_end":13254,"line_start":420,"line_end":420,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(4, chunk.fold(0_i32, |a, b| a + b));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":13259,"byte_end":13314,"line_start":421,"line_end":421,"column_start":5,"column_end":60}},{"value":"/ }","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":13319,"byte_end":13324,"line_start":422,"line_end":422,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":13329,"byte_end":13336,"line_start":423,"line_end":423,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":14256,"byte_end":14259,"line_start":453,"line_end":453,"column_start":8,"column_end":11},"name":"tee","qualname":"::Itertools::tee","value":"pub fn tee(Self) -> (Tee<Self>, Tee<Self>) where Self: Sized,\nSelf::Item: Clone","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Split into an iterator pair that both yield all elements from\n the original iterator.","sig":null,"attributes":[{"value":"/ Split into an iterator pair that both yield all elements from","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":13512,"byte_end":13577,"line_start":432,"line_end":432,"column_start":5,"column_end":70}},{"value":"/ the original iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":13582,"byte_end":13608,"line_start":433,"line_end":433,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":13613,"byte_end":13616,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ **Note:** If the iterator is clonable, prefer using that instead","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":13621,"byte_end":13689,"line_start":435,"line_end":435,"column_start":5,"column_end":73}},{"value":"/ of using this method. It is likely to be more efficient.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":13694,"byte_end":13754,"line_start":436,"line_end":436,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":13759,"byte_end":13762,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":13767,"byte_end":13809,"line_start":438,"line_end":438,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":13814,"byte_end":13817,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":13822,"byte_end":13829,"line_start":440,"line_end":440,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":13834,"byte_end":13863,"line_start":441,"line_end":441,"column_start":5,"column_end":34}},{"value":"/ let xs = vec![0, 1, 2, 3];","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":13868,"byte_end":13898,"line_start":442,"line_end":442,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":13903,"byte_end":13906,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ let (mut t1, mut t2) = xs.into_iter().tee();","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":13911,"byte_end":13959,"line_start":444,"line_end":444,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(t1.next(), Some(0));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":13964,"byte_end":13999,"line_start":445,"line_end":445,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(t1.next(), Some(1));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":14004,"byte_end":14039,"line_start":446,"line_end":446,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(t2.next(), Some(0));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":14044,"byte_end":14079,"line_start":447,"line_end":447,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(t1.next(), Some(2));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":14084,"byte_end":14119,"line_start":448,"line_end":448,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(t1.next(), Some(3));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":14124,"byte_end":14159,"line_start":449,"line_end":449,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(t1.next(), None);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":14164,"byte_end":14196,"line_start":450,"line_end":450,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(t2.next(), Some(1));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":14201,"byte_end":14236,"line_start":451,"line_end":451,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":14241,"byte_end":14248,"line_start":452,"line_end":452,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1425},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":14799,"byte_end":14804,"line_start":474,"line_end":474,"column_start":8,"column_end":13},"name":"slice","qualname":"::Itertools::slice","value":"pub fn slice<R>(Self, R) -> ISlice<Self> where R: misc::GenericRange,\nSelf: Sized","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Return a sliced iterator.","sig":null,"attributes":[{"value":"/ Return a sliced iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":14391,"byte_end":14420,"line_start":460,"line_end":460,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":14425,"byte_end":14428,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ **Note:** slicing an iterator is not constant time, and much less efficient than","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":14433,"byte_end":14517,"line_start":462,"line_end":462,"column_start":5,"column_end":89}},{"value":"/ slicing for example a vector.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":14522,"byte_end":14555,"line_start":463,"line_end":463,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":14560,"byte_end":14563,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":14568,"byte_end":14610,"line_start":465,"line_end":465,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":14615,"byte_end":14618,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":14623,"byte_end":14630,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"/ use std::iter::repeat;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":14635,"byte_end":14661,"line_start":468,"line_end":468,"column_start":5,"column_end":31}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":14666,"byte_end":14695,"line_start":469,"line_end":469,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":14700,"byte_end":14703,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ let it = repeat('a').slice(..3);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":14708,"byte_end":14744,"line_start":471,"line_end":471,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(it.count(), 3);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":14749,"byte_end":14779,"line_start":472,"line_end":472,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":14784,"byte_end":14791,"line_start":473,"line_end":473,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":16320,"byte_end":16327,"line_start":512,"line_end":512,"column_start":8,"column_end":15},"name":"into_rc","qualname":"::Itertools::into_rc","value":"pub fn into_rc(Self) -> RcIter<Self> where Self: Sized","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" **Deprecated:** use `itertools::free::rciter` instead.\n (It's an iterator constructor, not an adaptor).","sig":null,"attributes":[{"value":"/ **Deprecated:** use `itertools::free::rciter` instead.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":14953,"byte_end":15011,"line_start":481,"line_end":481,"column_start":5,"column_end":63}},{"value":"/ (It's an iterator constructor, not an adaptor).","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":15016,"byte_end":15067,"line_start":482,"line_end":482,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":15072,"byte_end":15075,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ Return an iterator inside a `Rc<RefCell<_>>` wrapper.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":15080,"byte_end":15137,"line_start":484,"line_end":484,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":15142,"byte_end":15145,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ The returned `RcIter` can be cloned, and each clone will refer back to the","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":15150,"byte_end":15228,"line_start":486,"line_end":486,"column_start":5,"column_end":83}},{"value":"/ same original iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":15233,"byte_end":15260,"line_start":487,"line_end":487,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":15265,"byte_end":15268,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ `RcIter` allows doing interesting things like using `.zip()` on an iterator with","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":15273,"byte_end":15357,"line_start":489,"line_end":489,"column_start":5,"column_end":89}},{"value":"/ itself, at the cost of runtime borrow checking.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":15362,"byte_end":15413,"line_start":490,"line_end":490,"column_start":5,"column_end":56}},{"value":"/ (If it is not obvious: this has a performance penalty.)","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":15418,"byte_end":15477,"line_start":491,"line_end":491,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":15482,"byte_end":15485,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":15490,"byte_end":15532,"line_start":493,"line_end":493,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":15537,"byte_end":15540,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":15545,"byte_end":15552,"line_start":495,"line_end":495,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":15557,"byte_end":15586,"line_start":496,"line_end":496,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":15591,"byte_end":15594,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ let mut rit = (0..9).into_rc();","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":15599,"byte_end":15634,"line_start":498,"line_end":498,"column_start":5,"column_end":40}},{"value":"/ let mut z = rit.clone().zip(rit.clone());","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":15639,"byte_end":15684,"line_start":499,"line_end":499,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(z.next(), Some((0, 1)));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":15689,"byte_end":15728,"line_start":500,"line_end":500,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(z.next(), Some((2, 3)));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":15733,"byte_end":15772,"line_start":501,"line_end":501,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(z.next(), Some((4, 5)));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":15777,"byte_end":15816,"line_start":502,"line_end":502,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(rit.next(), Some(6));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":15821,"byte_end":15857,"line_start":503,"line_end":503,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(z.next(), Some((7, 8)));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":15862,"byte_end":15901,"line_start":504,"line_end":504,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(z.next(), None);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":15906,"byte_end":15937,"line_start":505,"line_end":505,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":15942,"byte_end":15949,"line_start":506,"line_end":506,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":15954,"byte_end":15957,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ **Panics** in iterator methods if a borrow error is encountered,","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":15962,"byte_end":16030,"line_start":508,"line_end":508,"column_start":5,"column_end":73}},{"value":"/ but it can only happen if the `RcIter` is reentered in for example `.next()`,","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":16035,"byte_end":16116,"line_start":509,"line_end":509,"column_start":5,"column_end":86}},{"value":"/ i.e. if it somehow participates in an “iterator knot” where it is an adaptor of itself.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":16121,"byte_end":16216,"line_start":510,"line_end":510,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":1428},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":16925,"byte_end":16929,"line_start":534,"line_end":534,"column_start":8,"column_end":12},"name":"step","qualname":"::Itertools::step","value":"pub fn step(Self, usize) -> Step<Self> where Self: Sized","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that steps `n` elements in the base iterator\n for each iteration.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that steps `n` elements in the base iterator","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":16419,"byte_end":16494,"line_start":518,"line_end":518,"column_start":5,"column_end":80}},{"value":"/ for each iteration.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":16499,"byte_end":16522,"line_start":519,"line_end":519,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":16527,"byte_end":16530,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ The iterator steps by yielding the next element from the base iterator,","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":16535,"byte_end":16610,"line_start":521,"line_end":521,"column_start":5,"column_end":80}},{"value":"/ then skipping forward `n - 1` elements.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":16615,"byte_end":16658,"line_start":522,"line_end":522,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":16663,"byte_end":16666,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":16671,"byte_end":16713,"line_start":524,"line_end":524,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":16718,"byte_end":16721,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the step is 0.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":16726,"byte_end":16758,"line_start":526,"line_end":526,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":16763,"byte_end":16766,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":16771,"byte_end":16778,"line_start":528,"line_end":528,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":16783,"byte_end":16812,"line_start":529,"line_end":529,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":16817,"byte_end":16820,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ let it = (0..8).step(3);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":16825,"byte_end":16853,"line_start":531,"line_end":531,"column_start":5,"column_end":33}},{"value":"/ itertools::assert_equal(it, vec![0, 3, 6]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":16858,"byte_end":16905,"line_start":532,"line_end":532,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":16910,"byte_end":16917,"line_start":533,"line_end":533,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1429},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":17489,"byte_end":17494,"line_start":553,"line_end":553,"column_start":8,"column_end":13},"name":"merge","qualname":"::Itertools::merge","value":"pub fn merge<J>(Self, J) -> Merge<Self, J::IntoIter> where Self: Sized,\nSelf::Item: PartialOrd, J: IntoIterator<Item = Self::Item>","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that merges the two base iterators in ascending order.\n If both base iterators are sorted (ascending), the result is sorted.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that merges the two base iterators in ascending order.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":17030,"byte_end":17115,"line_start":540,"line_end":540,"column_start":5,"column_end":90}},{"value":"/ If both base iterators are sorted (ascending), the result is sorted.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":17120,"byte_end":17192,"line_start":541,"line_end":541,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":17197,"byte_end":17200,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":17205,"byte_end":17247,"line_start":543,"line_end":543,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":17252,"byte_end":17255,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":17260,"byte_end":17267,"line_start":545,"line_end":545,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":17272,"byte_end":17301,"line_start":546,"line_end":546,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":17306,"byte_end":17309,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ let a = (0..11).step(3);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":17314,"byte_end":17342,"line_start":548,"line_end":548,"column_start":5,"column_end":33}},{"value":"/ let b = (0..11).step(5);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":17347,"byte_end":17375,"line_start":549,"line_end":549,"column_start":5,"column_end":33}},{"value":"/ let it = a.merge(b);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":17380,"byte_end":17404,"line_start":550,"line_end":550,"column_start":5,"column_end":29}},{"value":"/ itertools::assert_equal(it, vec![0, 0, 3, 5, 6, 9, 10]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":17409,"byte_end":17469,"line_start":551,"line_end":551,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":17474,"byte_end":17481,"line_start":552,"line_end":552,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1431},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":18297,"byte_end":18305,"line_start":577,"line_end":577,"column_start":8,"column_end":16},"name":"merge_by","qualname":"::Itertools::merge_by","value":"pub fn merge_by<J, F>(Self, J, F) -> MergeBy<Self, J::IntoIter, F> where\nSelf: Sized, J: IntoIterator<Item = Self::Item>,\nF: FnMut(&Self::Item, &Self::Item) -> bool","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that merges the two base iterators in order.\n This is much like `.merge()` but allows for a custom ordering.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that merges the two base iterators in order.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":17726,"byte_end":17801,"line_start":561,"line_end":561,"column_start":5,"column_end":80}},{"value":"/ This is much like `.merge()` but allows for a custom ordering.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":17806,"byte_end":17872,"line_start":562,"line_end":562,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":17877,"byte_end":17880,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ This can be especially useful for sequences of tuples.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":17885,"byte_end":17943,"line_start":564,"line_end":564,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":17948,"byte_end":17951,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":17956,"byte_end":17998,"line_start":566,"line_end":566,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":18003,"byte_end":18006,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":18011,"byte_end":18018,"line_start":568,"line_end":568,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":18023,"byte_end":18052,"line_start":569,"line_end":569,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":18057,"byte_end":18060,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ let a = (0..).zip(\"bc\".chars());","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":18065,"byte_end":18101,"line_start":571,"line_end":571,"column_start":5,"column_end":41}},{"value":"/ let b = (0..).zip(\"ad\".chars());","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":18106,"byte_end":18142,"line_start":572,"line_end":572,"column_start":5,"column_end":41}},{"value":"/ let it = a.merge_by(b, |x, y| x.1 <= y.1);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":18147,"byte_end":18193,"line_start":573,"line_end":573,"column_start":5,"column_end":51}},{"value":"/ itertools::assert_equal(it, vec![(0, 'a'), (0, 'b'), (1, 'c'), (1, 'd')]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":18198,"byte_end":18276,"line_start":574,"line_end":574,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":18281,"byte_end":18288,"line_start":575,"line_end":575,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1434},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":19135,"byte_end":19141,"line_start":601,"line_end":601,"column_start":8,"column_end":14},"name":"kmerge","qualname":"::Itertools::kmerge","value":"pub fn kmerge(Self)\n-> KMerge<<<Self as Iterator>::Item as IntoIterator>::IntoIter> where\nSelf: Sized, Self::Item: IntoIterator,\n<<Self as Iterator>::Item as IntoIterator>::Item: Ord","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that flattens an iterator of iterators by\n merging them in ascending order.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that flattens an iterator of iterators by","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":18591,"byte_end":18663,"line_start":585,"line_end":585,"column_start":5,"column_end":77}},{"value":"/ merging them in ascending order.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":18668,"byte_end":18704,"line_start":586,"line_end":586,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":18709,"byte_end":18712,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ If all base iterators are sorted (ascending), the result is sorted.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":18717,"byte_end":18788,"line_start":588,"line_end":588,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":18793,"byte_end":18796,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":18801,"byte_end":18843,"line_start":590,"line_end":590,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":18848,"byte_end":18851,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":18856,"byte_end":18863,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":18868,"byte_end":18897,"line_start":593,"line_end":593,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":18902,"byte_end":18905,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ let a = (0..6).step(3);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":18910,"byte_end":18937,"line_start":595,"line_end":595,"column_start":5,"column_end":32}},{"value":"/ let b = (1..6).step(3);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":18942,"byte_end":18969,"line_start":596,"line_end":596,"column_start":5,"column_end":32}},{"value":"/ let c = (2..6).step(3);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":18974,"byte_end":19001,"line_start":597,"line_end":597,"column_start":5,"column_end":32}},{"value":"/ let it = vec![a, b, c].into_iter().kmerge();","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":19006,"byte_end":19054,"line_start":598,"line_end":598,"column_start":5,"column_end":53}},{"value":"/ itertools::assert_equal(it, vec![0, 1, 2, 3, 4, 5]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":19059,"byte_end":19115,"line_start":599,"line_end":599,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":19120,"byte_end":19127,"line_start":600,"line_end":600,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1435},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":19812,"byte_end":19829,"line_start":620,"line_end":620,"column_start":8,"column_end":25},"name":"cartesian_product","qualname":"::Itertools::cartesian_product","value":"pub fn cartesian_product<J>(Self, J) -> Product<Self, J::IntoIter> where\nSelf: Sized, Self::Item: Clone, J: IntoIterator, J::IntoIter: Clone","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that iterates over the cartesian product of\n the element sets of two iterators `self` and `J`.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that iterates over the cartesian product of","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":19386,"byte_end":19460,"line_start":609,"line_end":609,"column_start":5,"column_end":79}},{"value":"/ the element sets of two iterators `self` and `J`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":19465,"byte_end":19518,"line_start":610,"line_end":610,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":19523,"byte_end":19526,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `(Self::Item, J::Item)`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":19531,"byte_end":19584,"line_start":612,"line_end":612,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":19589,"byte_end":19592,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":19597,"byte_end":19604,"line_start":614,"line_end":614,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":19609,"byte_end":19638,"line_start":615,"line_end":615,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":19643,"byte_end":19646,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ let it = (0..2).cartesian_product(\"αβ\".chars());","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":19651,"byte_end":19705,"line_start":617,"line_end":617,"column_start":5,"column_end":57}},{"value":"/ itertools::assert_equal(it, vec![(0, 'α'), (0, 'β'), (1, 'α'), (1, 'β')]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":19710,"byte_end":19792,"line_start":618,"line_end":618,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":19797,"byte_end":19804,"line_start":619,"line_end":619,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1437},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":21294,"byte_end":21303,"line_start":665,"line_end":665,"column_start":8,"column_end":17},"name":"multipeek","qualname":"::Itertools::multipeek","value":"pub fn multipeek(Self) -> MultiPeek<Self> where Self: Sized","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Return an iterator adapter that allows peeking multiple values.","sig":null,"attributes":[{"value":"/ Return an iterator adapter that allows peeking multiple values.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":20745,"byte_end":20812,"line_start":650,"line_end":650,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":20817,"byte_end":20820,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ After a call to `.next()` the peeking cursor is reset.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":20825,"byte_end":20883,"line_start":652,"line_end":652,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":20888,"byte_end":20891,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":20896,"byte_end":20903,"line_start":654,"line_end":654,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":20908,"byte_end":20937,"line_start":655,"line_end":655,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":20942,"byte_end":20945,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ let nums = vec![1u8,2,3,4,5];","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":20950,"byte_end":20983,"line_start":657,"line_end":657,"column_start":5,"column_end":38}},{"value":"/ let mut peekable = nums.into_iter().multipeek();","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":20988,"byte_end":21040,"line_start":658,"line_end":658,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(peekable.peek(), Some(&1));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":21045,"byte_end":21087,"line_start":659,"line_end":659,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(peekable.peek(), Some(&2));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":21092,"byte_end":21134,"line_start":660,"line_end":660,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(peekable.peek(), Some(&3));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":21139,"byte_end":21181,"line_start":661,"line_end":661,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(peekable.next(), Some(1));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":21186,"byte_end":21227,"line_start":662,"line_end":662,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(peekable.peek(), Some(&2));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":21232,"byte_end":21274,"line_start":663,"line_end":663,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":21279,"byte_end":21286,"line_start":664,"line_end":664,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1438},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":22434,"byte_end":22442,"line_start":697,"line_end":697,"column_start":8,"column_end":16},"name":"coalesce","qualname":"::Itertools::coalesce","value":"pub fn coalesce<F>(Self, F) -> Coalesce<Self, F> where Self: Sized,\nF: FnMut(Self::Item, Self::Item) ->\nResult<Self::Item, (Self::Item, Self::Item)>","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that uses the passed-in closure to\n optionally merge together consecutive elements.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that uses the passed-in closure to","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":21401,"byte_end":21466,"line_start":671,"line_end":671,"column_start":5,"column_end":70}},{"value":"/ optionally merge together consecutive elements.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":21471,"byte_end":21522,"line_start":672,"line_end":672,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":21527,"byte_end":21530,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is passed two elements, `x`, `y` and may return either","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":21535,"byte_end":21609,"line_start":674,"line_end":674,"column_start":5,"column_end":79}},{"value":"/ (1) `Ok(z)` to merge the two values or (2) `Err((x', y'))` to indicate","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":21614,"byte_end":21688,"line_start":675,"line_end":675,"column_start":5,"column_end":79}},{"value":"/ they can't be merged. In (2), the value `x'` is emitted by the iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":21693,"byte_end":21769,"line_start":676,"line_end":676,"column_start":5,"column_end":81}},{"value":"/ Coalesce continues with either `z` (1) or `y'` (2), and the next iterator","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":21774,"byte_end":21851,"line_start":677,"line_end":677,"column_start":5,"column_end":82}},{"value":"/ element as the next pair of elements to merge.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":21856,"byte_end":21906,"line_start":678,"line_end":678,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":21911,"byte_end":21914,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":21919,"byte_end":21961,"line_start":680,"line_end":680,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":21966,"byte_end":21969,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":21974,"byte_end":22003,"line_start":682,"line_end":682,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":22008,"byte_end":22011,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":22016,"byte_end":22023,"line_start":684,"line_end":684,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":22028,"byte_end":22057,"line_start":685,"line_end":685,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":22062,"byte_end":22065,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ // sum same-sign runs together","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":22070,"byte_end":22104,"line_start":687,"line_end":687,"column_start":5,"column_end":39}},{"value":"/ let data = vec![-1., -2., -3., 3., 1., 0., -1.];","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":22109,"byte_end":22161,"line_start":688,"line_end":688,"column_start":5,"column_end":57}},{"value":"/ itertools::assert_equal(data.into_iter().coalesce(|x, y|","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":22166,"byte_end":22226,"line_start":689,"line_end":689,"column_start":5,"column_end":65}},{"value":"/         if (x >= 0.) == (y >= 0.) {","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":22231,"byte_end":22270,"line_start":690,"line_end":690,"column_start":5,"column_end":44}},{"value":"/             Ok(x + y)","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":22275,"byte_end":22300,"line_start":691,"line_end":691,"column_start":5,"column_end":30}},{"value":"/         } else {","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":22305,"byte_end":22325,"line_start":692,"line_end":692,"column_start":5,"column_end":25}},{"value":"/             Err((x, y))","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":22330,"byte_end":22357,"line_start":693,"line_end":693,"column_start":5,"column_end":32}},{"value":"/         }),","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":22362,"byte_end":22377,"line_start":694,"line_end":694,"column_start":5,"column_end":20}},{"value":"/         vec![-6., 4., -1.]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":22382,"byte_end":22414,"line_start":695,"line_end":695,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":22419,"byte_end":22426,"line_start":696,"line_end":696,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1440},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":23151,"byte_end":23156,"line_start":719,"line_end":719,"column_start":8,"column_end":13},"name":"dedup","qualname":"::Itertools::dedup","value":"pub fn dedup(Self) -> Dedup<Self> where Self: Sized, Self::Item: PartialEq","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Remove duplicates from sections of consecutive identical elements.\n If the iterator is sorted, all elements will be unique.","sig":null,"attributes":[{"value":"/ Remove duplicates from sections of consecutive identical elements.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":22672,"byte_end":22742,"line_start":705,"line_end":705,"column_start":5,"column_end":75}},{"value":"/ If the iterator is sorted, all elements will be unique.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":22747,"byte_end":22806,"line_start":706,"line_end":706,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":22811,"byte_end":22814,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":22819,"byte_end":22861,"line_start":708,"line_end":708,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":22866,"byte_end":22869,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":22874,"byte_end":22903,"line_start":710,"line_end":710,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":22908,"byte_end":22911,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":22916,"byte_end":22923,"line_start":712,"line_end":712,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":22928,"byte_end":22957,"line_start":713,"line_end":713,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":22962,"byte_end":22965,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ let data = vec![1., 1., 2., 3., 3., 2., 2.];","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":22970,"byte_end":23018,"line_start":715,"line_end":715,"column_start":5,"column_end":53}},{"value":"/ itertools::assert_equal(data.into_iter().dedup(),","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":23023,"byte_end":23076,"line_start":716,"line_end":716,"column_start":5,"column_end":58}},{"value":"/                         vec![1., 2., 3., 2.]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":23081,"byte_end":23131,"line_start":717,"line_end":717,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":23136,"byte_end":23143,"line_start":718,"line_end":718,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1441},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":23810,"byte_end":23816,"line_start":740,"line_end":740,"column_start":8,"column_end":14},"name":"unique","qualname":"::Itertools::unique","value":"pub fn unique(Self) -> Unique<Self> where Self: Sized, Self::Item: Clone +\nEq + Hash","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that filters out elements that have\n already been produced once during the iteration. Duplicates\n are detected using hash and equality.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that filters out elements that have","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":23284,"byte_end":23350,"line_start":726,"line_end":726,"column_start":5,"column_end":71}},{"value":"/ already been produced once during the iteration. Duplicates","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":23355,"byte_end":23418,"line_start":727,"line_end":727,"column_start":5,"column_end":68}},{"value":"/ are detected using hash and equality.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":23423,"byte_end":23464,"line_start":728,"line_end":728,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":23469,"byte_end":23472,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ Clones of visited elements are stored in a hash set in the","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":23477,"byte_end":23539,"line_start":730,"line_end":730,"column_start":5,"column_end":67}},{"value":"/ iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":23544,"byte_end":23557,"line_start":731,"line_end":731,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":23562,"byte_end":23565,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":23570,"byte_end":23577,"line_start":733,"line_end":733,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":23582,"byte_end":23611,"line_start":734,"line_end":734,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":23616,"byte_end":23619,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ let data = vec![10, 20, 30, 20, 40, 10, 50];","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":23624,"byte_end":23672,"line_start":736,"line_end":736,"column_start":5,"column_end":53}},{"value":"/ itertools::assert_equal(data.into_iter().unique(),","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":23677,"byte_end":23731,"line_start":737,"line_end":737,"column_start":5,"column_end":59}},{"value":"/                         vec![10, 20, 30, 40, 50]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":23736,"byte_end":23790,"line_start":738,"line_end":738,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":23795,"byte_end":23802,"line_start":739,"line_end":739,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1442},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":24538,"byte_end":24547,"line_start":761,"line_end":761,"column_start":8,"column_end":17},"name":"unique_by","qualname":"::Itertools::unique_by","value":"pub fn unique_by<V, F>(Self, F) -> UniqueBy<Self, V, F> where Self: Sized,\nV: Eq + Hash, F: FnMut(&Self::Item) -> V","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that filters out elements that have\n already been produced once during the iteration.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that filters out elements that have","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":23958,"byte_end":24024,"line_start":747,"line_end":747,"column_start":5,"column_end":71}},{"value":"/ already been produced once during the iteration.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":24029,"byte_end":24081,"line_start":748,"line_end":748,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":24086,"byte_end":24089,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ Duplicates are detected by comparing the key they map to","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":24094,"byte_end":24154,"line_start":750,"line_end":750,"column_start":5,"column_end":65}},{"value":"/ with the keying function `f` by hash and equality.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":24159,"byte_end":24213,"line_start":751,"line_end":751,"column_start":5,"column_end":59}},{"value":"/ The keys are stored in a hash set in the iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":24218,"byte_end":24272,"line_start":752,"line_end":752,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":24277,"byte_end":24280,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":24285,"byte_end":24292,"line_start":754,"line_end":754,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":24297,"byte_end":24326,"line_start":755,"line_end":755,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":24331,"byte_end":24334,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ let data = vec![\"a\", \"bb\", \"aa\", \"c\", \"ccc\"];","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":24339,"byte_end":24388,"line_start":757,"line_end":757,"column_start":5,"column_end":54}},{"value":"/ itertools::assert_equal(data.into_iter().unique_by(|s| s.len()),","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":24393,"byte_end":24461,"line_start":758,"line_end":758,"column_start":5,"column_end":73}},{"value":"/                         vec![\"a\", \"bb\", \"ccc\"]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":24466,"byte_end":24518,"line_start":759,"line_end":759,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":24523,"byte_end":24530,"line_start":760,"line_end":760,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1445},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":25608,"byte_end":25619,"line_start":787,"line_end":787,"column_start":8,"column_end":19},"name":"mend_slices","qualname":"::Itertools::mend_slices","value":"pub fn mend_slices(Self) -> MendSlices<Self> where Self: Sized,\nSelf::Item: misc::MendSlice","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that joins together adjacent slices if possible.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that joins together adjacent slices if possible.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":24734,"byte_end":24813,"line_start":769,"line_end":769,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":24818,"byte_end":24821,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ Only implemented for iterators with slice or string slice elements.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":24826,"byte_end":24897,"line_start":771,"line_end":771,"column_start":5,"column_end":76}},{"value":"/ Only slices that are contiguous together can be joined.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":24902,"byte_end":24961,"line_start":772,"line_end":772,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":24966,"byte_end":24969,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":24974,"byte_end":24981,"line_start":774,"line_end":774,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":24986,"byte_end":25015,"line_start":775,"line_end":775,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":25020,"byte_end":25023,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ // Split a string into a slice per letter, filter out whitespace,","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":25028,"byte_end":25097,"line_start":777,"line_end":777,"column_start":5,"column_end":74}},{"value":"/ // and join into words again by mending adjacent slices.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":25102,"byte_end":25162,"line_start":778,"line_end":778,"column_start":5,"column_end":65}},{"value":"/ let text = String::from(\"Warning:  γ-radiation (ionizing)\");","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":25167,"byte_end":25232,"line_start":779,"line_end":779,"column_start":5,"column_end":69}},{"value":"/ let char_slices = text.char_indices()","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":25237,"byte_end":25278,"line_start":780,"line_end":780,"column_start":5,"column_end":46}},{"value":"/                       .map(|(index, ch)| &text[index..index + ch.len_utf8()]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":25283,"byte_end":25365,"line_start":781,"line_end":781,"column_start":5,"column_end":87}},{"value":"/ let words = char_slices.filter(|s| !s.chars().any(char::is_whitespace))","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":25370,"byte_end":25445,"line_start":782,"line_end":782,"column_start":5,"column_end":80}},{"value":"/                        .mend_slices();","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":25450,"byte_end":25492,"line_start":783,"line_end":783,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":25497,"byte_end":25500,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal(words, vec![\"Warning:\", \"γ-radiation\", \"(ionizing)\"]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":25505,"byte_end":25588,"line_start":785,"line_end":785,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":25593,"byte_end":25600,"line_start":786,"line_end":786,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1446},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":26458,"byte_end":26472,"line_start":811,"line_end":811,"column_start":8,"column_end":22},"name":"take_while_ref","qualname":"::Itertools::take_while_ref","value":"pub fn take_while_ref<'a, F>(&'a mut Self, F) -> TakeWhileRef where\nSelf: Clone, F: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that borrows from a `Clone`-able iterator\n to only pick off elements while the predicate `f` returns `true`.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that borrows from a `Clone`-able iterator","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":25762,"byte_end":25834,"line_start":794,"line_end":794,"column_start":5,"column_end":77}},{"value":"/ to only pick off elements while the predicate `f` returns `true`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":25839,"byte_end":25908,"line_start":795,"line_end":795,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":25913,"byte_end":25916,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ It uses the `Clone` trait to restore the original iterator so that the last","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":25921,"byte_end":26000,"line_start":797,"line_end":797,"column_start":5,"column_end":84}},{"value":"/ and rejected element is still available when `TakeWhileRef` is done.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":26005,"byte_end":26077,"line_start":798,"line_end":798,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":26082,"byte_end":26085,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":26090,"byte_end":26097,"line_start":800,"line_end":800,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":26102,"byte_end":26131,"line_start":801,"line_end":801,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":26136,"byte_end":26139,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ let mut hexadecimals = \"0123456789abcdef\".chars();","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":26144,"byte_end":26198,"line_start":803,"line_end":803,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":26203,"byte_end":26206,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ let decimals = hexadecimals.take_while_ref(|c| c.is_numeric())","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":26211,"byte_end":26277,"line_start":805,"line_end":805,"column_start":5,"column_end":71}},{"value":"/                            .collect::<String>();","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":26282,"byte_end":26334,"line_start":806,"line_end":806,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(decimals, \"0123456789\");","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":26339,"byte_end":26378,"line_start":807,"line_end":807,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(hexadecimals.next(), Some('a'));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":26383,"byte_end":26430,"line_start":808,"line_end":808,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":26435,"byte_end":26438,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":26443,"byte_end":26450,"line_start":810,"line_end":810,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1449},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":27132,"byte_end":27142,"line_start":832,"line_end":832,"column_start":8,"column_end":18},"name":"while_some","qualname":"::Itertools::while_some","value":"pub fn while_some<A>(Self) -> WhileSome<Self> where Self: Sized +\nIterator<Item = Option<A>>","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that filters `Option<A>` iterator elements\n and produces `A`. Stops on the first `None` encountered.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that filters `Option<A>` iterator elements","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":26652,"byte_end":26725,"line_start":818,"line_end":818,"column_start":5,"column_end":78}},{"value":"/ and produces `A`. Stops on the first `None` encountered.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":26730,"byte_end":26790,"line_start":819,"line_end":819,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":26795,"byte_end":26798,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `A`, the unwrapped element.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":26803,"byte_end":26859,"line_start":821,"line_end":821,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":26864,"byte_end":26867,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":26872,"byte_end":26879,"line_start":823,"line_end":823,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":26884,"byte_end":26913,"line_start":824,"line_end":824,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":26918,"byte_end":26921,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ // List all hexadecimal digits","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":26926,"byte_end":26960,"line_start":826,"line_end":826,"column_start":5,"column_end":39}},{"value":"/ itertools::assert_equal(","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":26965,"byte_end":26993,"line_start":827,"line_end":827,"column_start":5,"column_end":33}},{"value":"/     (0..).map(|i| std::char::from_digit(i, 16)).while_some(),","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":26998,"byte_end":27063,"line_start":828,"line_end":828,"column_start":5,"column_end":70}},{"value":"/     \"0123456789abcdef\".chars());","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":27068,"byte_end":27104,"line_start":829,"line_end":829,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":27109,"byte_end":27112,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":27117,"byte_end":27124,"line_start":831,"line_end":831,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1451},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":27662,"byte_end":27674,"line_start":849,"line_end":849,"column_start":8,"column_end":20},"name":"combinations","qualname":"::Itertools::combinations","value":"pub fn combinations(Self) -> Combinations<Self> where Self: Sized + Clone,\nSelf::Item: Clone","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that iterates over the combinations of\n the elements from an iterator.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that iterates over the combinations of","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":27272,"byte_end":27341,"line_start":838,"line_end":838,"column_start":5,"column_end":74}},{"value":"/ the elements from an iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":27346,"byte_end":27380,"line_start":839,"line_end":839,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":27385,"byte_end":27388,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `(Self::Item, Self::Item)`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":27393,"byte_end":27449,"line_start":841,"line_end":841,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":27454,"byte_end":27457,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":27462,"byte_end":27469,"line_start":843,"line_end":843,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":27474,"byte_end":27503,"line_start":844,"line_end":844,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":27508,"byte_end":27511,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ let it = (1..5).combinations();","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":27516,"byte_end":27551,"line_start":846,"line_end":846,"column_start":5,"column_end":40}},{"value":"/ itertools::assert_equal(it, vec![(1, 2), (1, 3), (1, 4), (2, 3), (2, 4), (3, 4)]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":27556,"byte_end":27642,"line_start":847,"line_end":847,"column_start":5,"column_end":91}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":27647,"byte_end":27654,"line_start":848,"line_end":848,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1452},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":28378,"byte_end":28392,"line_start":873,"line_end":873,"column_start":8,"column_end":22},"name":"combinations_n","qualname":"::Itertools::combinations_n","value":"pub fn combinations_n(Self, usize) -> CombinationsN<Self> where Self: Sized,\nSelf::Item: Clone","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that iterates over the `n`-length combinations of\n the elements from an iterator.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that iterates over the `n`-length combinations of","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":27819,"byte_end":27899,"line_start":856,"line_end":856,"column_start":5,"column_end":85}},{"value":"/ the elements from an iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":27904,"byte_end":27938,"line_start":857,"line_end":857,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":27943,"byte_end":27946,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Vec<Self::Item>`. The iterator produces a new Vec per iteration,","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":27951,"byte_end":28045,"line_start":859,"line_end":859,"column_start":5,"column_end":99}},{"value":"/ and clones the iterator elements.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":28050,"byte_end":28087,"line_start":860,"line_end":860,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":28092,"byte_end":28095,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":28100,"byte_end":28107,"line_start":862,"line_end":862,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":28112,"byte_end":28141,"line_start":863,"line_end":863,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":28146,"byte_end":28149,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ let it = (1..5).combinations_n(3);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":28154,"byte_end":28192,"line_start":865,"line_end":865,"column_start":5,"column_end":43}},{"value":"/ itertools::assert_equal(it, vec![","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":28197,"byte_end":28234,"line_start":866,"line_end":866,"column_start":5,"column_end":42}},{"value":"/     vec![1, 2, 3],","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":28239,"byte_end":28261,"line_start":867,"line_end":867,"column_start":5,"column_end":27}},{"value":"/     vec![1, 2, 4],","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":28266,"byte_end":28288,"line_start":868,"line_end":868,"column_start":5,"column_end":27}},{"value":"/     vec![1, 3, 4],","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":28293,"byte_end":28315,"line_start":869,"line_end":869,"column_start":5,"column_end":27}},{"value":"/     vec![2, 3, 4],","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":28320,"byte_end":28342,"line_start":870,"line_end":870,"column_start":5,"column_end":27}},{"value":"/     ]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":28347,"byte_end":28358,"line_start":871,"line_end":871,"column_start":5,"column_end":16}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":28363,"byte_end":28370,"line_start":872,"line_end":872,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1453},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":29215,"byte_end":29224,"line_start":897,"line_end":897,"column_start":8,"column_end":17},"name":"pad_using","qualname":"::Itertools::pad_using","value":"pub fn pad_using<F>(Self, usize, F) -> PadUsing<Self, F> where Self: Sized,\nF: FnMut(usize) -> Self::Item","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that pads the sequence to a minimum length of\n `min` by filling missing elements using a closure `f`.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that pads the sequence to a minimum length of","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":28544,"byte_end":28620,"line_start":880,"line_end":880,"column_start":5,"column_end":81}},{"value":"/ `min` by filling missing elements using a closure `f`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":28625,"byte_end":28683,"line_start":881,"line_end":881,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":28688,"byte_end":28691,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":28696,"byte_end":28738,"line_start":883,"line_end":883,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":28743,"byte_end":28746,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":28751,"byte_end":28758,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":28763,"byte_end":28792,"line_start":886,"line_end":886,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":28797,"byte_end":28800,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ let it = (0..5).pad_using(10, |i| 2*i);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":28805,"byte_end":28848,"line_start":888,"line_end":888,"column_start":5,"column_end":48}},{"value":"/ itertools::assert_equal(it, vec![0, 1, 2, 3, 4, 10, 12, 14, 16, 18]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":28853,"byte_end":28926,"line_start":889,"line_end":889,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":28931,"byte_end":28934,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ let it = (0..10).pad_using(5, |i| 2*i);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":28939,"byte_end":28982,"line_start":891,"line_end":891,"column_start":5,"column_end":48}},{"value":"/ itertools::assert_equal(it, vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":28987,"byte_end":29055,"line_start":892,"line_end":892,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":29060,"byte_end":29063,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ let it = (0..5).pad_using(10, |i| 2*i).rev();","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":29068,"byte_end":29117,"line_start":894,"line_end":894,"column_start":5,"column_end":54}},{"value":"/ itertools::assert_equal(it, vec![18, 16, 14, 12, 10, 4, 3, 2, 1, 0]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":29122,"byte_end":29195,"line_start":895,"line_end":895,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":29200,"byte_end":29207,"line_start":896,"line_end":896,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1455},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":29753,"byte_end":29760,"line_start":916,"line_end":916,"column_start":8,"column_end":15},"name":"flatten","qualname":"::Itertools::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self: Sized,\nSelf::Item: IntoIterator","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Unravel a nested iterator.","sig":null,"attributes":[{"value":"/ Unravel a nested iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":29397,"byte_end":29427,"line_start":904,"line_end":904,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":29432,"byte_end":29435,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ This is a shortcut for `it.flat_map(|x| x)`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":29440,"byte_end":29488,"line_start":906,"line_end":906,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":29493,"byte_end":29496,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":29501,"byte_end":29508,"line_start":908,"line_end":908,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":29513,"byte_end":29542,"line_start":909,"line_end":909,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":29547,"byte_end":29550,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ let data = vec![vec![1, 2, 3], vec![4, 5, 6]];","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":29555,"byte_end":29605,"line_start":911,"line_end":911,"column_start":5,"column_end":55}},{"value":"/ let flattened = data.into_iter().flatten();","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":29610,"byte_end":29657,"line_start":912,"line_end":912,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":29662,"byte_end":29665,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal(flattened, vec![1, 2, 3, 4, 5, 6]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":29670,"byte_end":29733,"line_start":914,"line_end":914,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":29738,"byte_end":29745,"line_start":915,"line_end":915,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1456},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":30648,"byte_end":30654,"line_start":942,"line_end":942,"column_start":8,"column_end":14},"name":"map_fn","qualname":"::Itertools::map_fn","value":"pub fn map_fn<B>(Self, fn(: Self::Item) -> B) -> MapFn<Self, B> where\nSelf: Sized","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" **Deprecated:** Will be removed in the next version","sig":null,"attributes":[{"value":"/ **Deprecated:** Will be removed in the next version","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":29894,"byte_end":29949,"line_start":923,"line_end":923,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":29954,"byte_end":29957,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/ Like regular `.map()`, specialized to using a simple function pointer instead,","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":29962,"byte_end":30044,"line_start":925,"line_end":925,"column_start":5,"column_end":87}},{"value":"/ so that the resulting `Map` iterator value can be cloned.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":30049,"byte_end":30110,"line_start":926,"line_end":926,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":30115,"byte_end":30118,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `B`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":30123,"byte_end":30156,"line_start":928,"line_end":928,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":30161,"byte_end":30164,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":30169,"byte_end":30176,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":30181,"byte_end":30210,"line_start":931,"line_end":931,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":30215,"byte_end":30218,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ let data = vec![Ok(1), Ok(0), Err(\"No result\")];","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":30223,"byte_end":30275,"line_start":933,"line_end":933,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":30280,"byte_end":30283,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ let iter = data.iter().cloned().map_fn(Result::ok);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":30288,"byte_end":30343,"line_start":935,"line_end":935,"column_start":5,"column_end":60}},{"value":"/ let iter_copy = iter.clone();","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":30348,"byte_end":30381,"line_start":936,"line_end":936,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":30386,"byte_end":30389,"line_start":937,"line_end":937,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal(iter, vec![Some(1), Some(0), None]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":30394,"byte_end":30458,"line_start":938,"line_end":938,"column_start":5,"column_end":69}},{"value":"/ itertools::assert_equal(iter_copy, vec![Some(1), Some(0), None]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":30463,"byte_end":30532,"line_start":939,"line_end":939,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":30537,"byte_end":30544,"line_start":940,"line_end":940,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1458},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":31145,"byte_end":31158,"line_start":960,"line_end":960,"column_start":8,"column_end":21},"name":"find_position","qualname":"::Itertools::find_position","value":"pub fn find_position<P>(&mut Self, P) -> Option<(usize, Self::Item)> where\nP: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Find the position and value of the first element satisfying a predicate.","sig":null,"attributes":[{"value":"/ Find the position and value of the first element satisfying a predicate.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":30797,"byte_end":30873,"line_start":950,"line_end":950,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":30878,"byte_end":30881,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ The iterator is not advanced past the first element found.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":30886,"byte_end":30948,"line_start":952,"line_end":952,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":30953,"byte_end":30956,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":30961,"byte_end":30968,"line_start":954,"line_end":954,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":30973,"byte_end":31002,"line_start":955,"line_end":955,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":31007,"byte_end":31010,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ let text = \"Hα\";","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":31015,"byte_end":31036,"line_start":957,"line_end":957,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(text.chars().find_position(|ch| ch.is_lowercase()), Some((1, 'α')));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":31041,"byte_end":31125,"line_start":958,"line_end":958,"column_start":5,"column_end":88}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":31130,"byte_end":31137,"line_start":959,"line_end":959,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1460},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":31817,"byte_end":31822,"line_start":984,"line_end":984,"column_start":8,"column_end":13},"name":"dropn","qualname":"::Itertools::dropn","value":"pub fn dropn(&mut Self, usize) -> usize","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Consume the first `n` elements of the iterator eagerly.","sig":null,"attributes":[{"value":"/ Consume the first `n` elements of the iterator eagerly.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":31468,"byte_end":31527,"line_start":973,"line_end":973,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":31532,"byte_end":31535,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ Return actual number of elements consumed, until done or reaching the end.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":31540,"byte_end":31618,"line_start":975,"line_end":975,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":31623,"byte_end":31626,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":31631,"byte_end":31638,"line_start":977,"line_end":977,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":31643,"byte_end":31672,"line_start":978,"line_end":978,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":31677,"byte_end":31680,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ let mut iter = \"αβγ\".chars();","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":31685,"byte_end":31721,"line_start":980,"line_end":980,"column_start":5,"column_end":38}},{"value":"/ iter.dropn(2);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":31726,"byte_end":31744,"line_start":981,"line_end":981,"column_start":5,"column_end":23}},{"value":"/ itertools::assert_equal(iter, \"γ\".chars());","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":31749,"byte_end":31797,"line_start":982,"line_end":982,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":31802,"byte_end":31809,"line_start":983,"line_end":983,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":32669,"byte_end":32677,"line_start":1011,"line_end":1011,"column_start":8,"column_end":16},"name":"dropping","qualname":"::Itertools::dropping","value":"pub fn dropping(Self, usize) -> Self where Self: Sized","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Consume the first `n` elements from the iterator eagerly,\n and return the same iterator again.","sig":null,"attributes":[{"value":"/ Consume the first `n` elements from the iterator eagerly,","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":32101,"byte_end":32162,"line_start":996,"line_end":996,"column_start":5,"column_end":66}},{"value":"/ and return the same iterator again.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":32167,"byte_end":32206,"line_start":997,"line_end":997,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":32211,"byte_end":32214,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ It works similarly to *.skip(* `n` *)* except it is eager and","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":32219,"byte_end":32284,"line_start":999,"line_end":999,"column_start":5,"column_end":70}},{"value":"/ preserves the iterator type.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":32289,"byte_end":32321,"line_start":1000,"line_end":1000,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":32326,"byte_end":32329,"line_start":1001,"line_end":1001,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":32334,"byte_end":32341,"line_start":1002,"line_end":1002,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":32346,"byte_end":32375,"line_start":1003,"line_end":1003,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":32380,"byte_end":32383,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ let mut iter = \"αβγ\".chars().dropping(2);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":32388,"byte_end":32436,"line_start":1005,"line_end":1005,"column_start":5,"column_end":50}},{"value":"/ itertools::assert_equal(iter, \"γ\".chars());","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":32441,"byte_end":32489,"line_start":1006,"line_end":1006,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":32494,"byte_end":32501,"line_start":1007,"line_end":1007,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":32506,"byte_end":32509,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ *Fusing notes: if the iterator is exhausted by dropping,","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":32514,"byte_end":32574,"line_start":1009,"line_end":1009,"column_start":5,"column_end":65}},{"value":"/ the result of calling `.next()` again depends on the iterator implementation.*","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":32579,"byte_end":32661,"line_start":1010,"line_end":1010,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1462},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":33370,"byte_end":33383,"line_start":1035,"line_end":1035,"column_start":8,"column_end":21},"name":"dropping_back","qualname":"::Itertools::dropping_back","value":"pub fn dropping_back(Self, usize) -> Self where Self: Sized,\nSelf: DoubleEndedIterator","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Consume the last `n` elements from the iterator eagerly,\n and return the same iterator again.","sig":null,"attributes":[{"value":"/ Consume the last `n` elements from the iterator eagerly,","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":32820,"byte_end":32880,"line_start":1020,"line_end":1020,"column_start":5,"column_end":65}},{"value":"/ and return the same iterator again.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":32885,"byte_end":32924,"line_start":1021,"line_end":1021,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":32929,"byte_end":32932,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ This is only possible on double ended iterators. `n` may be","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":32937,"byte_end":33000,"line_start":1023,"line_end":1023,"column_start":5,"column_end":68}},{"value":"/ larger than the number of elements.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":33005,"byte_end":33044,"line_start":1024,"line_end":1024,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":33049,"byte_end":33052,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ Note: This method is eager, dropping the back elements immediately and","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":33057,"byte_end":33131,"line_start":1026,"line_end":1026,"column_start":5,"column_end":79}},{"value":"/ preserves the iterator type.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":33136,"byte_end":33168,"line_start":1027,"line_end":1027,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":33173,"byte_end":33176,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":33181,"byte_end":33188,"line_start":1029,"line_end":1029,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":33193,"byte_end":33222,"line_start":1030,"line_end":1030,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":33227,"byte_end":33230,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ let init = vec![0, 3, 6, 9].into_iter().dropping_back(1);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":33235,"byte_end":33296,"line_start":1032,"line_end":1032,"column_start":5,"column_end":66}},{"value":"/ itertools::assert_equal(init, vec![0, 3, 6]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":33301,"byte_end":33350,"line_start":1033,"line_end":1033,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":33355,"byte_end":33362,"line_start":1034,"line_end":1034,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1463},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":34073,"byte_end":34080,"line_start":1060,"line_end":1060,"column_start":8,"column_end":15},"name":"foreach","qualname":"::Itertools::foreach","value":"pub fn foreach<F>(&mut Self, F) where F: FnMut(Self::Item) -> ()","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Run the closure `f` eagerly on each element of the iterator.","sig":null,"attributes":[{"value":"/ Run the closure `f` eagerly on each element of the iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":33547,"byte_end":33611,"line_start":1043,"line_end":1043,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":33616,"byte_end":33619,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ Consumes the iterator until its end.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":33624,"byte_end":33664,"line_start":1045,"line_end":1045,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":33669,"byte_end":33672,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":33677,"byte_end":33684,"line_start":1047,"line_end":1047,"column_start":5,"column_end":12}},{"value":"/ use std::sync::mpsc::channel;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":33689,"byte_end":33722,"line_start":1048,"line_end":1048,"column_start":5,"column_end":38}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":33727,"byte_end":33756,"line_start":1049,"line_end":1049,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":33761,"byte_end":33764,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = channel();","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":33769,"byte_end":33798,"line_start":1051,"line_end":1051,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":33803,"byte_end":33806,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/ // use .foreach() to apply a function to each value -- sending it","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":33811,"byte_end":33880,"line_start":1053,"line_end":1053,"column_start":5,"column_end":74}},{"value":"/ (0..5).map(|x| x * 2 + 1).foreach(|x| { tx.send(x).unwrap(); } );","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":33885,"byte_end":33954,"line_start":1054,"line_end":1054,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":33959,"byte_end":33962,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ drop(tx);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":33967,"byte_end":33980,"line_start":1056,"line_end":1056,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":33985,"byte_end":33988,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal(rx.iter(), vec![1, 3, 5, 7, 9]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":33993,"byte_end":34053,"line_start":1058,"line_end":1058,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":34058,"byte_end":34065,"line_start":1059,"line_end":1059,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1465},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":34314,"byte_end":34325,"line_start":1070,"line_end":1070,"column_start":8,"column_end":19},"name":"collect_vec","qualname":"::Itertools::collect_vec","value":"pub fn collect_vec(Self) -> Vec<Self::Item> where Self: Sized","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" `.collect_vec()` is simply a type specialization of `.collect()`,\n for convenience.\n","sig":null,"attributes":[{"value":"/ `.collect_vec()` is simply a type specialization of `.collect()`,","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":34212,"byte_end":34281,"line_start":1068,"line_end":1068,"column_start":5,"column_end":74}},{"value":"/ for convenience.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":34286,"byte_end":34306,"line_start":1069,"line_end":1069,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1466},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":34942,"byte_end":34950,"line_start":1092,"line_end":1092,"column_start":8,"column_end":16},"name":"set_from","qualname":"::Itertools::set_from","value":"pub fn set_from<'a, A: 'a, J>(&mut Self, J) -> usize where Self: Iterator<Item\n= &'a mut A>, J: IntoIterator<Item = A>","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Assign to each reference in `self` from the `from` iterator,\n stopping at the shortest of the two iterators.","sig":null,"attributes":[{"value":"/ Assign to each reference in `self` from the `from` iterator,","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":34417,"byte_end":34481,"line_start":1076,"line_end":1076,"column_start":5,"column_end":69}},{"value":"/ stopping at the shortest of the two iterators.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":34486,"byte_end":34536,"line_start":1077,"line_end":1077,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":34541,"byte_end":34544,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ The `from` iterator is queried for its next element before the `self`","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":34549,"byte_end":34622,"line_start":1079,"line_end":1079,"column_start":5,"column_end":78}},{"value":"/ iterator, and if either is exhausted the method is done.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":34627,"byte_end":34687,"line_start":1080,"line_end":1080,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":34692,"byte_end":34695,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ Return the number of elements written.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":34700,"byte_end":34742,"line_start":1082,"line_end":1082,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":34747,"byte_end":34750,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":34755,"byte_end":34762,"line_start":1084,"line_end":1084,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":34767,"byte_end":34796,"line_start":1085,"line_end":1085,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":34801,"byte_end":34804,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ let mut xs = [0; 4];","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":34809,"byte_end":34833,"line_start":1087,"line_end":1087,"column_start":5,"column_end":29}},{"value":"/ xs.iter_mut().set_from(1..);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":34838,"byte_end":34870,"line_start":1088,"line_end":1088,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(xs, [1, 2, 3, 4]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":34875,"byte_end":34908,"line_start":1089,"line_end":1089,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":34913,"byte_end":34920,"line_start":1090,"line_end":1090,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":34925,"byte_end":34934,"line_start":1091,"line_end":1091,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1470},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":35662,"byte_end":35666,"line_start":1117,"line_end":1117,"column_start":8,"column_end":12},"name":"join","qualname":"::Itertools::join","value":"pub fn join(&mut Self, &str) -> String where Self::Item: std::fmt::Display","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Combine all iterator elements into one String, seperated by `sep`.","sig":null,"attributes":[{"value":"/ Combine all iterator elements into one String, seperated by `sep`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":35318,"byte_end":35388,"line_start":1107,"line_end":1107,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":35393,"byte_end":35396,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ Use the `Display` implementation of each element.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":35401,"byte_end":35454,"line_start":1109,"line_end":1109,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":35459,"byte_end":35462,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":35467,"byte_end":35474,"line_start":1111,"line_end":1111,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":35479,"byte_end":35508,"line_start":1112,"line_end":1112,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":35513,"byte_end":35516,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ assert_eq!([\"a\", \"b\", \"c\"].iter().join(\", \"), \"a, b, c\");","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":35521,"byte_end":35582,"line_start":1114,"line_end":1114,"column_start":5,"column_end":66}},{"value":"/ assert_eq!([1, 2, 3].iter().join(\", \"), \"1, 2, 3\");","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":35587,"byte_end":35642,"line_start":1115,"line_end":1115,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":35647,"byte_end":35654,"line_start":1116,"line_end":1116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1471},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":36722,"byte_end":36736,"line_start":1149,"line_end":1149,"column_start":8,"column_end":22},"name":"format_default","qualname":"::Itertools::format_default","value":"pub fn format_default(Self, &str) -> FormatDefault<, Self> where Self: Sized","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Format all iterator elements, separated by `sep`.","sig":null,"attributes":[{"value":"/ Format all iterator elements, separated by `sep`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":36306,"byte_end":36359,"line_start":1136,"line_end":1136,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":36364,"byte_end":36367,"line_start":1137,"line_end":1137,"column_start":5,"column_end":8}},{"value":"/ All elements are formatted (any formatting trait)","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":36372,"byte_end":36425,"line_start":1138,"line_end":1138,"column_start":5,"column_end":58}},{"value":"/ with `sep` inserted between each element.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":36430,"byte_end":36475,"line_start":1139,"line_end":1139,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":36480,"byte_end":36483,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":36488,"byte_end":36495,"line_start":1141,"line_end":1141,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":36500,"byte_end":36529,"line_start":1142,"line_end":1142,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":36534,"byte_end":36537,"line_start":1143,"line_end":1143,"column_start":5,"column_end":8}},{"value":"/ let data = [1.1, 2.71828, -3.];","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":36542,"byte_end":36577,"line_start":1144,"line_end":1144,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":36582,"byte_end":36597,"line_start":1145,"line_end":1145,"column_start":5,"column_end":20}},{"value":"/     format!(\"{:.2}\", data.iter().format_default(\", \")),","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":36602,"byte_end":36661,"line_start":1146,"line_end":1146,"column_start":5,"column_end":64}},{"value":"/            \"1.10, 2.72, -3.00\");","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":36666,"byte_end":36702,"line_start":1147,"line_end":1147,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":36707,"byte_end":36714,"line_start":1148,"line_end":1148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1472},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":38129,"byte_end":38135,"line_start":1185,"line_end":1185,"column_start":8,"column_end":14},"name":"format","qualname":"::Itertools::format","value":"pub fn format<F>(Self, &str, F) -> Format<, Self, F> where Self: Sized,\nF: FnMut(Self::Item, &mut FnMut(&fmt::Display) -> fmt::Result) -> fmt::Result","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Format all iterator elements, separated by `sep`.","sig":null,"attributes":[{"value":"/ Format all iterator elements, separated by `sep`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":36867,"byte_end":36920,"line_start":1155,"line_end":1155,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":36925,"byte_end":36928,"line_start":1156,"line_end":1156,"column_start":5,"column_end":8}},{"value":"/ This is a customizable version of `.format_default()`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":36933,"byte_end":36991,"line_start":1157,"line_end":1157,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":36996,"byte_end":36999,"line_start":1158,"line_end":1158,"column_start":5,"column_end":8}},{"value":"/ The supplied closure `format` is called once per iterator element,","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":37004,"byte_end":37074,"line_start":1159,"line_end":1159,"column_start":5,"column_end":75}},{"value":"/ with two arguments: the element and a callback that takes a","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":37079,"byte_end":37142,"line_start":1160,"line_end":1160,"column_start":5,"column_end":68}},{"value":"/ `&Display` value, i.e. any reference to type that implements `Display`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":37147,"byte_end":37222,"line_start":1161,"line_end":1161,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":37227,"byte_end":37230,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ Using `&format_args!(...)` is the most versatile way to apply custom","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":37235,"byte_end":37307,"line_start":1163,"line_end":1163,"column_start":5,"column_end":77}},{"value":"/ element formatting. The callback can be called multiple times if needed.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":37312,"byte_end":37388,"line_start":1164,"line_end":1164,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":37393,"byte_end":37396,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":37401,"byte_end":37408,"line_start":1166,"line_end":1166,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":37413,"byte_end":37442,"line_start":1167,"line_end":1167,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":37447,"byte_end":37450,"line_start":1168,"line_end":1168,"column_start":5,"column_end":8}},{"value":"/ let data = [1.1, 2.71828, -3.];","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":37455,"byte_end":37490,"line_start":1169,"line_end":1169,"column_start":5,"column_end":40}},{"value":"/ let data_formatter = data.iter().format(\", \", |elt, f| f(&format_args!(\"{:.2}\", elt)));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":37495,"byte_end":37586,"line_start":1170,"line_end":1170,"column_start":5,"column_end":96}},{"value":"/ assert_eq!(format!(\"{}\", data_formatter),","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":37591,"byte_end":37636,"line_start":1171,"line_end":1171,"column_start":5,"column_end":50}},{"value":"/            \"1.10, 2.72, -3.00\");","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":37641,"byte_end":37677,"line_start":1172,"line_end":1172,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":37682,"byte_end":37685,"line_start":1173,"line_end":1173,"column_start":5,"column_end":8}},{"value":"/ // .format() is recursively composable","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":37690,"byte_end":37732,"line_start":1174,"line_end":1174,"column_start":5,"column_end":47}},{"value":"/ let matrix = [[1., 2., 3.],","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":37737,"byte_end":37768,"line_start":1175,"line_end":1175,"column_start":5,"column_end":36}},{"value":"/               [4., 5., 6.]];","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":37773,"byte_end":37805,"line_start":1176,"line_end":1176,"column_start":5,"column_end":37}},{"value":"/ let matrix_formatter = matrix.iter().format(\"\\n\", |row, f| {","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":37810,"byte_end":37874,"line_start":1177,"line_end":1177,"column_start":5,"column_end":69}},{"value":"/                                 f(&row.iter().format(\", \", |elt, g| g(&elt)))","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":37879,"byte_end":37960,"line_start":1178,"line_end":1178,"column_start":5,"column_end":86}},{"value":"/                              });","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":37965,"byte_end":38001,"line_start":1179,"line_end":1179,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(format!(\"{}\", matrix_formatter),","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":38006,"byte_end":38053,"line_start":1180,"line_end":1180,"column_start":5,"column_end":52}},{"value":"/            \"1, 2, 3\\n4, 5, 6\");","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":38058,"byte_end":38093,"line_start":1181,"line_end":1181,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":38098,"byte_end":38101,"line_start":1182,"line_end":1182,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":38106,"byte_end":38109,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":38114,"byte_end":38121,"line_start":1184,"line_end":1184,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1474},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":39852,"byte_end":39864,"line_start":1234,"line_end":1234,"column_start":8,"column_end":20},"name":"fold_results","qualname":"::Itertools::fold_results","value":"pub fn fold_results<A, E, B, F>(&mut Self, B, F) -> Result<B, E> where\nSelf: Iterator<Item = Result<A, E>>, F: FnMut(B, A) -> B","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Fold `Result` values from an iterator.","sig":null,"attributes":[{"value":"/ Fold `Result` values from an iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":38369,"byte_end":38411,"line_start":1192,"line_end":1192,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":38416,"byte_end":38419,"line_start":1193,"line_end":1193,"column_start":5,"column_end":8}},{"value":"/ Only `Ok` values are folded. If no error is encountered, the folded","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":38424,"byte_end":38495,"line_start":1194,"line_end":1194,"column_start":5,"column_end":76}},{"value":"/ value is returned inside `Ok`. Otherwise, the operation terminates","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":38500,"byte_end":38570,"line_start":1195,"line_end":1195,"column_start":5,"column_end":75}},{"value":"/ and returns the first `Err` value it encounters. No iterator elements are","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":38575,"byte_end":38652,"line_start":1196,"line_end":1196,"column_start":5,"column_end":82}},{"value":"/ consumed after the first error.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":38657,"byte_end":38692,"line_start":1197,"line_end":1197,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":38697,"byte_end":38700,"line_start":1198,"line_end":1198,"column_start":5,"column_end":8}},{"value":"/ The first accumulator value is the `start` parameter.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":38705,"byte_end":38762,"line_start":1199,"line_end":1199,"column_start":5,"column_end":62}},{"value":"/ Each iteration passes the accumulator value and the next value inside `Ok`","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":38767,"byte_end":38845,"line_start":1200,"line_end":1200,"column_start":5,"column_end":83}},{"value":"/ to the fold function `f` and its return value becomes the new accumulator value.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":38850,"byte_end":38934,"line_start":1201,"line_end":1201,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":38939,"byte_end":38942,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ For example the sequence *Ok(1), Ok(2), Ok(3)* will result in a","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":38947,"byte_end":39014,"line_start":1203,"line_end":1203,"column_start":5,"column_end":72}},{"value":"/ computation like this:","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":39019,"byte_end":39045,"line_start":1204,"line_end":1204,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":39050,"byte_end":39053,"line_start":1205,"line_end":1205,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":39058,"byte_end":39071,"line_start":1206,"line_end":1206,"column_start":5,"column_end":18}},{"value":"/ let mut accum = start;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":39076,"byte_end":39102,"line_start":1207,"line_end":1207,"column_start":5,"column_end":31}},{"value":"/ accum = f(accum, 1);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":39107,"byte_end":39131,"line_start":1208,"line_end":1208,"column_start":5,"column_end":29}},{"value":"/ accum = f(accum, 2);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":39136,"byte_end":39160,"line_start":1209,"line_end":1209,"column_start":5,"column_end":29}},{"value":"/ accum = f(accum, 3);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":39165,"byte_end":39189,"line_start":1210,"line_end":1210,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":39194,"byte_end":39201,"line_start":1211,"line_end":1211,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":39206,"byte_end":39209,"line_start":1212,"line_end":1212,"column_start":5,"column_end":8}},{"value":"/ With a `start` value of 0 and an addition as folding function,","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":39214,"byte_end":39280,"line_start":1213,"line_end":1213,"column_start":5,"column_end":71}},{"value":"/ this effetively results in *((0 + 1) + 2) + 3*","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":39285,"byte_end":39335,"line_start":1214,"line_end":1214,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":39340,"byte_end":39343,"line_start":1215,"line_end":1215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":39348,"byte_end":39355,"line_start":1216,"line_end":1216,"column_start":5,"column_end":12}},{"value":"/ use std::ops::Add;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":39360,"byte_end":39382,"line_start":1217,"line_end":1217,"column_start":5,"column_end":27}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":39387,"byte_end":39416,"line_start":1218,"line_end":1218,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":39421,"byte_end":39424,"line_start":1219,"line_end":1219,"column_start":5,"column_end":8}},{"value":"/ let values = [1, 2, -2, -1, 2, 1];","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":39429,"byte_end":39467,"line_start":1220,"line_end":1220,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":39472,"byte_end":39487,"line_start":1221,"line_end":1221,"column_start":5,"column_end":20}},{"value":"/     values.iter()","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":39492,"byte_end":39513,"line_start":1222,"line_end":1222,"column_start":5,"column_end":26}},{"value":"/           .map(Ok::<_, ()>)","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":39518,"byte_end":39549,"line_start":1223,"line_end":1223,"column_start":5,"column_end":36}},{"value":"/           .fold_results(0, Add::add),","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":39554,"byte_end":39595,"line_start":1224,"line_end":1224,"column_start":5,"column_end":46}},{"value":"/     Ok(3)","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":39600,"byte_end":39613,"line_start":1225,"line_end":1225,"column_start":5,"column_end":18}},{"value":"/ );","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":39618,"byte_end":39624,"line_start":1226,"line_end":1226,"column_start":5,"column_end":11}},{"value":"/ assert!(","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":39629,"byte_end":39641,"line_start":1227,"line_end":1227,"column_start":5,"column_end":17}},{"value":"/     values.iter()","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":39646,"byte_end":39667,"line_start":1228,"line_end":1228,"column_start":5,"column_end":26}},{"value":"/           .map(|&x| if x >= 0 { Ok(x) } else { Err(\"Negative number\") })","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":39672,"byte_end":39748,"line_start":1229,"line_end":1229,"column_start":5,"column_end":81}},{"value":"/           .fold_results(0, Add::add)","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":39753,"byte_end":39793,"line_start":1230,"line_end":1230,"column_start":5,"column_end":45}},{"value":"/           .is_err()","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":39798,"byte_end":39821,"line_start":1231,"line_end":1231,"column_start":5,"column_end":28}},{"value":"/ );","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":39826,"byte_end":39832,"line_start":1232,"line_end":1232,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":39837,"byte_end":39844,"line_start":1233,"line_end":1233,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1479},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":41021,"byte_end":41033,"line_start":1266,"line_end":1266,"column_start":8,"column_end":20},"name":"fold_options","qualname":"::Itertools::fold_options","value":"pub fn fold_options<A, B, F>(&mut Self, B, F) -> Option<B> where\nSelf: Iterator<Item = Option<A>>, F: FnMut(B, A) -> B","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Fold `Option` values from an iterator.","sig":null,"attributes":[{"value":"/ Fold `Option` values from an iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":40209,"byte_end":40251,"line_start":1247,"line_end":1247,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":40256,"byte_end":40259,"line_start":1248,"line_end":1248,"column_start":5,"column_end":8}},{"value":"/ Only `Some` values are folded. If no `None` is encountered, the folded","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":40264,"byte_end":40338,"line_start":1249,"line_end":1249,"column_start":5,"column_end":79}},{"value":"/ value is returned inside `Some`. Otherwise, the operation terminates","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":40343,"byte_end":40415,"line_start":1250,"line_end":1250,"column_start":5,"column_end":77}},{"value":"/ and returns `None`. No iterator elements are consumed after the `None`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":40420,"byte_end":40495,"line_start":1251,"line_end":1251,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":40500,"byte_end":40503,"line_start":1252,"line_end":1252,"column_start":5,"column_end":8}},{"value":"/ This is the `Option` equivalent to `fold_results`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":40508,"byte_end":40562,"line_start":1253,"line_end":1253,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":40567,"byte_end":40570,"line_start":1254,"line_end":1254,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":40575,"byte_end":40582,"line_start":1255,"line_end":1255,"column_start":5,"column_end":12}},{"value":"/ use std::ops::Add;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":40587,"byte_end":40609,"line_start":1256,"line_end":1256,"column_start":5,"column_end":27}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":40614,"byte_end":40643,"line_start":1257,"line_end":1257,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":40648,"byte_end":40651,"line_start":1258,"line_end":1258,"column_start":5,"column_end":8}},{"value":"/ let mut values = vec![Some(1), Some(2), Some(-2)].into_iter();","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":40656,"byte_end":40722,"line_start":1259,"line_end":1259,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(values.fold_options(5, Add::add), Some(5 + 1 + 2 - 2));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":40727,"byte_end":40797,"line_start":1260,"line_end":1260,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":40802,"byte_end":40805,"line_start":1261,"line_end":1261,"column_start":5,"column_end":8}},{"value":"/ let mut more_values = vec![Some(2), None, Some(0)].into_iter();","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":40810,"byte_end":40877,"line_start":1262,"line_end":1262,"column_start":5,"column_end":72}},{"value":"/ assert!(more_values.fold_options(0, Add::add).is_none());","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":40882,"byte_end":40943,"line_start":1263,"line_end":1263,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(more_values.next().unwrap(), Some(0));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":40948,"byte_end":41001,"line_start":1264,"line_end":1264,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":41006,"byte_end":41013,"line_start":1265,"line_end":1265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1483},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":41833,"byte_end":41838,"line_start":1291,"line_end":1291,"column_start":8,"column_end":13},"name":"fold1","qualname":"::Itertools::fold1","value":"pub fn fold1<F>(&mut Self, F) -> Option<Self::Item> where\nF: FnMut(Self::Item, Self::Item) -> Self::Item","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Accumulator of the elements in the iterator.","sig":null,"attributes":[{"value":"/ Accumulator of the elements in the iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":41369,"byte_end":41417,"line_start":1279,"line_end":1279,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":41422,"byte_end":41425,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ Like `.fold()`, without a base case. If the iterator is","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":41430,"byte_end":41489,"line_start":1281,"line_end":1281,"column_start":5,"column_end":64}},{"value":"/ empty, return `None`. With just one element, return it.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":41494,"byte_end":41553,"line_start":1282,"line_end":1282,"column_start":5,"column_end":64}},{"value":"/ Otherwise elements are accumulated in sequence using the closure `f`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":41558,"byte_end":41631,"line_start":1283,"line_end":1283,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":41636,"byte_end":41639,"line_start":1284,"line_end":1284,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":41644,"byte_end":41651,"line_start":1285,"line_end":1285,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":41656,"byte_end":41685,"line_start":1286,"line_end":1286,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":41690,"byte_end":41693,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/ assert_eq!((0..10).fold1(|x, y| x + y).unwrap_or(0), 45);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":41698,"byte_end":41759,"line_start":1288,"line_end":1288,"column_start":5,"column_end":66}},{"value":"/ assert_eq!((0..0).fold1(|x, y| x * y), None);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":41764,"byte_end":41813,"line_start":1289,"line_end":1289,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":41818,"byte_end":41825,"line_start":1290,"line_end":1290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1485},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":43481,"byte_end":43491,"line_start":1344,"line_end":1344,"column_start":8,"column_end":18},"name":"fold_while","qualname":"::Itertools::fold_while","value":"pub fn fold_while<B, F>(Self, B, F) -> B where Self: Sized,\nF: FnMut(B, Self::Item) -> FoldWhile<B>","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" An iterator adaptor that applies a function, producing a single, final value.","sig":null,"attributes":[{"value":"/ An iterator adaptor that applies a function, producing a single, final value.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":42177,"byte_end":42258,"line_start":1305,"line_end":1305,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":42263,"byte_end":42266,"line_start":1306,"line_end":1306,"column_start":5,"column_end":8}},{"value":"/ `fold_while()` is basically equivalent to `fold()` but with additional support for","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":42271,"byte_end":42357,"line_start":1307,"line_end":1307,"column_start":5,"column_end":91}},{"value":"/ early exit via short-circuiting.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":42362,"byte_end":42398,"line_start":1308,"line_end":1308,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":42403,"byte_end":42406,"line_start":1309,"line_end":1309,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":42411,"byte_end":42418,"line_start":1310,"line_end":1310,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":42423,"byte_end":42452,"line_start":1311,"line_end":1311,"column_start":5,"column_end":34}},{"value":"/ use itertools::FoldWhile::{Continue, Done};","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":42457,"byte_end":42504,"line_start":1312,"line_end":1312,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":42509,"byte_end":42512,"line_start":1313,"line_end":1313,"column_start":5,"column_end":8}},{"value":"/ let numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":42517,"byte_end":42567,"line_start":1314,"line_end":1314,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":42572,"byte_end":42575,"line_start":1315,"line_end":1315,"column_start":5,"column_end":8}},{"value":"/ let mut result = 0;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":42580,"byte_end":42603,"line_start":1316,"line_end":1316,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":42608,"byte_end":42611,"line_start":1317,"line_end":1317,"column_start":5,"column_end":8}},{"value":"/ // for loop:","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":42616,"byte_end":42632,"line_start":1318,"line_end":1318,"column_start":5,"column_end":21}},{"value":"/ for i in &numbers {","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":42637,"byte_end":42660,"line_start":1319,"line_end":1319,"column_start":5,"column_end":28}},{"value":"/     if *i > 5 {","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":42665,"byte_end":42684,"line_start":1320,"line_end":1320,"column_start":5,"column_end":24}},{"value":"/         break;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":42689,"byte_end":42707,"line_start":1321,"line_end":1321,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":42712,"byte_end":42721,"line_start":1322,"line_end":1322,"column_start":5,"column_end":14}},{"value":"/     result = result + i;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":42726,"byte_end":42754,"line_start":1323,"line_end":1323,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":42759,"byte_end":42764,"line_start":1324,"line_end":1324,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":42769,"byte_end":42772,"line_start":1325,"line_end":1325,"column_start":5,"column_end":8}},{"value":"/ // fold:","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":42777,"byte_end":42789,"line_start":1326,"line_end":1326,"column_start":5,"column_end":17}},{"value":"/ let result2 = numbers.iter().fold(0, |acc, x| {","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":42794,"byte_end":42845,"line_start":1327,"line_end":1327,"column_start":5,"column_end":56}},{"value":"/     if *x > 5 { acc } else { acc + x }","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":42850,"byte_end":42892,"line_start":1328,"line_end":1328,"column_start":5,"column_end":47}},{"value":"/ });","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":42897,"byte_end":42904,"line_start":1329,"line_end":1329,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":42909,"byte_end":42912,"line_start":1330,"line_end":1330,"column_start":5,"column_end":8}},{"value":"/ // fold_while:","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":42917,"byte_end":42935,"line_start":1331,"line_end":1331,"column_start":5,"column_end":23}},{"value":"/ let result3 = numbers.iter().fold_while(0, |acc, x| {","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":42940,"byte_end":42997,"line_start":1332,"line_end":1332,"column_start":5,"column_end":62}},{"value":"/     if *x > 5 { Done(acc) } else { Continue(acc + x) }","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":43002,"byte_end":43060,"line_start":1333,"line_end":1333,"column_start":5,"column_end":63}},{"value":"/ });","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":43065,"byte_end":43072,"line_start":1334,"line_end":1334,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":43077,"byte_end":43080,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ // they're the same","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":43085,"byte_end":43108,"line_start":1336,"line_end":1336,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(result, result2);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":43113,"byte_end":43145,"line_start":1337,"line_end":1337,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(result2, result3);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":43150,"byte_end":43183,"line_start":1338,"line_end":1338,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":43188,"byte_end":43195,"line_start":1339,"line_end":1339,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":43200,"byte_end":43203,"line_start":1340,"line_end":1340,"column_start":5,"column_end":8}},{"value":"/ The big difference between the computations of `result2` and `result3` is that while","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":43208,"byte_end":43296,"line_start":1341,"line_end":1341,"column_start":5,"column_end":93}},{"value":"/ `fold()` called the provided closure for every item of the callee iterator,","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":43301,"byte_end":43380,"line_start":1342,"line_end":1342,"column_start":5,"column_end":84}},{"value":"/ `fold_while()` actually stopped iterating as soon as it encountered `Fold::Done(_)`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":43385,"byte_end":43473,"line_start":1343,"line_end":1343,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1488},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":44448,"byte_end":44461,"line_start":1374,"line_end":1374,"column_start":8,"column_end":21},"name":"is_empty_hint","qualname":"::Itertools::is_empty_hint","value":"pub fn is_empty_hint(&Self) -> Option<bool>","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Tell if the iterator is empty or not according to its size hint.\n Return `None` if the size hint does not tell, or return a `Some`\n value with the emptiness if it's possible to tell.","sig":null,"attributes":[{"value":"/ Tell if the iterator is empty or not according to its size hint.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":43973,"byte_end":44041,"line_start":1363,"line_end":1363,"column_start":5,"column_end":73}},{"value":"/ Return `None` if the size hint does not tell, or return a `Some`","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":44046,"byte_end":44114,"line_start":1364,"line_end":1364,"column_start":5,"column_end":73}},{"value":"/ value with the emptiness if it's possible to tell.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":44119,"byte_end":44173,"line_start":1365,"line_end":1365,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":44178,"byte_end":44181,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":44186,"byte_end":44193,"line_start":1367,"line_end":1367,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":44198,"byte_end":44227,"line_start":1368,"line_end":1368,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":44232,"byte_end":44235,"line_start":1369,"line_end":1369,"column_start":5,"column_end":8}},{"value":"/ assert_eq!((1..1).is_empty_hint(), Some(true));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":44240,"byte_end":44291,"line_start":1370,"line_end":1370,"column_start":5,"column_end":56}},{"value":"/ assert_eq!([1, 2, 3].iter().is_empty_hint(), Some(false));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":44296,"byte_end":44358,"line_start":1371,"line_end":1371,"column_start":5,"column_end":67}},{"value":"/ assert_eq!((0..10).filter(|&x| x > 0).is_empty_hint(), None);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":44363,"byte_end":44428,"line_start":1372,"line_end":1372,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":44433,"byte_end":44440,"line_start":1373,"line_end":1373,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1489},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":45300,"byte_end":45306,"line_start":1403,"line_end":1403,"column_start":8,"column_end":14},"name":"sorted","qualname":"::Itertools::sorted","value":"pub fn sorted(Self) -> Vec<Self::Item> where Self: Sized, Self::Item: Ord","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Collect all iterator elements into a sorted vector in ascending order.","sig":null,"attributes":[{"value":"/ Collect all iterator elements into a sorted vector in ascending order.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":44815,"byte_end":44889,"line_start":1390,"line_end":1390,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":44894,"byte_end":44897,"line_start":1391,"line_end":1391,"column_start":5,"column_end":8}},{"value":"/ **Note:** This consumes the entire iterator, uses the","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":44902,"byte_end":44959,"line_start":1392,"line_end":1392,"column_start":5,"column_end":62}},{"value":"/ `slice::sort_by()` method and returns the sorted vector.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":44964,"byte_end":45024,"line_start":1393,"line_end":1393,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":45029,"byte_end":45032,"line_start":1394,"line_end":1394,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":45037,"byte_end":45044,"line_start":1395,"line_end":1395,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":45049,"byte_end":45078,"line_start":1396,"line_end":1396,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":45083,"byte_end":45086,"line_start":1397,"line_end":1397,"column_start":5,"column_end":8}},{"value":"/ // sort the letters of the text in ascending order","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":45091,"byte_end":45145,"line_start":1398,"line_end":1398,"column_start":5,"column_end":59}},{"value":"/ let text = \"bdacfe\";","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":45150,"byte_end":45174,"line_start":1399,"line_end":1399,"column_start":5,"column_end":29}},{"value":"/ itertools::assert_equal(text.chars().sorted(),","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":45179,"byte_end":45229,"line_start":1400,"line_end":1400,"column_start":5,"column_end":55}},{"value":"/                         \"abcdef\".chars());","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":45234,"byte_end":45280,"line_start":1401,"line_end":1401,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":45285,"byte_end":45292,"line_start":1402,"line_end":1402,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1490},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":46170,"byte_end":46179,"line_start":1430,"line_end":1430,"column_start":8,"column_end":17},"name":"sorted_by","qualname":"::Itertools::sorted_by","value":"pub fn sorted_by<F>(Self, F) -> Vec<Self::Item> where Self: Sized,\nF: FnMut(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Collect all iterator elements into a sorted vector.","sig":null,"attributes":[{"value":"/ Collect all iterator elements into a sorted vector.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":45439,"byte_end":45494,"line_start":1410,"line_end":1410,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":45499,"byte_end":45502,"line_start":1411,"line_end":1411,"column_start":5,"column_end":8}},{"value":"/ **Note:** This consumes the entire iterator, uses the","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":45507,"byte_end":45564,"line_start":1412,"line_end":1412,"column_start":5,"column_end":62}},{"value":"/ `slice::sort_by()` method and returns the sorted vector.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":45569,"byte_end":45629,"line_start":1413,"line_end":1413,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":45634,"byte_end":45637,"line_start":1414,"line_end":1414,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":45642,"byte_end":45649,"line_start":1415,"line_end":1415,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":45654,"byte_end":45683,"line_start":1416,"line_end":1416,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":45688,"byte_end":45691,"line_start":1417,"line_end":1417,"column_start":5,"column_end":8}},{"value":"/ // sort people in descending order by age","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":45696,"byte_end":45741,"line_start":1418,"line_end":1418,"column_start":5,"column_end":50}},{"value":"/ let people = vec![(\"Jane\", 20), (\"John\", 18), (\"Jill\", 30), (\"Jack\", 27)];","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":45746,"byte_end":45824,"line_start":1419,"line_end":1419,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":45829,"byte_end":45832,"line_start":1420,"line_end":1420,"column_start":5,"column_end":8}},{"value":"/ let oldest_people_first = people","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":45837,"byte_end":45873,"line_start":1421,"line_end":1421,"column_start":5,"column_end":41}},{"value":"/     .into_iter()","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":45878,"byte_end":45898,"line_start":1422,"line_end":1422,"column_start":5,"column_end":25}},{"value":"/     .sorted_by(|a, b| Ord::cmp(&b.1, &a.1))","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":45903,"byte_end":45950,"line_start":1423,"line_end":1423,"column_start":5,"column_end":52}},{"value":"/     .into_iter()","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":45955,"byte_end":45975,"line_start":1424,"line_end":1424,"column_start":5,"column_end":25}},{"value":"/     .map(|(person, _age)| person);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":45980,"byte_end":46018,"line_start":1425,"line_end":1425,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":46023,"byte_end":46026,"line_start":1426,"line_end":1426,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal(oldest_people_first,","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":46031,"byte_end":46079,"line_start":1427,"line_end":1427,"column_start":5,"column_end":53}},{"value":"/                         vec![\"Jill\", \"Jack\", \"Jane\", \"John\"]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":46084,"byte_end":46150,"line_start":1428,"line_end":1428,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":46155,"byte_end":46162,"line_start":1429,"line_end":1429,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1492},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":46548,"byte_end":46555,"line_start":1442,"line_end":1442,"column_start":8,"column_end":15},"name":"sort_by","qualname":"::Itertools::sort_by","value":"pub fn sort_by<F>(Self, F) -> Vec<Self::Item> where Self: Sized,\nF: FnMut(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" **Deprecated:** renamed to `.sorted_by()`\n","sig":null,"attributes":[{"value":"/ **Deprecated:** renamed to `.sorted_by()`","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":46495,"byte_end":46540,"line_start":1441,"line_end":1441,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1494},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":47444,"byte_end":47457,"line_start":1470,"line_end":1470,"column_start":8,"column_end":21},"name":"partition_map","qualname":"::Itertools::partition_map","value":"pub fn partition_map<A, B, F, L, R>(Self, F) -> (A, B) where Self: Sized,\nF: Fn(Self::Item) -> Partition<L, R>, A: Default + Extend<L>, B: Default +\nExtend<R>","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Collect all iterator elements into one of two\n partitions. Unlike `Iterator::partition`, each partition may\n have a distinct type.","sig":null,"attributes":[{"value":"/ Collect all iterator elements into one of two","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":46726,"byte_end":46775,"line_start":1449,"line_end":1449,"column_start":5,"column_end":54}},{"value":"/ partitions. Unlike `Iterator::partition`, each partition may","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":46780,"byte_end":46844,"line_start":1450,"line_end":1450,"column_start":5,"column_end":69}},{"value":"/ have a distinct type.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":46849,"byte_end":46874,"line_start":1451,"line_end":1451,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":46879,"byte_end":46882,"line_start":1452,"line_end":1452,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":46887,"byte_end":46894,"line_start":1453,"line_end":1453,"column_start":5,"column_end":12}},{"value":"/ use itertools::{Itertools, Partition};","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":46899,"byte_end":46941,"line_start":1454,"line_end":1454,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":46946,"byte_end":46949,"line_start":1455,"line_end":1455,"column_start":5,"column_end":8}},{"value":"/ let successes_and_failures = vec![Ok(1), Err(false), Err(true), Ok(2)];","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":46954,"byte_end":47029,"line_start":1456,"line_end":1456,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":47034,"byte_end":47037,"line_start":1457,"line_end":1457,"column_start":5,"column_end":8}},{"value":"/ let (successes, failures): (Vec<_>, Vec<_>) = successes_and_failures","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":47042,"byte_end":47114,"line_start":1458,"line_end":1458,"column_start":5,"column_end":77}},{"value":"/     .into_iter()","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":47119,"byte_end":47139,"line_start":1459,"line_end":1459,"column_start":5,"column_end":25}},{"value":"/     .partition_map(|r| {","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":47144,"byte_end":47172,"line_start":1460,"line_end":1460,"column_start":5,"column_end":33}},{"value":"/         match r {","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":47177,"byte_end":47198,"line_start":1461,"line_end":1461,"column_start":5,"column_end":26}},{"value":"/             Ok(v) => Partition::Left(v),","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":47203,"byte_end":47247,"line_start":1462,"line_end":1462,"column_start":5,"column_end":49}},{"value":"/             Err(v) => Partition::Right(v),","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":47252,"byte_end":47298,"line_start":1463,"line_end":1463,"column_start":5,"column_end":51}},{"value":"/         }","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":47303,"byte_end":47316,"line_start":1464,"line_end":1464,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":47321,"byte_end":47332,"line_start":1465,"line_end":1465,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":47337,"byte_end":47340,"line_start":1466,"line_end":1466,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(successes, [1, 2]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":47345,"byte_end":47379,"line_start":1467,"line_end":1467,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(failures, [false, true]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":47384,"byte_end":47424,"line_start":1468,"line_end":1468,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":47429,"byte_end":47436,"line_start":1469,"line_end":1469,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1500},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":49162,"byte_end":49168,"line_start":1521,"line_end":1521,"column_start":8,"column_end":14},"name":"minmax","qualname":"::Itertools::minmax","value":"pub fn minmax(Self) -> MinMaxResult<Self::Item> where Self: Sized,\nSelf::Item: Ord","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Return the minimum and maximum elements in the iterator.","sig":null,"attributes":[{"value":"/ Return the minimum and maximum elements in the iterator.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":47981,"byte_end":48041,"line_start":1489,"line_end":1489,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":48046,"byte_end":48049,"line_start":1490,"line_end":1490,"column_start":5,"column_end":8}},{"value":"/ The return type `MinMaxResult` is an enum of three variants:","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":48054,"byte_end":48118,"line_start":1491,"line_end":1491,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":48123,"byte_end":48126,"line_start":1492,"line_end":1492,"column_start":5,"column_end":8}},{"value":"/ - `NoElements` if the iterator is empty.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":48131,"byte_end":48175,"line_start":1493,"line_end":1493,"column_start":5,"column_end":49}},{"value":"/ - `OneElement(x)` if the iterator has exactly one element.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":48180,"byte_end":48242,"line_start":1494,"line_end":1494,"column_start":5,"column_end":67}},{"value":"/ - `MinMax(x, y)` is returned otherwise, where `x <= y`. Two","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":48247,"byte_end":48310,"line_start":1495,"line_end":1495,"column_start":5,"column_end":68}},{"value":"/    values are equal if and only if there is more than one","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":48315,"byte_end":48376,"line_start":1496,"line_end":1496,"column_start":5,"column_end":66}},{"value":"/    element in the iterator and all elements are equal.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":48381,"byte_end":48439,"line_start":1497,"line_end":1497,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":48444,"byte_end":48447,"line_start":1498,"line_end":1498,"column_start":5,"column_end":8}},{"value":"/ On an iterator of length `n`, `min_max` does `1.5 * n` comparisons,","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":48452,"byte_end":48523,"line_start":1499,"line_end":1499,"column_start":5,"column_end":76}},{"value":"/ and so is faster than calling `min` and `max` separately which does","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":48528,"byte_end":48599,"line_start":1500,"line_end":1500,"column_start":5,"column_end":76}},{"value":"/ `2 * n` comparisons.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":48604,"byte_end":48628,"line_start":1501,"line_end":1501,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":48633,"byte_end":48636,"line_start":1502,"line_end":1502,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":48641,"byte_end":48655,"line_start":1503,"line_end":1503,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":48660,"byte_end":48663,"line_start":1504,"line_end":1504,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":48668,"byte_end":48675,"line_start":1505,"line_end":1505,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":48680,"byte_end":48709,"line_start":1506,"line_end":1506,"column_start":5,"column_end":34}},{"value":"/ use itertools::MinMaxResult::{NoElements, OneElement, MinMax};","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":48714,"byte_end":48780,"line_start":1507,"line_end":1507,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":48785,"byte_end":48788,"line_start":1508,"line_end":1508,"column_start":5,"column_end":8}},{"value":"/ let a: [i32; 0] = [];","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":48793,"byte_end":48818,"line_start":1509,"line_end":1509,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.iter().minmax(), NoElements);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":48823,"byte_end":48869,"line_start":1510,"line_end":1510,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":48874,"byte_end":48877,"line_start":1511,"line_end":1511,"column_start":5,"column_end":8}},{"value":"/ let a = [1];","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":48882,"byte_end":48898,"line_start":1512,"line_end":1512,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(a.iter().minmax(), OneElement(&1));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":48903,"byte_end":48953,"line_start":1513,"line_end":1513,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":48958,"byte_end":48961,"line_start":1514,"line_end":1514,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 4, 5];","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":48966,"byte_end":48994,"line_start":1515,"line_end":1515,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(a.iter().minmax(), MinMax(&1, &5));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":48999,"byte_end":49049,"line_start":1516,"line_end":1516,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":49054,"byte_end":49057,"line_start":1517,"line_end":1517,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 1, 1, 1];","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":49062,"byte_end":49087,"line_start":1518,"line_end":1518,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.iter().minmax(), MinMax(&1, &1));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":49092,"byte_end":49142,"line_start":1519,"line_end":1519,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":49147,"byte_end":49154,"line_start":1520,"line_end":1520,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1503},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":49754,"byte_end":49767,"line_start":1535,"line_end":1535,"column_start":8,"column_end":21},"name":"minmax_by_key","qualname":"::Itertools::minmax_by_key","value":"pub fn minmax_by_key<K, F>(Self, F) -> MinMaxResult<Self::Item> where\nSelf: Sized, K: Ord, F: FnMut(&Self::Item) -> K","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Return the minimum and maximum element of an iterator, as determined by\n the specified function.","sig":null,"attributes":[{"value":"/ Return the minimum and maximum element of an iterator, as determined by","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":49325,"byte_end":49400,"line_start":1527,"line_end":1527,"column_start":5,"column_end":80}},{"value":"/ the specified function.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":49405,"byte_end":49432,"line_start":1528,"line_end":1528,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":49437,"byte_end":49440,"line_start":1529,"line_end":1529,"column_start":5,"column_end":8}},{"value":"/ The return value is a variant of `MinMaxResult` like for `minmax()`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":49445,"byte_end":49517,"line_start":1530,"line_end":1530,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":49522,"byte_end":49525,"line_start":1531,"line_end":1531,"column_start":5,"column_end":8}},{"value":"/ For the minimum, the first minimal element is returned.  For the maximum,","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":49530,"byte_end":49607,"line_start":1532,"line_end":1532,"column_start":5,"column_end":82}},{"value":"/ the last maximal element wins.  This matches the behavior of the standard","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":49612,"byte_end":49689,"line_start":1533,"line_end":1533,"column_start":5,"column_end":82}},{"value":"/ `Iterator::min()` and `Iterator::max()` methods.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":49694,"byte_end":49746,"line_start":1534,"line_end":1534,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1507},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":50398,"byte_end":50407,"line_start":1549,"line_end":1549,"column_start":8,"column_end":17},"name":"minmax_by","qualname":"::Itertools::minmax_by","value":"pub fn minmax_by<F>(Self, F) -> MinMaxResult<Self::Item> where Self: Sized,\nF: FnMut(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Return the minimum and maximum element of an iterator, as determined by\n the specified comparison function.","sig":null,"attributes":[{"value":"/ Return the minimum and maximum element of an iterator, as determined by","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":49958,"byte_end":50033,"line_start":1541,"line_end":1541,"column_start":5,"column_end":80}},{"value":"/ the specified comparison function.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":50038,"byte_end":50076,"line_start":1542,"line_end":1542,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":50081,"byte_end":50084,"line_start":1543,"line_end":1543,"column_start":5,"column_end":8}},{"value":"/ The return value is a variant of `MinMaxResult` like for `minmax()`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":50089,"byte_end":50161,"line_start":1544,"line_end":1544,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":50166,"byte_end":50169,"line_start":1545,"line_end":1545,"column_start":5,"column_end":8}},{"value":"/ For the minimum, the first minimal element is returned.  For the maximum,","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":50174,"byte_end":50251,"line_start":1546,"line_end":1546,"column_start":5,"column_end":82}},{"value":"/ the last maximal element wins.  This matches the behavior of the standard","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":50256,"byte_end":50333,"line_start":1547,"line_end":1547,"column_start":5,"column_end":82}},{"value":"/ `Iterator::min()` and `Iterator::max()` methods.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":50338,"byte_end":50390,"line_start":1548,"line_end":1548,"column_start":5,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":1513},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":51120,"byte_end":51125,"line_start":1573,"line_end":1573,"column_start":8,"column_end":13},"name":"equal","qualname":"::equal","value":"pub fn equal<I, J>(I, J) -> bool where I: IntoIterator, J: IntoIterator,\nI::Item: PartialEq<J::Item>","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if both iterators produce equal sequences\n (elements pairwise equal and sequences of the same length),\n `false` otherwise.","sig":null,"attributes":[{"value":"/ Return `true` if both iterators produce equal sequences","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":50739,"byte_end":50798,"line_start":1562,"line_end":1562,"column_start":1,"column_end":60}},{"value":"/ (elements pairwise equal and sequences of the same length),","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":50799,"byte_end":50862,"line_start":1563,"line_end":1563,"column_start":1,"column_end":64}},{"value":"/ `false` otherwise.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":50863,"byte_end":50885,"line_start":1564,"line_end":1564,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":50886,"byte_end":50889,"line_start":1565,"line_end":1565,"column_start":1,"column_end":4}},{"value":"/ **Note:** the standard library method `Iterator::eq` now provides","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":50890,"byte_end":50959,"line_start":1566,"line_end":1566,"column_start":1,"column_end":70}},{"value":"/ the same functionality.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":50960,"byte_end":50987,"line_start":1567,"line_end":1567,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":50988,"byte_end":50991,"line_start":1568,"line_end":1568,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":50992,"byte_end":50999,"line_start":1569,"line_end":1569,"column_start":1,"column_end":8}},{"value":"/ assert!(itertools::equal(vec![1, 2, 3], 1..4));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":51000,"byte_end":51051,"line_start":1570,"line_end":1570,"column_start":1,"column_end":52}},{"value":"/ assert!(!itertools::equal(&[0, 0], &[0, 0, 0]));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":51052,"byte_end":51104,"line_start":1571,"line_end":1571,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":51105,"byte_end":51112,"line_start":1572,"line_end":1572,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1516},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":51953,"byte_end":51965,"line_start":1601,"line_end":1601,"column_start":8,"column_end":20},"name":"assert_equal","qualname":"::assert_equal","value":"pub fn assert_equal<I, J>(I, J) where I: IntoIterator, J: IntoIterator,\nI::Item: fmt::Debug + PartialEq<J::Item>, J::Item: fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":" Assert that two iterators produce equal sequences, with the same\n semantics as *equal(a, b)*.","sig":null,"attributes":[{"value":"/ Assert that two iterators produce equal sequences, with the same","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":51571,"byte_end":51639,"line_start":1591,"line_end":1591,"column_start":1,"column_end":69}},{"value":"/ semantics as *equal(a, b)*.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":51640,"byte_end":51671,"line_start":1592,"line_end":1592,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":51672,"byte_end":51675,"line_start":1593,"line_end":1593,"column_start":1,"column_end":4}},{"value":"/ **Panics** on assertion failure with a message that shows the","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":51676,"byte_end":51741,"line_start":1594,"line_end":1594,"column_start":1,"column_end":66}},{"value":"/ two iteration elements.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":51742,"byte_end":51769,"line_start":1595,"line_end":1595,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":51770,"byte_end":51773,"line_start":1596,"line_end":1596,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":51774,"byte_end":51787,"line_start":1597,"line_end":1597,"column_start":1,"column_end":14}},{"value":"/ assert_equal(\"exceed\".split('c'), \"excess\".split('c'));","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":51788,"byte_end":51847,"line_start":1598,"line_end":1598,"column_start":1,"column_end":60}},{"value":"/ // ^PANIC: panicked at 'Failed assertion Some(\"eed\") == Some(\"ess\") for iteration 1',","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":51848,"byte_end":51937,"line_start":1599,"line_end":1599,"column_start":1,"column_end":90}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":51938,"byte_end":51945,"line_start":1600,"line_end":1600,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1519},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":53192,"byte_end":53201,"line_start":1643,"line_end":1643,"column_start":8,"column_end":17},"name":"partition","qualname":"::partition","value":"pub fn partition<'a, A: 'a, I, F>(I, F) -> usize where I: IntoIterator<Item =\n&'a mut A>, I::IntoIter: DoubleEndedIterator, F: FnMut(&A) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Partition a sequence using predicate `pred` so that elements\n that map to `true` are placed before elements which map to `false`.","sig":null,"attributes":[{"value":"/ Partition a sequence using predicate `pred` so that elements","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":52653,"byte_end":52717,"line_start":1626,"line_end":1626,"column_start":1,"column_end":65}},{"value":"/ that map to `true` are placed before elements which map to `false`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":52718,"byte_end":52789,"line_start":1627,"line_end":1627,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":52790,"byte_end":52793,"line_start":1628,"line_end":1628,"column_start":1,"column_end":4}},{"value":"/ The order within the partitions is arbitrary.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":52794,"byte_end":52843,"line_start":1629,"line_end":1629,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":52844,"byte_end":52847,"line_start":1630,"line_end":1630,"column_start":1,"column_end":4}},{"value":"/ Return the index of the split point.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":52848,"byte_end":52888,"line_start":1631,"line_end":1631,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":52889,"byte_end":52892,"line_start":1632,"line_end":1632,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":52893,"byte_end":52900,"line_start":1633,"line_end":1633,"column_start":1,"column_end":8}},{"value":"/ use itertools::partition;","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":52901,"byte_end":52930,"line_start":1634,"line_end":1634,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":52931,"byte_end":52934,"line_start":1635,"line_end":1635,"column_start":1,"column_end":4}},{"value":"/ # // use repeated numbers to not promise any ordering","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":52935,"byte_end":52992,"line_start":1636,"line_end":1636,"column_start":1,"column_end":58}},{"value":"/ let mut data = [7, 1, 1, 7, 1, 1, 7];","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":52993,"byte_end":53034,"line_start":1637,"line_end":1637,"column_start":1,"column_end":42}},{"value":"/ let split_index = partition(&mut data, |elt| *elt >= 3);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":53035,"byte_end":53095,"line_start":1638,"line_end":1638,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":53096,"byte_end":53099,"line_start":1639,"line_end":1639,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(data, [7, 7, 7, 1, 1, 1, 1]);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":53100,"byte_end":53144,"line_start":1640,"line_end":1640,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(split_index, 3);","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":53145,"byte_end":53176,"line_start":1641,"line_end":1641,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":53177,"byte_end":53184,"line_start":1642,"line_end":1642,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1527},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":54019,"byte_end":54023,"line_start":1671,"line_end":1671,"column_start":5,"column_end":9},"name":"Left","qualname":"::Partition::Left","value":"Partition::Left(L)","parent":{"krate":0,"index":1524},"children":[],"decl_id":null,"docs":" Classify into the left partition.\n","sig":null,"attributes":[{"value":"/ Classify into the left partition.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":53977,"byte_end":54014,"line_start":1670,"line_end":1670,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1530},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":54075,"byte_end":54080,"line_start":1673,"line_end":1673,"column_start":5,"column_end":10},"name":"Right","qualname":"::Partition::Right","value":"Partition::Right(R)","parent":{"krate":0,"index":1524},"children":[],"decl_id":null,"docs":" Classify into the right partition.\n","sig":null,"attributes":[{"value":"/ Classify into the right partition.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":54032,"byte_end":54070,"line_start":1672,"line_end":1672,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":1524},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":53955,"byte_end":53964,"line_start":1669,"line_end":1669,"column_start":10,"column_end":19},"name":"Partition","qualname":"::Partition","value":"pub enum Partition<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1527},{"krate":0,"index":1530}],"decl_id":null,"docs":" Classifies the result of the `.partition_map()` closure into a\n partition.\n","sig":null,"attributes":[{"value":"/ Classifies the result of the `.partition_map()` closure into a","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":53864,"byte_end":53930,"line_start":1667,"line_end":1667,"column_start":1,"column_end":67}},{"value":"/ partition.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":53931,"byte_end":53945,"line_start":1668,"line_end":1668,"column_start":1,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1535},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":54318,"byte_end":54326,"line_start":1682,"line_end":1682,"column_start":5,"column_end":13},"name":"Continue","qualname":"::FoldWhile::Continue","value":"FoldWhile::Continue(T)","parent":{"krate":0,"index":1533},"children":[],"decl_id":null,"docs":" Continue folding with this value\n","sig":null,"attributes":[{"value":"/ Continue folding with this value","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":54277,"byte_end":54313,"line_start":1681,"line_end":1681,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1538},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":54387,"byte_end":54391,"line_start":1684,"line_end":1684,"column_start":5,"column_end":9},"name":"Done","qualname":"::FoldWhile::Done","value":"FoldWhile::Done(T)","parent":{"krate":0,"index":1533},"children":[],"decl_id":null,"docs":" Fold is complete and will return this value\n","sig":null,"attributes":[{"value":"/ Fold is complete and will return this value","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":54335,"byte_end":54382,"line_start":1683,"line_end":1683,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":1533},"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":54258,"byte_end":54267,"line_start":1680,"line_end":1680,"column_start":10,"column_end":19},"name":"FoldWhile","qualname":"::FoldWhile","value":"pub enum FoldWhile<T> { Continue(T), Done(T), }","parent":null,"children":[{"krate":0,"index":1535},{"krate":0,"index":1538}],"decl_id":null,"docs":" An enum used for controlling the execution of `.fold_while()`.\n \n See [`.fold_while()`](trait.Itertools.html#method.fold_while) for more information.\n","sig":null,"attributes":[{"value":"/ An enum used for controlling the execution of `.fold_while()`.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":54089,"byte_end":54155,"line_start":1677,"line_end":1677,"column_start":1,"column_end":67}},{"value":"/ ","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":54156,"byte_end":54160,"line_start":1678,"line_end":1678,"column_start":1,"column_end":5}},{"value":"/ See [`.fold_while()`](trait.Itertools.html#method.fold_while) for more information.","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":54161,"byte_end":54248,"line_start":1679,"line_end":1679,"column_start":1,"column_end":88}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":55470,"byte_end":55480,"line_start":43,"line_end":43,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":55765,"byte_end":55775,"line_start":57,"line_end":57,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":56695,"byte_end":56713,"line_start":96,"line_end":96,"column_start":12,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":57030,"byte_end":57048,"line_start":110,"line_end":110,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":58817,"byte_end":58824,"line_start":171,"line_end":171,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":59669,"byte_end":59676,"line_start":208,"line_end":208,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":60360,"byte_end":60368,"line_start":235,"line_end":235,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":60986,"byte_end":60994,"line_start":264,"line_end":264,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":61378,"byte_end":61386,"line_start":281,"line_end":281,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":61948,"byte_end":61955,"line_start":306,"line_end":306,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":62353,"byte_end":62360,"line_start":325,"line_end":325,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":63928,"byte_end":63936,"line_start":377,"line_end":377,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":64109,"byte_end":64117,"line_start":384,"line_end":384,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":64850,"byte_end":64857,"line_start":415,"line_end":415,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":65145,"byte_end":65152,"line_start":429,"line_end":429,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":66754,"byte_end":66758,"line_start":483,"line_end":483,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":67054,"byte_end":67058,"line_start":498,"line_end":498,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":67656,"byte_end":67660,"line_start":525,"line_end":525,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":67876,"byte_end":67885,"line_start":540,"line_end":540,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":68117,"byte_end":68126,"line_start":551,"line_end":551,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":69552,"byte_end":69557,"line_start":600,"line_end":600,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":70078,"byte_end":70083,"line_start":625,"line_end":625,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":71166,"byte_end":71173,"line_start":670,"line_end":670,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":71441,"byte_end":71448,"line_start":682,"line_end":682,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":73587,"byte_end":73596,"line_start":765,"line_end":765,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":74432,"byte_end":74441,"line_start":796,"line_end":796,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":74869,"byte_end":74878,"line_start":816,"line_end":816,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":75036,"byte_end":75048,"line_start":828,"line_end":828,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":76205,"byte_end":76213,"line_start":869,"line_end":869,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":76367,"byte_end":76375,"line_start":878,"line_end":878,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":76674,"byte_end":76682,"line_start":893,"line_end":893,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":77238,"byte_end":77243,"line_start":917,"line_end":917,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":77385,"byte_end":77390,"line_start":926,"line_end":926,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":77653,"byte_end":77658,"line_start":940,"line_end":940,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":78255,"byte_end":78265,"line_start":966,"line_end":966,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":78412,"byte_end":78422,"line_start":975,"line_end":975,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":78695,"byte_end":78705,"line_start":989,"line_end":989,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":79297,"byte_end":79309,"line_start":1013,"line_end":1013,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":79554,"byte_end":79566,"line_start":1022,"line_end":1022,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":80452,"byte_end":80461,"line_start":1058,"line_end":1058,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":80604,"byte_end":80613,"line_start":1065,"line_end":1065,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":81267,"byte_end":81279,"line_start":1092,"line_end":1092,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":81569,"byte_end":81581,"line_start":1105,"line_end":1105,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":82944,"byte_end":82954,"line_start":1153,"line_end":1153,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":83890,"byte_end":83900,"line_start":1199,"line_end":1199,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":483},{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":84398,"byte_end":84411,"line_start":1219,"line_end":1219,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":85011,"byte_end":85024,"line_start":1245,"line_end":1245,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":86807,"byte_end":86815,"line_start":1308,"line_end":1308,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":87121,"byte_end":87129,"line_start":1322,"line_end":1322,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":87812,"byte_end":87818,"line_start":1350,"line_end":1350,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":89319,"byte_end":89326,"line_start":1409,"line_end":1409,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":89608,"byte_end":89615,"line_start":1422,"line_end":1422,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":89838,"byte_end":89845,"line_start":1432,"line_end":1432,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":90033,"byte_end":90040,"line_start":1441,"line_end":1441,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/format.rs","byte_start":99692,"byte_end":99698,"line_start":49,"line_end":49,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/format.rs","byte_start":100335,"byte_end":100348,"line_start":70,"line_end":70,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":101642,"byte_end":101643,"line_start":10,"line_end":10,"column_start":46,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":662},{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":101931,"byte_end":101941,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":102137,"byte_end":102147,"line_start":39,"line_end":39,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":103115,"byte_end":103125,"line_start":75,"line_end":75,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":109463,"byte_end":109473,"line_start":259,"line_end":259,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":111208,"byte_end":111219,"line_start":315,"line_end":315,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":723},{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":112367,"byte_end":112373,"line_start":360,"line_end":360,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":113287,"byte_end":113292,"line_start":396,"line_end":396,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":113463,"byte_end":113468,"line_start":405,"line_end":405,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":766},{"krate":0,"index":767}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":115207,"byte_end":115217,"line_start":468,"line_end":468,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":776},{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":116136,"byte_end":116142,"line_start":509,"line_end":509,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":791},{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":116901,"byte_end":116906,"line_start":542,"line_end":542,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":117065,"byte_end":117070,"line_start":551,"line_end":551,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":807},{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/intersperse.rs","byte_start":117808,"byte_end":117819,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/intersperse.rs","byte_start":118116,"byte_end":118127,"line_start":35,"line_end":35,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/islice.rs","byte_start":119398,"byte_end":119404,"line_start":26,"line_end":26,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/islice.rs","byte_start":119827,"byte_end":119833,"line_start":44,"line_end":44,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/islice.rs","byte_start":120606,"byte_end":120612,"line_start":75,"line_end":75,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/kmerge.rs","byte_start":123970,"byte_end":123978,"line_start":32,"line_end":32,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":890},{"krate":0,"index":892},{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/kmerge.rs","byte_start":124874,"byte_end":124882,"line_start":63,"line_end":63,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/kmerge.rs","byte_start":125055,"byte_end":125063,"line_start":72,"line_end":72,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/kmerge.rs","byte_start":125227,"byte_end":125235,"line_start":81,"line_end":81,"column_start":16,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/kmerge.rs","byte_start":125311,"byte_end":125319,"line_start":86,"line_end":86,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/kmerge.rs","byte_start":125836,"byte_end":125844,"line_start":111,"line_end":111,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/kmerge.rs","byte_start":127692,"byte_end":127698,"line_start":176,"line_end":176,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/kmerge.rs","byte_start":127867,"byte_end":127873,"line_start":185,"line_end":185,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/linspace.rs","byte_start":128783,"byte_end":128791,"line_start":15,"line_end":15,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/linspace.rs","byte_start":129385,"byte_end":129393,"line_start":40,"line_end":40,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/linspace.rs","byte_start":129833,"byte_end":129841,"line_start":57,"line_end":57,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/minmax.rs","byte_start":131119,"byte_end":131131,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":136095,"byte_end":136105,"line_start":67,"line_end":67,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":136269,"byte_end":136279,"line_start":75,"line_end":75,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":136626,"byte_end":136636,"line_start":90,"line_end":90,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":137239,"byte_end":137248,"line_start":116,"line_end":116,"column_start":23,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":137275,"byte_end":137284,"line_start":118,"line_end":118,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":137389,"byte_end":137396,"line_start":124,"line_end":124,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":137497,"byte_end":137502,"line_start":130,"line_end":130,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1023},{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/pad_tail.rs","byte_start":140790,"byte_end":140798,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1071}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/pad_tail.rs","byte_start":141141,"byte_end":141149,"line_start":33,"line_end":33,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/pad_tail.rs","byte_start":141912,"byte_end":141920,"line_start":64,"line_end":64,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1081}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/pad_tail.rs","byte_start":142377,"byte_end":142385,"line_start":81,"line_end":81,"column_start":34,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/rciter.rs","byte_start":142782,"byte_end":142788,"line_start":14,"line_end":14,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1100}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/rciter.rs","byte_start":142944,"byte_end":142950,"line_start":21,"line_end":21,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1103}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/rciter.rs","byte_start":143085,"byte_end":143091,"line_start":28,"line_end":28,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/rciter.rs","byte_start":143650,"byte_end":143656,"line_start":47,"line_end":47,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/repeatn.rs","byte_start":144197,"byte_end":144204,"line_start":8,"line_end":8,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1126}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/repeatn.rs","byte_start":144517,"byte_end":144524,"line_start":22,"line_end":22,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/repeatn.rs","byte_start":144914,"byte_end":144921,"line_start":42,"line_end":42,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1134}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/repeatn.rs","byte_start":145071,"byte_end":145078,"line_start":51,"line_end":51,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":145731,"byte_end":145741,"line_start":27,"line_end":27,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":145932,"byte_end":145942,"line_start":36,"line_end":36,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1150}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":146209,"byte_end":146219,"line_start":51,"line_end":51,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":147627,"byte_end":147633,"line_start":103,"line_end":103,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1159}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":148021,"byte_end":148027,"line_start":117,"line_end":117,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":152151,"byte_end":152157,"line_start":31,"line_end":31,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":152196,"byte_end":152202,"line_start":32,"line_end":32,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":152255,"byte_end":152261,"line_start":33,"line_end":33,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":152614,"byte_end":152623,"line_start":48,"line_end":48,"column_start":29,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":152676,"byte_end":152685,"line_start":49,"line_end":49,"column_start":29,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":152723,"byte_end":152729,"line_start":51,"line_end":51,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":153098,"byte_end":153107,"line_start":65,"line_end":65,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1243}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":160311,"byte_end":160317,"line_start":277,"line_end":277,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":160401,"byte_end":160410,"line_start":283,"line_end":283,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1253}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":160887,"byte_end":160896,"line_start":298,"line_end":298,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1258}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/tee.rs","byte_start":162137,"byte_end":162140,"line_start":34,"line_end":34,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/tee.rs","byte_start":163237,"byte_end":163240,"line_start":72,"line_end":72,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_eq.rs","byte_start":163736,"byte_end":163741,"line_start":20,"line_end":20,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1304}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_eq.rs","byte_start":164319,"byte_end":164324,"line_start":40,"line_end":40,"column_start":34,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_longest.rs","byte_start":165020,"byte_end":165030,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1338}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_longest.rs","byte_start":165291,"byte_end":165301,"line_start":34,"line_end":34,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1344}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_longest.rs","byte_start":165881,"byte_end":165891,"line_start":56,"line_end":56,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1348}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_longest.rs","byte_start":166642,"byte_end":166652,"line_start":76,"line_end":76,"column_start":34,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/ziptuple.rs","byte_start":168193,"byte_end":168196,"line_start":31,"line_end":31,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1361}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":171406,"byte_end":171415,"line_start":32,"line_end":32,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":171919,"byte_end":171928,"line_start":50,"line_end":50,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1379}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":172468,"byte_end":172477,"line_start":71,"line_end":71,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1385}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":173120,"byte_end":173129,"line_start":99,"line_end":99,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1389}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":173595,"byte_end":173604,"line_start":119,"line_end":119,"column_start":34,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":173682,"byte_end":173691,"line_start":124,"line_end":124,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":50714,"byte_end":50715,"line_start":1560,"line_end":1560,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":2917,"byte_end":2921,"line_start":98,"line_end":98,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":536}},{"kind":"Mod","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":3037,"byte_end":3041,"line_start":107,"line_end":107,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":969}},{"kind":"Mod","span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":3103,"byte_end":3112,"line_start":112,"line_end":112,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1167}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":55470,"byte_end":55480,"line_start":43,"line_end":43,"column_start":12,"column_end":22},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1541},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":55765,"byte_end":55775,"line_start":57,"line_end":57,"column_start":25,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1541},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":56695,"byte_end":56713,"line_start":96,"line_end":96,"column_start":12,"column_end":30},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":57030,"byte_end":57048,"line_start":110,"line_end":110,"column_start":25,"column_end":43},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1551},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":58817,"byte_end":58824,"line_start":171,"line_end":171,"column_start":9,"column_end":16},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":59669,"byte_end":59676,"line_start":208,"line_end":208,"column_start":22,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1561},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":60360,"byte_end":60368,"line_start":235,"line_end":235,"column_start":19,"column_end":27},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":60986,"byte_end":60994,"line_start":264,"line_end":264,"column_start":32,"column_end":40},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":254},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":61378,"byte_end":61386,"line_start":281,"line_end":281,"column_start":29,"column_end":37},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":254},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":61948,"byte_end":61955,"line_start":306,"line_end":306,"column_start":12,"column_end":19},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":62353,"byte_end":62360,"line_start":325,"line_end":325,"column_start":25,"column_end":32},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1568},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":63928,"byte_end":63936,"line_start":377,"line_end":377,"column_start":12,"column_end":20},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1579},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":64109,"byte_end":64117,"line_start":384,"line_end":384,"column_start":28,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1579},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":64850,"byte_end":64857,"line_start":415,"line_end":415,"column_start":15,"column_end":22},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":65145,"byte_end":65152,"line_start":429,"line_end":429,"column_start":28,"column_end":35},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1588},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":66754,"byte_end":66758,"line_start":483,"line_end":483,"column_start":9,"column_end":13},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1601},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":67054,"byte_end":67058,"line_start":498,"line_end":498,"column_start":22,"column_end":26},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1601},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":67656,"byte_end":67660,"line_start":525,"line_end":525,"column_start":31,"column_end":35},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1601},"to":{"krate":2,"index":7050}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":67876,"byte_end":67885,"line_start":540,"line_end":540,"column_start":22,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":314},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":68117,"byte_end":68126,"line_start":551,"line_end":551,"column_start":12,"column_end":21},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":69552,"byte_end":69557,"line_start":600,"line_end":600,"column_start":22,"column_end":27},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":330},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":70078,"byte_end":70083,"line_start":625,"line_end":625,"column_start":25,"column_end":30},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":330},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":71166,"byte_end":71173,"line_start":670,"line_end":670,"column_start":25,"column_end":32},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":348},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":71441,"byte_end":71448,"line_start":682,"line_end":682,"column_start":28,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":348},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":73587,"byte_end":73596,"line_start":765,"line_end":765,"column_start":19,"column_end":28},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":74432,"byte_end":74441,"line_start":796,"line_end":796,"column_start":22,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1608},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":74869,"byte_end":74878,"line_start":816,"line_end":816,"column_start":31,"column_end":40},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1608},"to":{"krate":2,"index":7050}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":75036,"byte_end":75048,"line_start":828,"line_end":828,"column_start":9,"column_end":21},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1616},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":76205,"byte_end":76213,"line_start":869,"line_end":869,"column_start":36,"column_end":44},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":386},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":76367,"byte_end":76375,"line_start":878,"line_end":878,"column_start":12,"column_end":20},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":386},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":76674,"byte_end":76682,"line_start":893,"line_end":893,"column_start":25,"column_end":33},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":386},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":77238,"byte_end":77243,"line_start":917,"line_end":917,"column_start":26,"column_end":31},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":405},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":77385,"byte_end":77390,"line_start":926,"line_end":926,"column_start":9,"column_end":14},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":405},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":77653,"byte_end":77658,"line_start":940,"line_end":940,"column_start":22,"column_end":27},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":405},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":78255,"byte_end":78265,"line_start":966,"line_end":966,"column_start":26,"column_end":36},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":420},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":78412,"byte_end":78422,"line_start":975,"line_end":975,"column_start":9,"column_end":19},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":78695,"byte_end":78705,"line_start":989,"line_end":989,"column_start":22,"column_end":32},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":420},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":79297,"byte_end":79309,"line_start":1013,"line_end":1013,"column_start":16,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":79554,"byte_end":79566,"line_start":1022,"line_end":1022,"column_start":29,"column_end":41},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":434},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":80452,"byte_end":80461,"line_start":1058,"line_end":1058,"column_start":9,"column_end":18},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1623},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":80604,"byte_end":80613,"line_start":1065,"line_end":1065,"column_start":25,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1623},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":81267,"byte_end":81279,"line_start":1092,"line_end":1092,"column_start":9,"column_end":21},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":81569,"byte_end":81581,"line_start":1105,"line_end":1105,"column_start":22,"column_end":34},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1629},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":82944,"byte_end":82954,"line_start":1153,"line_end":1153,"column_start":9,"column_end":19},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":470},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":83890,"byte_end":83900,"line_start":1199,"line_end":1199,"column_start":26,"column_end":36},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":470},"to":{"krate":2,"index":3111}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":84398,"byte_end":84411,"line_start":1219,"line_end":1219,"column_start":9,"column_end":22},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":85011,"byte_end":85024,"line_start":1245,"line_end":1245,"column_start":22,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":486},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":86807,"byte_end":86815,"line_start":1308,"line_end":1308,"column_start":25,"column_end":33},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":87121,"byte_end":87129,"line_start":1322,"line_end":1322,"column_start":28,"column_end":36},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1637},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":87812,"byte_end":87818,"line_start":1350,"line_end":1350,"column_start":22,"column_end":28},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1649},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":89319,"byte_end":89326,"line_start":1409,"line_end":1409,"column_start":9,"column_end":16},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":89608,"byte_end":89615,"line_start":1422,"line_end":1422,"column_start":22,"column_end":29},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":518},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":89838,"byte_end":89845,"line_start":1432,"line_end":1432,"column_start":33,"column_end":40},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":518},"to":{"krate":2,"index":7025}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/adaptors.rs","byte_start":90033,"byte_end":90040,"line_start":1441,"line_end":1441,"column_start":19,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":518},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/format.rs","byte_start":99692,"byte_end":99698,"line_start":49,"line_end":49,"column_start":33,"column_end":39},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":618},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/format.rs","byte_start":100335,"byte_end":100348,"line_start":70,"line_end":70,"column_start":13,"column_end":26},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1655},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":101642,"byte_end":101643,"line_start":10,"line_end":10,"column_start":46,"column_end":47},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":661},"to":{"krate":0,"index":653}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":101931,"byte_end":101941,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":102137,"byte_end":102147,"line_start":39,"line_end":39,"column_start":32,"column_end":42},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":664},"to":{"krate":0,"index":653}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":103115,"byte_end":103125,"line_start":75,"line_end":75,"column_start":15,"column_end":25},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":675},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":109463,"byte_end":109473,"line_start":259,"line_end":259,"column_start":15,"column_end":25},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":675},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":111208,"byte_end":111219,"line_start":315,"line_end":315,"column_start":15,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":709},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":112367,"byte_end":112373,"line_start":360,"line_end":360,"column_start":32,"column_end":38},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":733},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":113287,"byte_end":113292,"line_start":396,"line_end":396,"column_start":28,"column_end":33},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":747},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":113463,"byte_end":113468,"line_start":405,"line_end":405,"column_start":32,"column_end":37},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":747},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":115207,"byte_end":115217,"line_start":468,"line_end":468,"column_start":9,"column_end":19},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":116136,"byte_end":116142,"line_start":509,"line_end":509,"column_start":26,"column_end":32},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":784},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":116901,"byte_end":116906,"line_start":542,"line_end":542,"column_start":22,"column_end":27},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":794},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/groupbylazy.rs","byte_start":117065,"byte_end":117070,"line_start":551,"line_end":551,"column_start":26,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":794},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/intersperse.rs","byte_start":117808,"byte_end":117819,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1702},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/intersperse.rs","byte_start":118116,"byte_end":118127,"line_start":35,"line_end":35,"column_start":22,"column_end":33},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1702},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/islice.rs","byte_start":119398,"byte_end":119404,"line_start":26,"line_end":26,"column_start":9,"column_end":15},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/islice.rs","byte_start":119827,"byte_end":119833,"line_start":44,"line_end":44,"column_start":22,"column_end":28},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1710},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/islice.rs","byte_start":120606,"byte_end":120612,"line_start":75,"line_end":75,"column_start":31,"column_end":37},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1710},"to":{"krate":2,"index":7050}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/kmerge.rs","byte_start":123970,"byte_end":123978,"line_start":32,"line_end":32,"column_start":9,"column_end":17},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/kmerge.rs","byte_start":124874,"byte_end":124882,"line_start":63,"line_end":63,"column_start":19,"column_end":27},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/kmerge.rs","byte_start":125055,"byte_end":125063,"line_start":72,"line_end":72,"column_start":23,"column_end":31},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":2477}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/kmerge.rs","byte_start":125227,"byte_end":125235,"line_start":81,"line_end":81,"column_start":16,"column_end":24},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":2482}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/kmerge.rs","byte_start":125311,"byte_end":125319,"line_start":86,"line_end":86,"column_start":24,"column_end":32},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":2520}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/kmerge.rs","byte_start":125836,"byte_end":125844,"line_start":111,"line_end":111,"column_start":17,"column_end":25},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/kmerge.rs","byte_start":127692,"byte_end":127698,"line_start":176,"line_end":176,"column_start":19,"column_end":25},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":916},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/kmerge.rs","byte_start":127867,"byte_end":127873,"line_start":185,"line_end":185,"column_start":22,"column_end":28},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":916},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/linspace.rs","byte_start":128783,"byte_end":128791,"line_start":15,"line_end":15,"column_start":22,"column_end":30},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1720},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/linspace.rs","byte_start":129385,"byte_end":129393,"line_start":40,"line_end":40,"column_start":33,"column_end":41},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1720},"to":{"krate":2,"index":7025}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/linspace.rs","byte_start":129833,"byte_end":129841,"line_start":57,"line_end":57,"column_start":31,"column_end":39},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1720},"to":{"krate":2,"index":7050}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/minmax.rs","byte_start":131119,"byte_end":131131,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1732},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":136095,"byte_end":136105,"line_start":67,"line_end":67,"column_start":9,"column_end":19},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":136269,"byte_end":136279,"line_start":75,"line_end":75,"column_start":28,"column_end":38},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1882},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":136626,"byte_end":136636,"line_start":90,"line_end":90,"column_start":39,"column_end":49},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1882},"to":{"krate":2,"index":7025}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":137239,"byte_end":137248,"line_start":116,"line_end":116,"column_start":23,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":2,"index":35933},"to":{"krate":0,"index":1014}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":137275,"byte_end":137284,"line_start":118,"line_end":118,"column_start":23,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":2,"index":35974},"to":{"krate":0,"index":1014}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":137389,"byte_end":137396,"line_start":124,"line_end":124,"column_start":23,"column_end":30},"kind":{"Impl":{"id":91}},"from":{"krate":2,"index":35995},"to":{"krate":0,"index":1014}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":137497,"byte_end":137502,"line_start":130,"line_end":130,"column_start":23,"column_end":28},"kind":{"Impl":{"id":92}},"from":{"krate":2,"index":35949},"to":{"krate":0,"index":1014}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/misc.rs","byte_start":137732,"byte_end":137736,"line_start":140,"line_end":140,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2832},"to":{"krate":0,"index":1025}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/pad_tail.rs","byte_start":140790,"byte_end":140798,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1888},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/pad_tail.rs","byte_start":141141,"byte_end":141149,"line_start":33,"line_end":33,"column_start":25,"column_end":33},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1888},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/pad_tail.rs","byte_start":141912,"byte_end":141920,"line_start":64,"line_end":64,"column_start":36,"column_end":44},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1888},"to":{"krate":2,"index":7025}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/pad_tail.rs","byte_start":142377,"byte_end":142385,"line_start":81,"line_end":81,"column_start":34,"column_end":42},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1888},"to":{"krate":2,"index":7050}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/rciter.rs","byte_start":142782,"byte_end":142788,"line_start":14,"line_end":14,"column_start":9,"column_end":15},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/rciter.rs","byte_start":142944,"byte_end":142950,"line_start":21,"line_end":21,"column_start":19,"column_end":25},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1095},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/rciter.rs","byte_start":143085,"byte_end":143091,"line_start":28,"line_end":28,"column_start":25,"column_end":31},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1095},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/rciter.rs","byte_start":143650,"byte_end":143656,"line_start":47,"line_end":47,"column_start":33,"column_end":39},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1095},"to":{"krate":2,"index":7025}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/repeatn.rs","byte_start":144197,"byte_end":144204,"line_start":8,"line_end":8,"column_start":9,"column_end":16},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/repeatn.rs","byte_start":144517,"byte_end":144524,"line_start":22,"line_end":22,"column_start":22,"column_end":29},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1120},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/repeatn.rs","byte_start":144914,"byte_end":144921,"line_start":42,"line_end":42,"column_start":33,"column_end":40},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1120},"to":{"krate":2,"index":7025}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/repeatn.rs","byte_start":145071,"byte_end":145078,"line_start":51,"line_end":51,"column_start":31,"column_end":38},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1120},"to":{"krate":2,"index":7050}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":145731,"byte_end":145741,"line_start":27,"line_end":27,"column_start":9,"column_end":19},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":145932,"byte_end":145942,"line_start":36,"line_end":36,"column_start":25,"column_end":35},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1138},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":146209,"byte_end":146219,"line_start":51,"line_end":51,"column_start":36,"column_end":46},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1138},"to":{"krate":2,"index":7025}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":147627,"byte_end":147633,"line_start":103,"line_end":103,"column_start":16,"column_end":22},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1899},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/sources.rs","byte_start":148021,"byte_end":148027,"line_start":117,"line_end":117,"column_start":29,"column_end":35},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1899},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":152151,"byte_end":152157,"line_start":31,"line_end":31,"column_start":22,"column_end":28},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1205},"to":{"krate":2,"index":2832}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":152196,"byte_end":152202,"line_start":32,"line_end":32,"column_start":29,"column_end":35},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1205},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":152255,"byte_end":152261,"line_start":33,"line_end":33,"column_start":29,"column_end":35},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1205},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":152614,"byte_end":152623,"line_start":48,"line_end":48,"column_start":29,"column_end":38},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":152676,"byte_end":152685,"line_start":49,"line_end":49,"column_start":29,"column_end":38},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":152723,"byte_end":152729,"line_start":51,"line_end":51,"column_start":13,"column_end":19},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":153098,"byte_end":153107,"line_start":65,"line_end":65,"column_start":13,"column_end":22},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":160311,"byte_end":160317,"line_start":277,"line_end":277,"column_start":23,"column_end":29},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1205},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":160401,"byte_end":160410,"line_start":283,"line_end":283,"column_start":13,"column_end":22},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/stride.rs","byte_start":160887,"byte_end":160896,"line_start":298,"line_end":298,"column_start":33,"column_end":42},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/tee.rs","byte_start":162137,"byte_end":162140,"line_start":34,"line_end":34,"column_start":22,"column_end":25},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1279},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/tee.rs","byte_start":163237,"byte_end":163240,"line_start":72,"line_end":72,"column_start":31,"column_end":34},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1279},"to":{"krate":2,"index":7050}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_eq.rs","byte_start":163736,"byte_end":163741,"line_start":20,"line_end":20,"column_start":25,"column_end":30},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1984},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_eq.rs","byte_start":164319,"byte_end":164324,"line_start":40,"line_end":40,"column_start":34,"column_end":39},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1984},"to":{"krate":2,"index":7050}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_longest.rs","byte_start":165020,"byte_end":165030,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1993},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_longest.rs","byte_start":165291,"byte_end":165301,"line_start":34,"line_end":34,"column_start":25,"column_end":35},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1993},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_longest.rs","byte_start":165881,"byte_end":165891,"line_start":56,"line_end":56,"column_start":36,"column_end":46},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1993},"to":{"krate":2,"index":7025}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zip_longest.rs","byte_start":166642,"byte_end":166652,"line_start":76,"line_end":76,"column_start":34,"column_end":44},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1993},"to":{"krate":2,"index":7050}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/ziptuple.rs","byte_start":168193,"byte_end":168196,"line_start":31,"line_end":31,"column_start":9,"column_end":12},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2038},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":171406,"byte_end":171415,"line_start":32,"line_end":32,"column_start":20,"column_end":29},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":171919,"byte_end":171928,"line_start":50,"line_end":50,"column_start":12,"column_end":21},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":172468,"byte_end":172477,"line_start":71,"line_end":71,"column_start":25,"column_end":34},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2251},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":173120,"byte_end":173129,"line_start":99,"line_end":99,"column_start":36,"column_end":45},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2251},"to":{"krate":2,"index":7025}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":173595,"byte_end":173604,"line_start":119,"line_end":119,"column_start":34,"column_end":43},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2251},"to":{"krate":2,"index":7050}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/zipslices.rs","byte_start":173682,"byte_end":173691,"line_start":124,"line_end":124,"column_start":29,"column_end":38},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2251},"to":{"krate":0,"index":1045}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":5880,"byte_end":5888,"line_start":206,"line_end":206,"column_start":23,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":7161},"to":{"krate":0,"index":1404}},{"span":{"file_name":"/home/jsmartini/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.4.19/src/lib.rs","byte_start":50714,"byte_end":50715,"line_start":1560,"line_end":1560,"column_start":31,"column_end":32},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1512},"to":{"krate":0,"index":1404}}]}